using System;
using System.Collections.Generic;
using Hl7.Fhir.Introspection;
using Hl7.Fhir.Validation;
using System.Linq;
using System.Runtime.Serialization;
using Hl7.Fhir.Utility;

/*
    Copyright (c) 2011+, HL7, Inc.
    All rights reserved.

    Redistribution and use in source and binary forms, with or without modification, 
    are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice, this 
        list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright notice, 
        this list of conditions and the following disclaimer in the documentation 
        and/or other materials provided with the distribution.
    * Neither the name of HL7 nor the names of its contributors may be used to 
        endorse or promote products derived from this software without specific 
        prior written permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
    ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
    WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
    IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
    INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
    NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
    WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
    POSSIBILITY OF SUCH DAMAGE.


*/
#pragma warning disable 1591 // suppress XML summary warnings

//
// Generated for FHIR v3.0.1
//
namespace Hl7.Fhir.Model.STU3
{
    /*
    * A class with methods to retrieve information about the
    * FHIR definitions based on which this assembly was generated.
    */
    public static partial class ModelInfo
    {
        public static List<string> SupportedResources =
            new List<string>
            {
                "Account",
                "ActivityDefinition",
                "AdverseEvent",
                "AllergyIntolerance",
                "Appointment",
                "AppointmentResponse",
                "AuditEvent",
                "Basic",
                "Binary",
                "BodySite",
                "Bundle",
                "CapabilityStatement",
                "CarePlan",
                "CareTeam",
                "ChargeItem",
                "Claim",
                "ClaimResponse",
                "ClinicalImpression",
                "CodeSystem",
                "Communication",
                "CommunicationRequest",
                "CompartmentDefinition",
                "Composition",
                "ConceptMap",
                "Condition",
                "Consent",
                "Contract",
                "Coverage",
                "DataElement",
                "DetectedIssue",
                "Device",
                "DeviceComponent",
                "DeviceMetric",
                "DeviceRequest",
                "DeviceUseStatement",
                "DiagnosticReport",
                "DocumentManifest",
                "DocumentReference",
                "EligibilityRequest",
                "EligibilityResponse",
                "Encounter",
                "Endpoint",
                "EnrollmentRequest",
                "EnrollmentResponse",
                "EpisodeOfCare",
                "ExpansionProfile",
                "ExplanationOfBenefit",
                "FamilyMemberHistory",
                "Flag",
                "Goal",
                "GraphDefinition",
                "Group",
                "GuidanceResponse",
                "HealthcareService",
                "ImagingManifest",
                "ImagingStudy",
                "Immunization",
                "ImmunizationRecommendation",
                "ImplementationGuide",
                "Library",
                "Linkage",
                "List",
                "Location",
                "Measure",
                "MeasureReport",
                "Media",
                "Medication",
                "MedicationAdministration",
                "MedicationDispense",
                "MedicationRequest",
                "MedicationStatement",
                "MessageDefinition",
                "MessageHeader",
                "NamingSystem",
                "NutritionOrder",
                "Observation",
                "OperationDefinition",
                "OperationOutcome",
                "Organization",
                "Parameters",
                "Patient",
                "PaymentNotice",
                "PaymentReconciliation",
                "Person",
                "PlanDefinition",
                "Practitioner",
                "PractitionerRole",
                "Procedure",
                "ProcedureRequest",
                "ProcessRequest",
                "ProcessResponse",
                "Provenance",
                "Questionnaire",
                "QuestionnaireResponse",
                "ReferralRequest",
                "RelatedPerson",
                "RequestGroup",
                "ResearchStudy",
                "ResearchSubject",
                "RiskAssessment",
                "Schedule",
                "SearchParameter",
                "Sequence",
                "ServiceDefinition",
                "Slot",
                "Specimen",
                "StructureDefinition",
                "StructureMap",
                "Subscription",
                "Substance",
                "SupplyDelivery",
                "SupplyRequest",
                "Task",
                "TestReport",
                "TestScript",
                "ValueSet",
                "VisionPrescription",
            };
    
        public static string Version
        {
            get { return "3.0.1"; }
        }
    
        public static Dictionary<string,Type> FhirTypeToCsType =
            new Dictionary<string,Type>()
            {
                { "Address", typeof(Hl7.Fhir.Model.Address) },
                { "Age", typeof(Hl7.Fhir.Model.Age) },
                { "Annotation", typeof(Hl7.Fhir.Model.Annotation) },
                { "Attachment", typeof(Hl7.Fhir.Model.Attachment) },
                { "BackboneElement", typeof(Hl7.Fhir.Model.BackboneElement) },
                { "base64Binary", typeof(Hl7.Fhir.Model.Base64Binary) },
                { "boolean", typeof(Hl7.Fhir.Model.FhirBoolean) },
                { "code", typeof(Hl7.Fhir.Model.Code) },
                { "CodeableConcept", typeof(Hl7.Fhir.Model.CodeableConcept) },
                { "Coding", typeof(Hl7.Fhir.Model.Coding) },
                { "ContactDetail", typeof(Hl7.Fhir.Model.STU3.ContactDetail) },
                { "ContactPoint", typeof(Hl7.Fhir.Model.STU3.ContactPoint) },
                { "Contributor", typeof(Hl7.Fhir.Model.STU3.Contributor) },
                { "Count", typeof(Hl7.Fhir.Model.Count) },
                { "DataRequirement", typeof(Hl7.Fhir.Model.STU3.DataRequirement) },
                { "date", typeof(Hl7.Fhir.Model.Date) },
                { "dateTime", typeof(Hl7.Fhir.Model.FhirDateTime) },
                { "decimal", typeof(Hl7.Fhir.Model.FhirDecimal) },
                { "Distance", typeof(Hl7.Fhir.Model.Distance) },
                { "Dosage", typeof(Hl7.Fhir.Model.STU3.Dosage) },
                { "Duration", typeof(Hl7.Fhir.Model.Duration) },
                { "Element", typeof(Hl7.Fhir.Model.Element) },
                { "ElementDefinition", typeof(Hl7.Fhir.Model.STU3.ElementDefinition) },
                { "Extension", typeof(Hl7.Fhir.Model.Extension) },
                { "HumanName", typeof(Hl7.Fhir.Model.STU3.HumanName) },
                { "id", typeof(Hl7.Fhir.Model.Id) },
                { "Identifier", typeof(Hl7.Fhir.Model.STU3.Identifier) },
                { "instant", typeof(Hl7.Fhir.Model.Instant) },
                { "integer", typeof(Hl7.Fhir.Model.Integer) },
                { "markdown", typeof(Hl7.Fhir.Model.Markdown) },
                { "Meta", typeof(Hl7.Fhir.Model.Meta) },
                { "Money", typeof(Hl7.Fhir.Model.Money) },
                { "Narrative", typeof(Hl7.Fhir.Model.Narrative) },
                { "oid", typeof(Hl7.Fhir.Model.Oid) },
                { "ParameterDefinition", typeof(Hl7.Fhir.Model.STU3.ParameterDefinition) },
                { "Period", typeof(Hl7.Fhir.Model.Period) },
                { "positiveInt", typeof(Hl7.Fhir.Model.PositiveInt) },
                { "Quantity", typeof(Hl7.Fhir.Model.Quantity) },
                { "Range", typeof(Hl7.Fhir.Model.Range) },
                { "Ratio", typeof(Hl7.Fhir.Model.Ratio) },
                { "Reference", typeof(Hl7.Fhir.Model.STU3.ResourceReference) },
                { "RelatedArtifact", typeof(Hl7.Fhir.Model.STU3.RelatedArtifact) },
                { "SampledData", typeof(Hl7.Fhir.Model.SampledData) },
                { "Signature", typeof(Hl7.Fhir.Model.STU3.Signature) },
                { "SimpleQuantity", typeof(Hl7.Fhir.Model.SimpleQuantity) },
                { "string", typeof(Hl7.Fhir.Model.FhirString) },
                { "time", typeof(Hl7.Fhir.Model.Time) },
                { "Timing", typeof(Hl7.Fhir.Model.STU3.Timing) },
                { "TriggerDefinition", typeof(Hl7.Fhir.Model.STU3.TriggerDefinition) },
                { "unsignedInt", typeof(Hl7.Fhir.Model.UnsignedInt) },
                { "uri", typeof(Hl7.Fhir.Model.FhirUri) },
                { "UsageContext", typeof(Hl7.Fhir.Model.STU3.UsageContext) },
                { "uuid", typeof(Hl7.Fhir.Model.Uuid) },
        
                { "Account", typeof(Hl7.Fhir.Model.STU3.Account) },
                { "ActivityDefinition", typeof(Hl7.Fhir.Model.STU3.ActivityDefinition) },
                { "AdverseEvent", typeof(Hl7.Fhir.Model.STU3.AdverseEvent) },
                { "AllergyIntolerance", typeof(Hl7.Fhir.Model.STU3.AllergyIntolerance) },
                { "Appointment", typeof(Hl7.Fhir.Model.STU3.Appointment) },
                { "AppointmentResponse", typeof(Hl7.Fhir.Model.STU3.AppointmentResponse) },
                { "AuditEvent", typeof(Hl7.Fhir.Model.STU3.AuditEvent) },
                { "Basic", typeof(Hl7.Fhir.Model.STU3.Basic) },
                { "Binary", typeof(Hl7.Fhir.Model.STU3.Binary) },
                { "BodySite", typeof(Hl7.Fhir.Model.STU3.BodySite) },
                { "Bundle", typeof(Hl7.Fhir.Model.STU3.Bundle) },
                { "CapabilityStatement", typeof(Hl7.Fhir.Model.STU3.CapabilityStatement) },
                { "CarePlan", typeof(Hl7.Fhir.Model.STU3.CarePlan) },
                { "CareTeam", typeof(Hl7.Fhir.Model.STU3.CareTeam) },
                { "ChargeItem", typeof(Hl7.Fhir.Model.STU3.ChargeItem) },
                { "Claim", typeof(Hl7.Fhir.Model.STU3.Claim) },
                { "ClaimResponse", typeof(Hl7.Fhir.Model.STU3.ClaimResponse) },
                { "ClinicalImpression", typeof(Hl7.Fhir.Model.STU3.ClinicalImpression) },
                { "CodeSystem", typeof(Hl7.Fhir.Model.STU3.CodeSystem) },
                { "Communication", typeof(Hl7.Fhir.Model.STU3.Communication) },
                { "CommunicationRequest", typeof(Hl7.Fhir.Model.STU3.CommunicationRequest) },
                { "CompartmentDefinition", typeof(Hl7.Fhir.Model.STU3.CompartmentDefinition) },
                { "Composition", typeof(Hl7.Fhir.Model.STU3.Composition) },
                { "ConceptMap", typeof(Hl7.Fhir.Model.STU3.ConceptMap) },
                { "Condition", typeof(Hl7.Fhir.Model.STU3.Condition) },
                { "Consent", typeof(Hl7.Fhir.Model.STU3.Consent) },
                { "Contract", typeof(Hl7.Fhir.Model.STU3.Contract) },
                { "Coverage", typeof(Hl7.Fhir.Model.STU3.Coverage) },
                { "DataElement", typeof(Hl7.Fhir.Model.STU3.DataElement) },
                { "DetectedIssue", typeof(Hl7.Fhir.Model.STU3.DetectedIssue) },
                { "Device", typeof(Hl7.Fhir.Model.STU3.Device) },
                { "DeviceComponent", typeof(Hl7.Fhir.Model.STU3.DeviceComponent) },
                { "DeviceMetric", typeof(Hl7.Fhir.Model.STU3.DeviceMetric) },
                { "DeviceRequest", typeof(Hl7.Fhir.Model.STU3.DeviceRequest) },
                { "DeviceUseStatement", typeof(Hl7.Fhir.Model.STU3.DeviceUseStatement) },
                { "DiagnosticReport", typeof(Hl7.Fhir.Model.STU3.DiagnosticReport) },
                { "DocumentManifest", typeof(Hl7.Fhir.Model.STU3.DocumentManifest) },
                { "DocumentReference", typeof(Hl7.Fhir.Model.STU3.DocumentReference) },
                { "DomainResource", typeof(Hl7.Fhir.Model.DomainResource) },
                { "EligibilityRequest", typeof(Hl7.Fhir.Model.STU3.EligibilityRequest) },
                { "EligibilityResponse", typeof(Hl7.Fhir.Model.STU3.EligibilityResponse) },
                { "Encounter", typeof(Hl7.Fhir.Model.STU3.Encounter) },
                { "Endpoint", typeof(Hl7.Fhir.Model.STU3.Endpoint) },
                { "EnrollmentRequest", typeof(Hl7.Fhir.Model.STU3.EnrollmentRequest) },
                { "EnrollmentResponse", typeof(Hl7.Fhir.Model.STU3.EnrollmentResponse) },
                { "EpisodeOfCare", typeof(Hl7.Fhir.Model.STU3.EpisodeOfCare) },
                { "ExpansionProfile", typeof(Hl7.Fhir.Model.STU3.ExpansionProfile) },
                { "ExplanationOfBenefit", typeof(Hl7.Fhir.Model.STU3.ExplanationOfBenefit) },
                { "FamilyMemberHistory", typeof(Hl7.Fhir.Model.STU3.FamilyMemberHistory) },
                { "Flag", typeof(Hl7.Fhir.Model.STU3.Flag) },
                { "Goal", typeof(Hl7.Fhir.Model.STU3.Goal) },
                { "GraphDefinition", typeof(Hl7.Fhir.Model.STU3.GraphDefinition) },
                { "Group", typeof(Hl7.Fhir.Model.STU3.Group) },
                { "GuidanceResponse", typeof(Hl7.Fhir.Model.STU3.GuidanceResponse) },
                { "HealthcareService", typeof(Hl7.Fhir.Model.STU3.HealthcareService) },
                { "ImagingManifest", typeof(Hl7.Fhir.Model.STU3.ImagingManifest) },
                { "ImagingStudy", typeof(Hl7.Fhir.Model.STU3.ImagingStudy) },
                { "Immunization", typeof(Hl7.Fhir.Model.STU3.Immunization) },
                { "ImmunizationRecommendation", typeof(Hl7.Fhir.Model.STU3.ImmunizationRecommendation) },
                { "ImplementationGuide", typeof(Hl7.Fhir.Model.STU3.ImplementationGuide) },
                { "Library", typeof(Hl7.Fhir.Model.STU3.Library) },
                { "Linkage", typeof(Hl7.Fhir.Model.STU3.Linkage) },
                { "List", typeof(Hl7.Fhir.Model.STU3.List) },
                { "Location", typeof(Hl7.Fhir.Model.STU3.Location) },
                { "Measure", typeof(Hl7.Fhir.Model.STU3.Measure) },
                { "MeasureReport", typeof(Hl7.Fhir.Model.STU3.MeasureReport) },
                { "Media", typeof(Hl7.Fhir.Model.STU3.Media) },
                { "Medication", typeof(Hl7.Fhir.Model.STU3.Medication) },
                { "MedicationAdministration", typeof(Hl7.Fhir.Model.STU3.MedicationAdministration) },
                { "MedicationDispense", typeof(Hl7.Fhir.Model.STU3.MedicationDispense) },
                { "MedicationRequest", typeof(Hl7.Fhir.Model.STU3.MedicationRequest) },
                { "MedicationStatement", typeof(Hl7.Fhir.Model.STU3.MedicationStatement) },
                { "MessageDefinition", typeof(Hl7.Fhir.Model.STU3.MessageDefinition) },
                { "MessageHeader", typeof(Hl7.Fhir.Model.STU3.MessageHeader) },
                { "NamingSystem", typeof(Hl7.Fhir.Model.STU3.NamingSystem) },
                { "NutritionOrder", typeof(Hl7.Fhir.Model.STU3.NutritionOrder) },
                { "Observation", typeof(Hl7.Fhir.Model.STU3.Observation) },
                { "OperationDefinition", typeof(Hl7.Fhir.Model.STU3.OperationDefinition) },
                { "OperationOutcome", typeof(Hl7.Fhir.Model.STU3.OperationOutcome) },
                { "Organization", typeof(Hl7.Fhir.Model.STU3.Organization) },
                { "Parameters", typeof(Hl7.Fhir.Model.Parameters) },
                { "Patient", typeof(Hl7.Fhir.Model.STU3.Patient) },
                { "PaymentNotice", typeof(Hl7.Fhir.Model.STU3.PaymentNotice) },
                { "PaymentReconciliation", typeof(Hl7.Fhir.Model.STU3.PaymentReconciliation) },
                { "Person", typeof(Hl7.Fhir.Model.STU3.Person) },
                { "PlanDefinition", typeof(Hl7.Fhir.Model.STU3.PlanDefinition) },
                { "Practitioner", typeof(Hl7.Fhir.Model.STU3.Practitioner) },
                { "PractitionerRole", typeof(Hl7.Fhir.Model.STU3.PractitionerRole) },
                { "Procedure", typeof(Hl7.Fhir.Model.STU3.Procedure) },
                { "ProcedureRequest", typeof(Hl7.Fhir.Model.STU3.ProcedureRequest) },
                { "ProcessRequest", typeof(Hl7.Fhir.Model.STU3.ProcessRequest) },
                { "ProcessResponse", typeof(Hl7.Fhir.Model.STU3.ProcessResponse) },
                { "Provenance", typeof(Hl7.Fhir.Model.STU3.Provenance) },
                { "Questionnaire", typeof(Hl7.Fhir.Model.STU3.Questionnaire) },
                { "QuestionnaireResponse", typeof(Hl7.Fhir.Model.STU3.QuestionnaireResponse) },
                { "ReferralRequest", typeof(Hl7.Fhir.Model.STU3.ReferralRequest) },
                { "RelatedPerson", typeof(Hl7.Fhir.Model.STU3.RelatedPerson) },
                { "RequestGroup", typeof(Hl7.Fhir.Model.STU3.RequestGroup) },
                { "ResearchStudy", typeof(Hl7.Fhir.Model.STU3.ResearchStudy) },
                { "ResearchSubject", typeof(Hl7.Fhir.Model.STU3.ResearchSubject) },
                { "Resource", typeof(Hl7.Fhir.Model.Resource) },
                { "RiskAssessment", typeof(Hl7.Fhir.Model.STU3.RiskAssessment) },
                { "Schedule", typeof(Hl7.Fhir.Model.STU3.Schedule) },
                { "SearchParameter", typeof(Hl7.Fhir.Model.STU3.SearchParameter) },
                { "Sequence", typeof(Hl7.Fhir.Model.STU3.Sequence) },
                { "ServiceDefinition", typeof(Hl7.Fhir.Model.STU3.ServiceDefinition) },
                { "Slot", typeof(Hl7.Fhir.Model.STU3.Slot) },
                { "Specimen", typeof(Hl7.Fhir.Model.STU3.Specimen) },
                { "StructureDefinition", typeof(Hl7.Fhir.Model.STU3.StructureDefinition) },
                { "StructureMap", typeof(Hl7.Fhir.Model.STU3.StructureMap) },
                { "Subscription", typeof(Hl7.Fhir.Model.STU3.Subscription) },
                { "Substance", typeof(Hl7.Fhir.Model.STU3.Substance) },
                { "SupplyDelivery", typeof(Hl7.Fhir.Model.STU3.SupplyDelivery) },
                { "SupplyRequest", typeof(Hl7.Fhir.Model.STU3.SupplyRequest) },
                { "Task", typeof(Hl7.Fhir.Model.STU3.Task) },
                { "TestReport", typeof(Hl7.Fhir.Model.STU3.TestReport) },
                { "TestScript", typeof(Hl7.Fhir.Model.STU3.TestScript) },
                { "ValueSet", typeof(Hl7.Fhir.Model.STU3.ValueSet) },
                { "VisionPrescription", typeof(Hl7.Fhir.Model.STU3.VisionPrescription) },
            };
    
        public static Dictionary<Type,string> FhirCsTypeToString =
            new Dictionary<Type,string>()
            {
                { typeof(Hl7.Fhir.Model.Address), "Address" },
                { typeof(Hl7.Fhir.Model.Age), "Age" },
                { typeof(Hl7.Fhir.Model.Annotation), "Annotation" },
                { typeof(Hl7.Fhir.Model.Attachment), "Attachment" },
                { typeof(Hl7.Fhir.Model.BackboneElement), "BackboneElement" },
                { typeof(Hl7.Fhir.Model.Base64Binary), "base64Binary" },
                { typeof(Hl7.Fhir.Model.FhirBoolean), "boolean" },
                { typeof(Hl7.Fhir.Model.Code), "code" },
                { typeof(Hl7.Fhir.Model.CodeableConcept), "CodeableConcept" },
                { typeof(Hl7.Fhir.Model.Coding), "Coding" },
                { typeof(Hl7.Fhir.Model.STU3.ContactDetail), "ContactDetail" },
                { typeof(Hl7.Fhir.Model.STU3.ContactPoint), "ContactPoint" },
                { typeof(Hl7.Fhir.Model.STU3.Contributor), "Contributor" },
                { typeof(Hl7.Fhir.Model.Count), "Count" },
                { typeof(Hl7.Fhir.Model.STU3.DataRequirement), "DataRequirement" },
                { typeof(Hl7.Fhir.Model.Date), "date" },
                { typeof(Hl7.Fhir.Model.FhirDateTime), "dateTime" },
                { typeof(Hl7.Fhir.Model.FhirDecimal), "decimal" },
                { typeof(Hl7.Fhir.Model.Distance), "Distance" },
                { typeof(Hl7.Fhir.Model.STU3.Dosage), "Dosage" },
                { typeof(Hl7.Fhir.Model.Duration), "Duration" },
                { typeof(Hl7.Fhir.Model.Element), "Element" },
                { typeof(Hl7.Fhir.Model.STU3.ElementDefinition), "ElementDefinition" },
                { typeof(Hl7.Fhir.Model.Extension), "Extension" },
                { typeof(Hl7.Fhir.Model.STU3.HumanName), "HumanName" },
                { typeof(Hl7.Fhir.Model.Id), "id" },
                { typeof(Hl7.Fhir.Model.STU3.Identifier), "Identifier" },
                { typeof(Hl7.Fhir.Model.Instant), "instant" },
                { typeof(Hl7.Fhir.Model.Integer), "integer" },
                { typeof(Hl7.Fhir.Model.Markdown), "markdown" },
                { typeof(Hl7.Fhir.Model.Meta), "Meta" },
                { typeof(Hl7.Fhir.Model.Money), "Money" },
                { typeof(Hl7.Fhir.Model.Narrative), "Narrative" },
                { typeof(Hl7.Fhir.Model.Oid), "oid" },
                { typeof(Hl7.Fhir.Model.STU3.ParameterDefinition), "ParameterDefinition" },
                { typeof(Hl7.Fhir.Model.Period), "Period" },
                { typeof(Hl7.Fhir.Model.PositiveInt), "positiveInt" },
                { typeof(Hl7.Fhir.Model.Quantity), "Quantity" },
                { typeof(Hl7.Fhir.Model.Range), "Range" },
                { typeof(Hl7.Fhir.Model.Ratio), "Ratio" },
                { typeof(Hl7.Fhir.Model.STU3.ResourceReference), "Reference" },
                { typeof(Hl7.Fhir.Model.STU3.RelatedArtifact), "RelatedArtifact" },
                { typeof(Hl7.Fhir.Model.SampledData), "SampledData" },
                { typeof(Hl7.Fhir.Model.STU3.Signature), "Signature" },
                { typeof(Hl7.Fhir.Model.SimpleQuantity), "SimpleQuantity" },
                { typeof(Hl7.Fhir.Model.FhirString), "string" },
                { typeof(Hl7.Fhir.Model.Time), "time" },
                { typeof(Hl7.Fhir.Model.STU3.Timing), "Timing" },
                { typeof(Hl7.Fhir.Model.STU3.TriggerDefinition), "TriggerDefinition" },
                { typeof(Hl7.Fhir.Model.UnsignedInt), "unsignedInt" },
                { typeof(Hl7.Fhir.Model.FhirUri), "uri" },
                { typeof(Hl7.Fhir.Model.STU3.UsageContext), "UsageContext" },
                { typeof(Hl7.Fhir.Model.Uuid), "uuid" },
        
                { typeof(Hl7.Fhir.Model.STU3.Account), "Account" },
                { typeof(Hl7.Fhir.Model.STU3.ActivityDefinition), "ActivityDefinition" },
                { typeof(Hl7.Fhir.Model.STU3.AdverseEvent), "AdverseEvent" },
                { typeof(Hl7.Fhir.Model.STU3.AllergyIntolerance), "AllergyIntolerance" },
                { typeof(Hl7.Fhir.Model.STU3.Appointment), "Appointment" },
                { typeof(Hl7.Fhir.Model.STU3.AppointmentResponse), "AppointmentResponse" },
                { typeof(Hl7.Fhir.Model.STU3.AuditEvent), "AuditEvent" },
                { typeof(Hl7.Fhir.Model.STU3.Basic), "Basic" },
                { typeof(Hl7.Fhir.Model.STU3.Binary), "Binary" },
                { typeof(Hl7.Fhir.Model.STU3.BodySite), "BodySite" },
                { typeof(Hl7.Fhir.Model.STU3.Bundle), "Bundle" },
                { typeof(Hl7.Fhir.Model.STU3.CapabilityStatement), "CapabilityStatement" },
                { typeof(Hl7.Fhir.Model.STU3.CarePlan), "CarePlan" },
                { typeof(Hl7.Fhir.Model.STU3.CareTeam), "CareTeam" },
                { typeof(Hl7.Fhir.Model.STU3.ChargeItem), "ChargeItem" },
                { typeof(Hl7.Fhir.Model.STU3.Claim), "Claim" },
                { typeof(Hl7.Fhir.Model.STU3.ClaimResponse), "ClaimResponse" },
                { typeof(Hl7.Fhir.Model.STU3.ClinicalImpression), "ClinicalImpression" },
                { typeof(Hl7.Fhir.Model.STU3.CodeSystem), "CodeSystem" },
                { typeof(Hl7.Fhir.Model.STU3.Communication), "Communication" },
                { typeof(Hl7.Fhir.Model.STU3.CommunicationRequest), "CommunicationRequest" },
                { typeof(Hl7.Fhir.Model.STU3.CompartmentDefinition), "CompartmentDefinition" },
                { typeof(Hl7.Fhir.Model.STU3.Composition), "Composition" },
                { typeof(Hl7.Fhir.Model.STU3.ConceptMap), "ConceptMap" },
                { typeof(Hl7.Fhir.Model.STU3.Condition), "Condition" },
                { typeof(Hl7.Fhir.Model.STU3.Consent), "Consent" },
                { typeof(Hl7.Fhir.Model.STU3.Contract), "Contract" },
                { typeof(Hl7.Fhir.Model.STU3.Coverage), "Coverage" },
                { typeof(Hl7.Fhir.Model.STU3.DataElement), "DataElement" },
                { typeof(Hl7.Fhir.Model.STU3.DetectedIssue), "DetectedIssue" },
                { typeof(Hl7.Fhir.Model.STU3.Device), "Device" },
                { typeof(Hl7.Fhir.Model.STU3.DeviceComponent), "DeviceComponent" },
                { typeof(Hl7.Fhir.Model.STU3.DeviceMetric), "DeviceMetric" },
                { typeof(Hl7.Fhir.Model.STU3.DeviceRequest), "DeviceRequest" },
                { typeof(Hl7.Fhir.Model.STU3.DeviceUseStatement), "DeviceUseStatement" },
                { typeof(Hl7.Fhir.Model.STU3.DiagnosticReport), "DiagnosticReport" },
                { typeof(Hl7.Fhir.Model.STU3.DocumentManifest), "DocumentManifest" },
                { typeof(Hl7.Fhir.Model.STU3.DocumentReference), "DocumentReference" },
                { typeof(Hl7.Fhir.Model.DomainResource), "DomainResource" },
                { typeof(Hl7.Fhir.Model.STU3.EligibilityRequest), "EligibilityRequest" },
                { typeof(Hl7.Fhir.Model.STU3.EligibilityResponse), "EligibilityResponse" },
                { typeof(Hl7.Fhir.Model.STU3.Encounter), "Encounter" },
                { typeof(Hl7.Fhir.Model.STU3.Endpoint), "Endpoint" },
                { typeof(Hl7.Fhir.Model.STU3.EnrollmentRequest), "EnrollmentRequest" },
                { typeof(Hl7.Fhir.Model.STU3.EnrollmentResponse), "EnrollmentResponse" },
                { typeof(Hl7.Fhir.Model.STU3.EpisodeOfCare), "EpisodeOfCare" },
                { typeof(Hl7.Fhir.Model.STU3.ExpansionProfile), "ExpansionProfile" },
                { typeof(Hl7.Fhir.Model.STU3.ExplanationOfBenefit), "ExplanationOfBenefit" },
                { typeof(Hl7.Fhir.Model.STU3.FamilyMemberHistory), "FamilyMemberHistory" },
                { typeof(Hl7.Fhir.Model.STU3.Flag), "Flag" },
                { typeof(Hl7.Fhir.Model.STU3.Goal), "Goal" },
                { typeof(Hl7.Fhir.Model.STU3.GraphDefinition), "GraphDefinition" },
                { typeof(Hl7.Fhir.Model.STU3.Group), "Group" },
                { typeof(Hl7.Fhir.Model.STU3.GuidanceResponse), "GuidanceResponse" },
                { typeof(Hl7.Fhir.Model.STU3.HealthcareService), "HealthcareService" },
                { typeof(Hl7.Fhir.Model.STU3.ImagingManifest), "ImagingManifest" },
                { typeof(Hl7.Fhir.Model.STU3.ImagingStudy), "ImagingStudy" },
                { typeof(Hl7.Fhir.Model.STU3.Immunization), "Immunization" },
                { typeof(Hl7.Fhir.Model.STU3.ImmunizationRecommendation), "ImmunizationRecommendation" },
                { typeof(Hl7.Fhir.Model.STU3.ImplementationGuide), "ImplementationGuide" },
                { typeof(Hl7.Fhir.Model.STU3.Library), "Library" },
                { typeof(Hl7.Fhir.Model.STU3.Linkage), "Linkage" },
                { typeof(Hl7.Fhir.Model.STU3.List), "List" },
                { typeof(Hl7.Fhir.Model.STU3.Location), "Location" },
                { typeof(Hl7.Fhir.Model.STU3.Measure), "Measure" },
                { typeof(Hl7.Fhir.Model.STU3.MeasureReport), "MeasureReport" },
                { typeof(Hl7.Fhir.Model.STU3.Media), "Media" },
                { typeof(Hl7.Fhir.Model.STU3.Medication), "Medication" },
                { typeof(Hl7.Fhir.Model.STU3.MedicationAdministration), "MedicationAdministration" },
                { typeof(Hl7.Fhir.Model.STU3.MedicationDispense), "MedicationDispense" },
                { typeof(Hl7.Fhir.Model.STU3.MedicationRequest), "MedicationRequest" },
                { typeof(Hl7.Fhir.Model.STU3.MedicationStatement), "MedicationStatement" },
                { typeof(Hl7.Fhir.Model.STU3.MessageDefinition), "MessageDefinition" },
                { typeof(Hl7.Fhir.Model.STU3.MessageHeader), "MessageHeader" },
                { typeof(Hl7.Fhir.Model.STU3.NamingSystem), "NamingSystem" },
                { typeof(Hl7.Fhir.Model.STU3.NutritionOrder), "NutritionOrder" },
                { typeof(Hl7.Fhir.Model.STU3.Observation), "Observation" },
                { typeof(Hl7.Fhir.Model.STU3.OperationDefinition), "OperationDefinition" },
                { typeof(Hl7.Fhir.Model.STU3.OperationOutcome), "OperationOutcome" },
                { typeof(Hl7.Fhir.Model.STU3.Organization), "Organization" },
                { typeof(Hl7.Fhir.Model.Parameters), "Parameters" },
                { typeof(Hl7.Fhir.Model.STU3.Patient), "Patient" },
                { typeof(Hl7.Fhir.Model.STU3.PaymentNotice), "PaymentNotice" },
                { typeof(Hl7.Fhir.Model.STU3.PaymentReconciliation), "PaymentReconciliation" },
                { typeof(Hl7.Fhir.Model.STU3.Person), "Person" },
                { typeof(Hl7.Fhir.Model.STU3.PlanDefinition), "PlanDefinition" },
                { typeof(Hl7.Fhir.Model.STU3.Practitioner), "Practitioner" },
                { typeof(Hl7.Fhir.Model.STU3.PractitionerRole), "PractitionerRole" },
                { typeof(Hl7.Fhir.Model.STU3.Procedure), "Procedure" },
                { typeof(Hl7.Fhir.Model.STU3.ProcedureRequest), "ProcedureRequest" },
                { typeof(Hl7.Fhir.Model.STU3.ProcessRequest), "ProcessRequest" },
                { typeof(Hl7.Fhir.Model.STU3.ProcessResponse), "ProcessResponse" },
                { typeof(Hl7.Fhir.Model.STU3.Provenance), "Provenance" },
                { typeof(Hl7.Fhir.Model.STU3.Questionnaire), "Questionnaire" },
                { typeof(Hl7.Fhir.Model.STU3.QuestionnaireResponse), "QuestionnaireResponse" },
                { typeof(Hl7.Fhir.Model.STU3.ReferralRequest), "ReferralRequest" },
                { typeof(Hl7.Fhir.Model.STU3.RelatedPerson), "RelatedPerson" },
                { typeof(Hl7.Fhir.Model.STU3.RequestGroup), "RequestGroup" },
                { typeof(Hl7.Fhir.Model.STU3.ResearchStudy), "ResearchStudy" },
                { typeof(Hl7.Fhir.Model.STU3.ResearchSubject), "ResearchSubject" },
                { typeof(Hl7.Fhir.Model.Resource), "Resource" },
                { typeof(Hl7.Fhir.Model.STU3.RiskAssessment), "RiskAssessment" },
                { typeof(Hl7.Fhir.Model.STU3.Schedule), "Schedule" },
                { typeof(Hl7.Fhir.Model.STU3.SearchParameter), "SearchParameter" },
                { typeof(Hl7.Fhir.Model.STU3.Sequence), "Sequence" },
                { typeof(Hl7.Fhir.Model.STU3.ServiceDefinition), "ServiceDefinition" },
                { typeof(Hl7.Fhir.Model.STU3.Slot), "Slot" },
                { typeof(Hl7.Fhir.Model.STU3.Specimen), "Specimen" },
                { typeof(Hl7.Fhir.Model.STU3.StructureDefinition), "StructureDefinition" },
                { typeof(Hl7.Fhir.Model.STU3.StructureMap), "StructureMap" },
                { typeof(Hl7.Fhir.Model.STU3.Subscription), "Subscription" },
                { typeof(Hl7.Fhir.Model.STU3.Substance), "Substance" },
                { typeof(Hl7.Fhir.Model.STU3.SupplyDelivery), "SupplyDelivery" },
                { typeof(Hl7.Fhir.Model.STU3.SupplyRequest), "SupplyRequest" },
                { typeof(Hl7.Fhir.Model.STU3.Task), "Task" },
                { typeof(Hl7.Fhir.Model.STU3.TestReport), "TestReport" },
                { typeof(Hl7.Fhir.Model.STU3.TestScript), "TestScript" },
                { typeof(Hl7.Fhir.Model.STU3.ValueSet), "ValueSet" },
                { typeof(Hl7.Fhir.Model.STU3.VisionPrescription), "VisionPrescription" },
            };
    
        public static List<SearchParamDefinition> SearchParameters =
            new List<SearchParamDefinition>
            {
                new SearchParamDefinition() { Resource = "Account", Name = "balance", Description = "How much is in account?", Type = SearchParamType.Quantity, Path = new string[] { "Account.balance",  }, XPath = "f:Account/f:balance" },
                new SearchParamDefinition() { Resource = "Account", Name = "identifier", Description = "Account number", Type = SearchParamType.Token, Path = new string[] { "Account.identifier",  }, XPath = "f:Account/f:identifier" },
                new SearchParamDefinition() { Resource = "Account", Name = "name", Description = "Human-readable label", Type = SearchParamType.String, Path = new string[] { "Account.name",  }, XPath = "f:Account/f:name" },
                new SearchParamDefinition() { Resource = "Account", Name = "owner", Description = "Who is responsible?", Type = SearchParamType.Reference, Path = new string[] { "Account.owner",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:Account/f:owner" },
                new SearchParamDefinition() { Resource = "Account", Name = "patient", Description = "What is account tied to?", Type = SearchParamType.Reference, Path = new string[] { "Account.subject",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:Account/f:subject" },
                new SearchParamDefinition() { Resource = "Account", Name = "period", Description = "Transaction window", Type = SearchParamType.Date, Path = new string[] { "Account.period",  }, XPath = "f:Account/f:period" },
                new SearchParamDefinition() { Resource = "Account", Name = "status", Description = "active | inactive | entered-in-error", Type = SearchParamType.Token, Path = new string[] { "Account.status",  }, XPath = "f:Account/f:status" },
                new SearchParamDefinition() { Resource = "Account", Name = "subject", Description = "What is account tied to?", Type = SearchParamType.Reference, Path = new string[] { "Account.subject",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.HealthcareService, ResourceType.Location, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner }, XPath = "f:Account/f:subject" },
                new SearchParamDefinition() { Resource = "Account", Name = "type", Description = "E.g. patient, expense, depreciation", Type = SearchParamType.Token, Path = new string[] { "Account.type",  }, XPath = "f:Account/f:type" },
                new SearchParamDefinition() { Resource = "ActivityDefinition", Name = "composed-of", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "ActivityDefinition.relatedArtifact[type.@value='composed-of'].resource",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:ActivityDefinition/f:relatedArtifact[f:type/@value='composed-of']/f:resource" },
                new SearchParamDefinition() { Resource = "ActivityDefinition", Name = "date", Description = "The activity definition publication date", Type = SearchParamType.Date, Path = new string[] { "ActivityDefinition.date",  }, XPath = "f:ActivityDefinition/f:date" },
                new SearchParamDefinition() { Resource = "ActivityDefinition", Name = "depends-on", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "ActivityDefinition.relatedArtifact[type.@value='depends-on'].resource", "ActivityDefinition.library",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:ActivityDefinition/f:relatedArtifact[f:type/@value='depends-on']/f:resource | f:ActivityDefinition/f:library" },
                new SearchParamDefinition() { Resource = "ActivityDefinition", Name = "derived-from", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "ActivityDefinition.relatedArtifact[type.@value='derived-from'].resource",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:ActivityDefinition/f:relatedArtifact[f:type/@value='derived-from']/f:resource" },
                new SearchParamDefinition() { Resource = "ActivityDefinition", Name = "description", Description = "The description of the activity definition", Type = SearchParamType.String, Path = new string[] { "ActivityDefinition.description",  }, XPath = "f:ActivityDefinition/f:description" },
                new SearchParamDefinition() { Resource = "ActivityDefinition", Name = "effective", Description = "The time during which the activity definition is intended to be in use", Type = SearchParamType.Date, Path = new string[] { "ActivityDefinition.effectivePeriod",  }, XPath = "f:ActivityDefinition/f:effectivePeriod" },
                new SearchParamDefinition() { Resource = "ActivityDefinition", Name = "identifier", Description = "External identifier for the activity definition", Type = SearchParamType.Token, Path = new string[] { "ActivityDefinition.identifier",  }, XPath = "f:ActivityDefinition/f:identifier" },
                new SearchParamDefinition() { Resource = "ActivityDefinition", Name = "jurisdiction", Description = "Intended jurisdiction for the activity definition", Type = SearchParamType.Token, Path = new string[] { "ActivityDefinition.jurisdiction",  }, XPath = "f:ActivityDefinition/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "ActivityDefinition", Name = "name", Description = "Computationally friendly name of the activity definition", Type = SearchParamType.String, Path = new string[] { "ActivityDefinition.name",  }, XPath = "f:ActivityDefinition/f:name" },
                new SearchParamDefinition() { Resource = "ActivityDefinition", Name = "predecessor", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "ActivityDefinition.relatedArtifact[type.@value='predecessor'].resource",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:ActivityDefinition/f:relatedArtifact[f:type/@value='predecessor']/f:resource" },
                new SearchParamDefinition() { Resource = "ActivityDefinition", Name = "publisher", Description = "Name of the publisher of the activity definition", Type = SearchParamType.String, Path = new string[] { "ActivityDefinition.publisher",  }, XPath = "f:ActivityDefinition/f:publisher" },
                new SearchParamDefinition() { Resource = "ActivityDefinition", Name = "status", Description = "The current status of the activity definition", Type = SearchParamType.Token, Path = new string[] { "ActivityDefinition.status",  }, XPath = "f:ActivityDefinition/f:status" },
                new SearchParamDefinition() { Resource = "ActivityDefinition", Name = "successor", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "ActivityDefinition.relatedArtifact[type.@value='successor'].resource",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:ActivityDefinition/f:relatedArtifact[f:type/@value='successor']/f:resource" },
                new SearchParamDefinition() { Resource = "ActivityDefinition", Name = "title", Description = "The human-friendly name of the activity definition", Type = SearchParamType.String, Path = new string[] { "ActivityDefinition.title",  }, XPath = "f:ActivityDefinition/f:title" },
                new SearchParamDefinition() { Resource = "ActivityDefinition", Name = "topic", Description = "Topics associated with the module", Type = SearchParamType.Token, Path = new string[] { "ActivityDefinition.topic",  }, XPath = "f:ActivityDefinition/f:topic" },
                new SearchParamDefinition() { Resource = "ActivityDefinition", Name = "url", Description = "The uri that identifies the activity definition", Type = SearchParamType.Uri, Path = new string[] { "ActivityDefinition.url",  }, XPath = "f:ActivityDefinition/f:url" },
                new SearchParamDefinition() { Resource = "ActivityDefinition", Name = "version", Description = "The business version of the activity definition", Type = SearchParamType.Token, Path = new string[] { "ActivityDefinition.version",  }, XPath = "f:ActivityDefinition/f:version" },
                new SearchParamDefinition() { Resource = "AdverseEvent", Name = "category", Description = "AE | PAE \rAn adverse event is an event that caused harm to a patient,  an adverse reaction is a something that is a subject-specific event that is a result of an exposure to a medication, food, device or environmental substance, a potential adverse event is something that occurred and that could have caused harm to a patient but did not", Type = SearchParamType.Token, Path = new string[] { "AdverseEvent.category",  }, XPath = "f:AdverseEvent/f:category" },
                new SearchParamDefinition() { Resource = "AdverseEvent", Name = "date", Description = "When the event occurred", Type = SearchParamType.Date, Path = new string[] { "AdverseEvent.date",  }, XPath = "f:AdverseEvent/f:date" },
                new SearchParamDefinition() { Resource = "AdverseEvent", Name = "location", Description = "Location where adverse event occurred", Type = SearchParamType.Reference, Path = new string[] { "AdverseEvent.location",  }, Target = new ResourceType[] { ResourceType.Location }, XPath = "f:AdverseEvent/f:location" },
                new SearchParamDefinition() { Resource = "AdverseEvent", Name = "reaction", Description = "Adverse Reaction Events linked to exposure to substance", Type = SearchParamType.Reference, Path = new string[] { "AdverseEvent.reaction",  }, Target = new ResourceType[] { ResourceType.Condition }, XPath = "f:AdverseEvent/f:reaction" },
                new SearchParamDefinition() { Resource = "AdverseEvent", Name = "recorder", Description = "Who recorded the adverse event", Type = SearchParamType.Reference, Path = new string[] { "AdverseEvent.recorder",  }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:AdverseEvent/f:recorder" },
                new SearchParamDefinition() { Resource = "AdverseEvent", Name = "seriousness", Description = "Mild | Moderate | Severe", Type = SearchParamType.Token, Path = new string[] { "AdverseEvent.seriousness",  }, XPath = "f:AdverseEvent/f:seriousness" },
                new SearchParamDefinition() { Resource = "AdverseEvent", Name = "study", Description = "AdverseEvent.study", Type = SearchParamType.Reference, Path = new string[] { "AdverseEvent.study",  }, Target = new ResourceType[] { ResourceType.ResearchStudy }, XPath = "f:AdverseEvent/f:study" },
                new SearchParamDefinition() { Resource = "AdverseEvent", Name = "subject", Description = "Subject or group impacted by event", Type = SearchParamType.Reference, Path = new string[] { "AdverseEvent.subject",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Medication, ResourceType.Patient, ResourceType.ResearchSubject }, XPath = "f:AdverseEvent/f:subject" },
                new SearchParamDefinition() { Resource = "AdverseEvent", Name = "substance", Description = "Refers to the specific entity that caused the adverse event", Type = SearchParamType.Reference, Path = new string[] { "AdverseEvent.suspectEntity.instance",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationStatement, ResourceType.Substance }, XPath = "f:AdverseEvent/f:suspectEntity/f:instance" },
                new SearchParamDefinition() { Resource = "AdverseEvent", Name = "type", Description = "actual | potential", Type = SearchParamType.Token, Path = new string[] { "AdverseEvent.type",  }, XPath = "f:AdverseEvent/f:type" },
                new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "asserter", Description = "Source of the information about the allergy", Type = SearchParamType.Reference, Path = new string[] { "AllergyIntolerance.asserter",  }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:AllergyIntolerance/f:asserter" },
                new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "category", Description = "food | medication | environment | biologic", Type = SearchParamType.Token, Path = new string[] { "AllergyIntolerance.category",  }, XPath = "f:AllergyIntolerance/f:category" },
                new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "clinical-status", Description = "active | inactive | resolved", Type = SearchParamType.Token, Path = new string[] { "AllergyIntolerance.clinicalStatus",  }, XPath = "f:AllergyIntolerance/f:clinicalStatus" },
                new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "code", Description = "Multiple Resources: \r\n\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [List](list.html): What the purpose of this list is\r\n* [ProcedureRequest](procedurerequest.html): What is being requested/ordered\r\n* [Observation](observation.html): The code of the observation type\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report as a whole, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [Condition](condition.html): Code for the condition\r\n", Type = SearchParamType.Token, Path = new string[] { "FamilyMemberHistory.condition.code", "DeviceRequest.codeCodeableConcept", "AllergyIntolerance.code", "AllergyIntolerance.reaction.substance", "Procedure.code", "List.code", "ProcedureRequest.code", "Observation.code", "DiagnosticReport.code", "Condition.code",  }, XPath = "f:FamilyMemberHistory/f:condition/f:code | f:DeviceRequest/f:codeCodeableConcept | f:AllergyIntolerance/f:code | f:AllergyIntolerance/f:reaction/f:substance | f:Procedure/f:code | f:List/f:code | f:ProcedureRequest/f:code | f:Observation/f:code | f:DiagnosticReport/f:code | f:Condition/f:code" },
                new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "criticality", Description = "low | high | unable-to-assess", Type = SearchParamType.Token, Path = new string[] { "AllergyIntolerance.criticality",  }, XPath = "f:AllergyIntolerance/f:criticality" },
                new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "date", Description = "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n", Type = SearchParamType.Date, Path = new string[] { "Consent.dateTime", "SupplyRequest.authoredOn", "RiskAssessment.occurrenceDateTime", "CareTeam.period", "FamilyMemberHistory.date", "Encounter.period", "AllergyIntolerance.assertedDate", "CarePlan.period", "EpisodeOfCare.period", "Procedure.performedDateTime", "Procedure.performedPeriod", "List.date", "Immunization.date", "Flag.period", "Observation.effectiveDateTime", "Observation.effectivePeriod", "DiagnosticReport.effectiveDateTime", "DiagnosticReport.effectivePeriod", "Composition.date", "DetectedIssue.date", "ClinicalImpression.date",  }, XPath = "f:Consent/f:dateTime | f:SupplyRequest/f:authoredOn | f:RiskAssessment/f:occurrenceDateTime | f:CareTeam/f:period | f:FamilyMemberHistory/f:date | f:Encounter/f:period | f:AllergyIntolerance/f:assertedDate | f:CarePlan/f:period | f:EpisodeOfCare/f:period | f:Procedure/f:performedDateTime | f:Procedure/f:performedPeriod | f:List/f:date | f:Immunization/f:date | f:Flag/f:period | f:Observation/f:effectiveDateTime | f:Observation/f:effectivePeriod | f:DiagnosticReport/f:effectiveDateTime | f:DiagnosticReport/f:effectivePeriod | f:Composition/f:date | f:DetectedIssue/f:date | f:ClinicalImpression/f:date" },
                new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "last-date", Description = "Date(/time) of last known occurrence of a reaction", Type = SearchParamType.Date, Path = new string[] { "AllergyIntolerance.lastOccurrence",  }, XPath = "f:AllergyIntolerance/f:lastOccurrence" },
                new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "manifestation", Description = "Clinical symptoms/signs associated with the Event", Type = SearchParamType.Token, Path = new string[] { "AllergyIntolerance.reaction.manifestation",  }, XPath = "f:AllergyIntolerance/f:reaction/f:manifestation" },
                new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "onset", Description = "Date(/time) when manifestations showed", Type = SearchParamType.Date, Path = new string[] { "AllergyIntolerance.reaction.onset",  }, XPath = "f:AllergyIntolerance/f:reaction/f:onset" },
                new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "recorder", Description = "Who recorded the sensitivity", Type = SearchParamType.Reference, Path = new string[] { "AllergyIntolerance.recorder",  }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.Practitioner }, XPath = "f:AllergyIntolerance/f:recorder" },
                new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "route", Description = "How the subject was exposed to the substance", Type = SearchParamType.Token, Path = new string[] { "AllergyIntolerance.reaction.exposureRoute",  }, XPath = "f:AllergyIntolerance/f:reaction/f:exposureRoute" },
                new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "severity", Description = "mild | moderate | severe (of event as a whole)", Type = SearchParamType.Token, Path = new string[] { "AllergyIntolerance.reaction.severity",  }, XPath = "f:AllergyIntolerance/f:reaction/f:severity" },
                new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "type", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): The type of the referral\r\n* [DocumentManifest](documentmanifest.html): Kind of document set\r\n* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html): Specific type of encounter\r\n* [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)\r\n* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management\r\n* [Composition](composition.html): Kind of composition (LOINC if possible)\r\n", Type = SearchParamType.Token, Path = new string[] { "ReferralRequest.type", "DocumentManifest.type", "DocumentReference.type", "Encounter.type", "AllergyIntolerance.type", "EpisodeOfCare.type", "Composition.type",  }, XPath = "f:ReferralRequest/f:type | f:DocumentManifest/f:type | f:DocumentReference/f:type | f:Encounter/f:type | f:AllergyIntolerance/f:type | f:EpisodeOfCare/f:type | f:Composition/f:type" },
                new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "verification-status", Description = "unconfirmed | confirmed | refuted | entered-in-error", Type = SearchParamType.Token, Path = new string[] { "AllergyIntolerance.verificationStatus",  }, XPath = "f:AllergyIntolerance/f:verificationStatus" },
                new SearchParamDefinition() { Resource = "Appointment", Name = "actor", Description = "Any one of the individuals participating in the appointment", Type = SearchParamType.Reference, Path = new string[] { "Appointment.participant.actor",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.HealthcareService, ResourceType.Location, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:Appointment/f:participant/f:actor" },
                new SearchParamDefinition() { Resource = "Appointment", Name = "appointment-type", Description = "The style of appointment or patient that has been booked in the slot (not service type)", Type = SearchParamType.Token, Path = new string[] { "Appointment.appointmentType",  }, XPath = "f:Appointment/f:appointmentType" },
                new SearchParamDefinition() { Resource = "Appointment", Name = "date", Description = "Appointment date/time.", Type = SearchParamType.Date, Path = new string[] { "Appointment.start",  }, XPath = "f:Appointment/f:start" },
                new SearchParamDefinition() { Resource = "Appointment", Name = "identifier", Description = "An Identifier of the Appointment", Type = SearchParamType.Token, Path = new string[] { "Appointment.identifier",  }, XPath = "f:Appointment/f:identifier" },
                new SearchParamDefinition() { Resource = "Appointment", Name = "incomingreferral", Description = "The ReferralRequest provided as information to allocate to the Encounter", Type = SearchParamType.Reference, Path = new string[] { "Appointment.incomingReferral",  }, Target = new ResourceType[] { ResourceType.ReferralRequest }, XPath = "f:Appointment/f:incomingReferral" },
                new SearchParamDefinition() { Resource = "Appointment", Name = "location", Description = "This location is listed in the participants of the appointment", Type = SearchParamType.Reference, Path = new string[] { "Appointment.participant.actor",  }, Target = new ResourceType[] { ResourceType.Location }, XPath = "f:Appointment/f:participant/f:actor" },
                new SearchParamDefinition() { Resource = "Appointment", Name = "part-status", Description = "The Participation status of the subject, or other participant on the appointment. Can be used to locate participants that have not responded to meeting requests.", Type = SearchParamType.Token, Path = new string[] { "Appointment.participant.status",  }, XPath = "f:Appointment/f:participant/f:status" },
                new SearchParamDefinition() { Resource = "Appointment", Name = "patient", Description = "One of the individuals of the appointment is this patient", Type = SearchParamType.Reference, Path = new string[] { "Appointment.participant.actor",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:Appointment/f:participant/f:actor" },
                new SearchParamDefinition() { Resource = "Appointment", Name = "practitioner", Description = "One of the individuals of the appointment is this practitioner", Type = SearchParamType.Reference, Path = new string[] { "Appointment.participant.actor",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:Appointment/f:participant/f:actor" },
                new SearchParamDefinition() { Resource = "Appointment", Name = "service-type", Description = "The specific service that is to be performed during this appointment", Type = SearchParamType.Token, Path = new string[] { "Appointment.serviceType",  }, XPath = "f:Appointment/f:serviceType" },
                new SearchParamDefinition() { Resource = "Appointment", Name = "status", Description = "The overall status of the appointment", Type = SearchParamType.Token, Path = new string[] { "Appointment.status",  }, XPath = "f:Appointment/f:status" },
                new SearchParamDefinition() { Resource = "AppointmentResponse", Name = "actor", Description = "The Person, Location/HealthcareService or Device that this appointment response replies for", Type = SearchParamType.Reference, Path = new string[] { "AppointmentResponse.actor",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.HealthcareService, ResourceType.Location, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:AppointmentResponse/f:actor" },
                new SearchParamDefinition() { Resource = "AppointmentResponse", Name = "appointment", Description = "The appointment that the response is attached to", Type = SearchParamType.Reference, Path = new string[] { "AppointmentResponse.appointment",  }, Target = new ResourceType[] { ResourceType.Appointment }, XPath = "f:AppointmentResponse/f:appointment" },
                new SearchParamDefinition() { Resource = "AppointmentResponse", Name = "identifier", Description = "An Identifier in this appointment response", Type = SearchParamType.Token, Path = new string[] { "AppointmentResponse.identifier",  }, XPath = "f:AppointmentResponse/f:identifier" },
                new SearchParamDefinition() { Resource = "AppointmentResponse", Name = "location", Description = "This Response is for this Location", Type = SearchParamType.Reference, Path = new string[] { "AppointmentResponse.actor",  }, Target = new ResourceType[] { ResourceType.Location }, XPath = "f:AppointmentResponse/f:actor" },
                new SearchParamDefinition() { Resource = "AppointmentResponse", Name = "part-status", Description = "The participants acceptance status for this appointment", Type = SearchParamType.Token, Path = new string[] { "AppointmentResponse.participantStatus",  }, XPath = "f:AppointmentResponse/f:participantStatus" },
                new SearchParamDefinition() { Resource = "AppointmentResponse", Name = "patient", Description = "This Response is for this Patient", Type = SearchParamType.Reference, Path = new string[] { "AppointmentResponse.actor",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:AppointmentResponse/f:actor" },
                new SearchParamDefinition() { Resource = "AppointmentResponse", Name = "practitioner", Description = "This Response is for this Practitioner", Type = SearchParamType.Reference, Path = new string[] { "AppointmentResponse.actor",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:AppointmentResponse/f:actor" },
                new SearchParamDefinition() { Resource = "AuditEvent", Name = "action", Description = "Type of action performed during the event", Type = SearchParamType.Token, Path = new string[] { "AuditEvent.action",  }, XPath = "f:AuditEvent/f:action" },
                new SearchParamDefinition() { Resource = "AuditEvent", Name = "address", Description = "Identifier for the network access point of the user device", Type = SearchParamType.String, Path = new string[] { "AuditEvent.agent.network.address",  }, XPath = "f:AuditEvent/f:agent/f:network/f:address" },
                new SearchParamDefinition() { Resource = "AuditEvent", Name = "agent", Description = "Direct reference to resource", Type = SearchParamType.Reference, Path = new string[] { "AuditEvent.agent.reference",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:AuditEvent/f:agent/f:reference" },
                new SearchParamDefinition() { Resource = "AuditEvent", Name = "agent-name", Description = "Human-meaningful name for the agent", Type = SearchParamType.String, Path = new string[] { "AuditEvent.agent.name",  }, XPath = "f:AuditEvent/f:agent/f:name" },
                new SearchParamDefinition() { Resource = "AuditEvent", Name = "agent-role", Description = "Agent role in the event", Type = SearchParamType.Token, Path = new string[] { "AuditEvent.agent.role",  }, XPath = "f:AuditEvent/f:agent/f:role" },
                new SearchParamDefinition() { Resource = "AuditEvent", Name = "altid", Description = "Alternative User id e.g. authentication", Type = SearchParamType.Token, Path = new string[] { "AuditEvent.agent.altId",  }, XPath = "f:AuditEvent/f:agent/f:altId" },
                new SearchParamDefinition() { Resource = "AuditEvent", Name = "date", Description = "Time when the event occurred on source", Type = SearchParamType.Date, Path = new string[] { "AuditEvent.recorded",  }, XPath = "f:AuditEvent/f:recorded" },
                new SearchParamDefinition() { Resource = "AuditEvent", Name = "entity", Description = "Specific instance of resource", Type = SearchParamType.Reference, Path = new string[] { "AuditEvent.entity.reference",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:AuditEvent/f:entity/f:reference" },
                new SearchParamDefinition() { Resource = "AuditEvent", Name = "entity-id", Description = "Specific instance of object", Type = SearchParamType.Token, Path = new string[] { "AuditEvent.entity.identifier",  }, XPath = "f:AuditEvent/f:entity/f:identifier" },
                new SearchParamDefinition() { Resource = "AuditEvent", Name = "entity-name", Description = "Descriptor for entity", Type = SearchParamType.String, Path = new string[] { "AuditEvent.entity.name",  }, XPath = "f:AuditEvent/f:entity/f:name" },
                new SearchParamDefinition() { Resource = "AuditEvent", Name = "entity-role", Description = "What role the entity played", Type = SearchParamType.Token, Path = new string[] { "AuditEvent.entity.role",  }, XPath = "f:AuditEvent/f:entity/f:role" },
                new SearchParamDefinition() { Resource = "AuditEvent", Name = "entity-type", Description = "Type of entity involved", Type = SearchParamType.Token, Path = new string[] { "AuditEvent.entity.type",  }, XPath = "f:AuditEvent/f:entity/f:type" },
                new SearchParamDefinition() { Resource = "AuditEvent", Name = "outcome", Description = "Whether the event succeeded or failed", Type = SearchParamType.Token, Path = new string[] { "AuditEvent.outcome",  }, XPath = "f:AuditEvent/f:outcome" },
                new SearchParamDefinition() { Resource = "AuditEvent", Name = "patient", Description = "Direct reference to resource", Type = SearchParamType.Reference, Path = new string[] { "AuditEvent.agent.reference", "AuditEvent.entity.reference",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:AuditEvent/f:agent/f:reference | f:AuditEvent/f:entity/f:reference" },
                new SearchParamDefinition() { Resource = "AuditEvent", Name = "policy", Description = "Policy that authorized event", Type = SearchParamType.Uri, Path = new string[] { "AuditEvent.agent.policy",  }, XPath = "f:AuditEvent/f:agent/f:policy" },
                new SearchParamDefinition() { Resource = "AuditEvent", Name = "site", Description = "Logical source location within the enterprise", Type = SearchParamType.Token, Path = new string[] { "AuditEvent.source.site",  }, XPath = "f:AuditEvent/f:source/f:site" },
                new SearchParamDefinition() { Resource = "AuditEvent", Name = "source", Description = "The identity of source detecting the event", Type = SearchParamType.Token, Path = new string[] { "AuditEvent.source.identifier",  }, XPath = "f:AuditEvent/f:source/f:identifier" },
                new SearchParamDefinition() { Resource = "AuditEvent", Name = "subtype", Description = "More specific type/id for the event", Type = SearchParamType.Token, Path = new string[] { "AuditEvent.subtype",  }, XPath = "f:AuditEvent/f:subtype" },
                new SearchParamDefinition() { Resource = "AuditEvent", Name = "type", Description = "Type/identifier of event", Type = SearchParamType.Token, Path = new string[] { "AuditEvent.type",  }, XPath = "f:AuditEvent/f:type" },
                new SearchParamDefinition() { Resource = "AuditEvent", Name = "user", Description = "Unique identifier for the user", Type = SearchParamType.Token, Path = new string[] { "AuditEvent.agent.userId",  }, XPath = "f:AuditEvent/f:agent/f:userId" },
                new SearchParamDefinition() { Resource = "Basic", Name = "author", Description = "Who created", Type = SearchParamType.Reference, Path = new string[] { "Basic.author",  }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:Basic/f:author" },
                new SearchParamDefinition() { Resource = "Basic", Name = "code", Description = "Kind of Resource", Type = SearchParamType.Token, Path = new string[] { "Basic.code",  }, XPath = "f:Basic/f:code" },
                new SearchParamDefinition() { Resource = "Basic", Name = "created", Description = "When created", Type = SearchParamType.Date, Path = new string[] { "Basic.created",  }, XPath = "f:Basic/f:created" },
                new SearchParamDefinition() { Resource = "Basic", Name = "identifier", Description = "Business identifier", Type = SearchParamType.Token, Path = new string[] { "Basic.identifier",  }, XPath = "f:Basic/f:identifier" },
                new SearchParamDefinition() { Resource = "Basic", Name = "patient", Description = "Identifies the focus of this resource", Type = SearchParamType.Reference, Path = new string[] { "Basic.subject",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:Basic/f:subject" },
                new SearchParamDefinition() { Resource = "Basic", Name = "subject", Description = "Identifies the focus of this resource", Type = SearchParamType.Reference, Path = new string[] { "Basic.subject",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Basic/f:subject" },
                new SearchParamDefinition() { Resource = "Binary", Name = "contenttype", Description = "MimeType of the binary content", Type = SearchParamType.Token, Path = new string[] { "Binary.contentType",  }, XPath = "f:Binary/f:contentType" },
                new SearchParamDefinition() { Resource = "BodySite", Name = "code", Description = "Named anatomical location", Type = SearchParamType.Token, Path = new string[] { "BodySite.code",  }, XPath = "f:BodySite/f:code" },
                new SearchParamDefinition() { Resource = "BodySite", Name = "identifier", Description = "Identifier for this instance of the anatomical location", Type = SearchParamType.Token, Path = new string[] { "BodySite.identifier",  }, XPath = "f:BodySite/f:identifier" },
                new SearchParamDefinition() { Resource = "BodySite", Name = "patient", Description = "Patient to whom bodysite belongs", Type = SearchParamType.Reference, Path = new string[] { "BodySite.patient",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:BodySite/f:patient" },
                new SearchParamDefinition() { Resource = "Bundle", Name = "composition", Description = "The first resource in the bundle, if the bundle type is \"document\" - this is a composition, and this parameter provides access to searches its contents", Type = SearchParamType.Reference, Path = new string[] { "Bundle.entry[0].resource",  }, Target = new ResourceType[] { ResourceType.Composition }, XPath = "f:Bundle/f:entry[0]/f:resource" },
                new SearchParamDefinition() { Resource = "Bundle", Name = "identifier", Description = "Persistent identifier for the bundle", Type = SearchParamType.Token, Path = new string[] { "Bundle.identifier",  }, XPath = "f:Bundle/f:identifier" },
                new SearchParamDefinition() { Resource = "Bundle", Name = "message", Description = "The first resource in the bundle, if the bundle type is \"message\" - this is a message header, and this parameter provides access to search its contents", Type = SearchParamType.Reference, Path = new string[] { "Bundle.entry[0].resource",  }, Target = new ResourceType[] { ResourceType.MessageHeader }, XPath = "f:Bundle/f:entry[0]/f:resource" },
                new SearchParamDefinition() { Resource = "Bundle", Name = "type", Description = "document | message | transaction | transaction-response | batch | batch-response | history | searchset | collection", Type = SearchParamType.Token, Path = new string[] { "Bundle.type",  }, XPath = "f:Bundle/f:type" },
                new SearchParamDefinition() { Resource = "CapabilityStatement", Name = "date", Description = "The capability statement publication date", Type = SearchParamType.Date, Path = new string[] { "CapabilityStatement.date",  }, XPath = "f:CapabilityStatement/f:date" },
                new SearchParamDefinition() { Resource = "CapabilityStatement", Name = "description", Description = "The description of the capability statement", Type = SearchParamType.String, Path = new string[] { "CapabilityStatement.description",  }, XPath = "f:CapabilityStatement/f:description" },
                new SearchParamDefinition() { Resource = "CapabilityStatement", Name = "event", Description = "Event code in a capability statement", Type = SearchParamType.Token, Path = new string[] { "CapabilityStatement.messaging.event.code",  }, XPath = "f:CapabilityStatement/f:messaging/f:event/f:code" },
                new SearchParamDefinition() { Resource = "CapabilityStatement", Name = "fhirversion", Description = "The version of FHIR", Type = SearchParamType.Token, Path = new string[] { "CapabilityStatement.version",  }, XPath = "f:CapabilityStatement/f:version" },
                new SearchParamDefinition() { Resource = "CapabilityStatement", Name = "format", Description = "formats supported (xml | json | ttl | mime type)", Type = SearchParamType.Token, Path = new string[] { "CapabilityStatement.format",  }, XPath = "f:CapabilityStatement/f:format" },
                new SearchParamDefinition() { Resource = "CapabilityStatement", Name = "guide", Description = "Implementation guides supported", Type = SearchParamType.Uri, Path = new string[] { "CapabilityStatement.implementationGuide",  }, XPath = "f:CapabilityStatement/f:implementationGuide" },
                new SearchParamDefinition() { Resource = "CapabilityStatement", Name = "jurisdiction", Description = "Intended jurisdiction for the capability statement", Type = SearchParamType.Token, Path = new string[] { "CapabilityStatement.jurisdiction",  }, XPath = "f:CapabilityStatement/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "CapabilityStatement", Name = "mode", Description = "Mode - restful (server/client) or messaging (sender/receiver)", Type = SearchParamType.Token, Path = new string[] { "CapabilityStatement.rest.mode",  }, XPath = "f:CapabilityStatement/f:rest/f:mode" },
                new SearchParamDefinition() { Resource = "CapabilityStatement", Name = "name", Description = "Computationally friendly name of the capability statement", Type = SearchParamType.String, Path = new string[] { "CapabilityStatement.name",  }, XPath = "f:CapabilityStatement/f:name" },
                new SearchParamDefinition() { Resource = "CapabilityStatement", Name = "publisher", Description = "Name of the publisher of the capability statement", Type = SearchParamType.String, Path = new string[] { "CapabilityStatement.publisher",  }, XPath = "f:CapabilityStatement/f:publisher" },
                new SearchParamDefinition() { Resource = "CapabilityStatement", Name = "resource", Description = "Name of a resource mentioned in a capability statement", Type = SearchParamType.Token, Path = new string[] { "CapabilityStatement.rest.resource.type",  }, XPath = "f:CapabilityStatement/f:rest/f:resource/f:type" },
                new SearchParamDefinition() { Resource = "CapabilityStatement", Name = "resource-profile", Description = "A profile id invoked in a capability statement", Type = SearchParamType.Reference, Path = new string[] { "CapabilityStatement.rest.resource.profile",  }, Target = new ResourceType[] { ResourceType.StructureDefinition }, XPath = "f:CapabilityStatement/f:rest/f:resource/f:profile" },
                new SearchParamDefinition() { Resource = "CapabilityStatement", Name = "security-service", Description = "OAuth | SMART-on-FHIR | NTLM | Basic | Kerberos | Certificates", Type = SearchParamType.Token, Path = new string[] { "CapabilityStatement.rest.security.service",  }, XPath = "f:CapabilityStatement/f:rest/f:security/f:service" },
                new SearchParamDefinition() { Resource = "CapabilityStatement", Name = "software", Description = "Part of a the name of a software application", Type = SearchParamType.String, Path = new string[] { "CapabilityStatement.software.name",  }, XPath = "f:CapabilityStatement/f:software/f:name" },
                new SearchParamDefinition() { Resource = "CapabilityStatement", Name = "status", Description = "The current status of the capability statement", Type = SearchParamType.Token, Path = new string[] { "CapabilityStatement.status",  }, XPath = "f:CapabilityStatement/f:status" },
                new SearchParamDefinition() { Resource = "CapabilityStatement", Name = "supported-profile", Description = "Profiles for use cases supported", Type = SearchParamType.Reference, Path = new string[] { "CapabilityStatement.profile",  }, Target = new ResourceType[] { ResourceType.StructureDefinition }, XPath = "f:CapabilityStatement/f:profile" },
                new SearchParamDefinition() { Resource = "CapabilityStatement", Name = "title", Description = "The human-friendly name of the capability statement", Type = SearchParamType.String, Path = new string[] { "CapabilityStatement.title",  }, XPath = "f:CapabilityStatement/f:title" },
                new SearchParamDefinition() { Resource = "CapabilityStatement", Name = "url", Description = "The uri that identifies the capability statement", Type = SearchParamType.Uri, Path = new string[] { "CapabilityStatement.url",  }, XPath = "f:CapabilityStatement/f:url" },
                new SearchParamDefinition() { Resource = "CapabilityStatement", Name = "version", Description = "The business version of the capability statement", Type = SearchParamType.Token, Path = new string[] { "CapabilityStatement.version",  }, XPath = "f:CapabilityStatement/f:version" },
                new SearchParamDefinition() { Resource = "CarePlan", Name = "date", Description = "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n", Type = SearchParamType.Date, Path = new string[] { "Consent.dateTime", "SupplyRequest.authoredOn", "RiskAssessment.occurrenceDateTime", "CareTeam.period", "FamilyMemberHistory.date", "Encounter.period", "AllergyIntolerance.assertedDate", "CarePlan.period", "EpisodeOfCare.period", "Procedure.performedDateTime", "Procedure.performedPeriod", "List.date", "Immunization.date", "Flag.period", "Observation.effectiveDateTime", "Observation.effectivePeriod", "DiagnosticReport.effectiveDateTime", "DiagnosticReport.effectivePeriod", "Composition.date", "DetectedIssue.date", "ClinicalImpression.date",  }, XPath = "f:Consent/f:dateTime | f:SupplyRequest/f:authoredOn | f:RiskAssessment/f:occurrenceDateTime | f:CareTeam/f:period | f:FamilyMemberHistory/f:date | f:Encounter/f:period | f:AllergyIntolerance/f:assertedDate | f:CarePlan/f:period | f:EpisodeOfCare/f:period | f:Procedure/f:performedDateTime | f:Procedure/f:performedPeriod | f:List/f:date | f:Immunization/f:date | f:Flag/f:period | f:Observation/f:effectiveDateTime | f:Observation/f:effectivePeriod | f:DiagnosticReport/f:effectiveDateTime | f:DiagnosticReport/f:effectivePeriod | f:Composition/f:date | f:DetectedIssue/f:date | f:ClinicalImpression/f:date" },
                new SearchParamDefinition() { Resource = "CarePlan", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "CarePlan", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "CarePlan", Name = "activity-code", Description = "Detail type of activity", Type = SearchParamType.Token, Path = new string[] { "CarePlan.activity.detail.code",  }, XPath = "f:CarePlan/f:activity/f:detail/f:code" },
                new SearchParamDefinition() { Resource = "CarePlan", Name = "activity-date", Description = "Specified date occurs within period specified by CarePlan.activity.timingSchedule", Type = SearchParamType.Date, Path = new string[] { "CarePlan.activity.detail.scheduledTiming", "CarePlan.activity.detail.scheduledPeriod", "CarePlan.activity.detail.scheduledString",  }, XPath = "f:CarePlan/f:activity/f:detail/f:scheduledTiming | f:CarePlan/f:activity/f:detail/f:scheduledPeriod | f:CarePlan/f:activity/f:detail/f:scheduledString" },
                new SearchParamDefinition() { Resource = "CarePlan", Name = "activity-reference", Description = "Activity details defined in specific resource", Type = SearchParamType.Reference, Path = new string[] { "CarePlan.activity.reference",  }, Target = new ResourceType[] { ResourceType.Appointment, ResourceType.CommunicationRequest, ResourceType.DeviceRequest, ResourceType.MedicationRequest, ResourceType.NutritionOrder, ResourceType.ProcedureRequest, ResourceType.ReferralRequest, ResourceType.RequestGroup, ResourceType.Task, ResourceType.VisionPrescription }, XPath = "f:CarePlan/f:activity/f:reference" },
                new SearchParamDefinition() { Resource = "CarePlan", Name = "based-on", Description = "Fulfills care plan", Type = SearchParamType.Reference, Path = new string[] { "CarePlan.basedOn",  }, Target = new ResourceType[] { ResourceType.CarePlan }, XPath = "f:CarePlan/f:basedOn" },
                new SearchParamDefinition() { Resource = "CarePlan", Name = "care-team", Description = "Who's involved in plan?", Type = SearchParamType.Reference, Path = new string[] { "CarePlan.careTeam",  }, Target = new ResourceType[] { ResourceType.CareTeam }, XPath = "f:CarePlan/f:careTeam" },
                new SearchParamDefinition() { Resource = "CarePlan", Name = "category", Description = "Type of plan", Type = SearchParamType.Token, Path = new string[] { "CarePlan.category",  }, XPath = "f:CarePlan/f:category" },
                new SearchParamDefinition() { Resource = "CarePlan", Name = "condition", Description = "Health issues this plan addresses", Type = SearchParamType.Reference, Path = new string[] { "CarePlan.addresses",  }, Target = new ResourceType[] { ResourceType.Condition }, XPath = "f:CarePlan/f:addresses" },
                new SearchParamDefinition() { Resource = "CarePlan", Name = "context", Description = "Created in context of", Type = SearchParamType.Reference, Path = new string[] { "CarePlan.context",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:CarePlan/f:context" },
                new SearchParamDefinition() { Resource = "CarePlan", Name = "definition", Description = "Protocol or definition", Type = SearchParamType.Reference, Path = new string[] { "CarePlan.definition",  }, Target = new ResourceType[] { ResourceType.PlanDefinition, ResourceType.Questionnaire }, XPath = "f:CarePlan/f:definition" },
                new SearchParamDefinition() { Resource = "CarePlan", Name = "encounter", Description = "Created in context of", Type = SearchParamType.Reference, Path = new string[] { "CarePlan.context",  }, Target = new ResourceType[] { ResourceType.Encounter }, XPath = "f:CarePlan/f:context" },
                new SearchParamDefinition() { Resource = "CarePlan", Name = "goal", Description = "Desired outcome of plan", Type = SearchParamType.Reference, Path = new string[] { "CarePlan.goal",  }, Target = new ResourceType[] { ResourceType.Goal }, XPath = "f:CarePlan/f:goal" },
                new SearchParamDefinition() { Resource = "CarePlan", Name = "intent", Description = "proposal | plan | order | option", Type = SearchParamType.Token, Path = new string[] { "CarePlan.intent",  }, XPath = "f:CarePlan/f:intent" },
                new SearchParamDefinition() { Resource = "CarePlan", Name = "part-of", Description = "Part of referenced CarePlan", Type = SearchParamType.Reference, Path = new string[] { "CarePlan.partOf",  }, Target = new ResourceType[] { ResourceType.CarePlan }, XPath = "f:CarePlan/f:partOf" },
                new SearchParamDefinition() { Resource = "CarePlan", Name = "performer", Description = "Matches if the practitioner is listed as a performer in any of the \"simple\" activities.  (For performers of the detailed activities, chain through the activitydetail search parameter.)", Type = SearchParamType.Reference, Path = new string[] { "CarePlan.activity.detail.performer",  }, Target = new ResourceType[] { ResourceType.CareTeam, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:CarePlan/f:activity/f:detail/f:performer" },
                new SearchParamDefinition() { Resource = "CarePlan", Name = "replaces", Description = "CarePlan replaced by this CarePlan", Type = SearchParamType.Reference, Path = new string[] { "CarePlan.replaces",  }, Target = new ResourceType[] { ResourceType.CarePlan }, XPath = "f:CarePlan/f:replaces" },
                new SearchParamDefinition() { Resource = "CarePlan", Name = "status", Description = "draft | active | suspended | completed | entered-in-error | cancelled | unknown", Type = SearchParamType.Token, Path = new string[] { "CarePlan.status",  }, XPath = "f:CarePlan/f:status" },
                new SearchParamDefinition() { Resource = "CarePlan", Name = "subject", Description = "Who care plan is for", Type = SearchParamType.Reference, Path = new string[] { "CarePlan.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:CarePlan/f:subject" },
                new SearchParamDefinition() { Resource = "CareTeam", Name = "date", Description = "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n", Type = SearchParamType.Date, Path = new string[] { "Consent.dateTime", "SupplyRequest.authoredOn", "RiskAssessment.occurrenceDateTime", "CareTeam.period", "FamilyMemberHistory.date", "Encounter.period", "AllergyIntolerance.assertedDate", "CarePlan.period", "EpisodeOfCare.period", "Procedure.performedDateTime", "Procedure.performedPeriod", "List.date", "Immunization.date", "Flag.period", "Observation.effectiveDateTime", "Observation.effectivePeriod", "DiagnosticReport.effectiveDateTime", "DiagnosticReport.effectivePeriod", "Composition.date", "DetectedIssue.date", "ClinicalImpression.date",  }, XPath = "f:Consent/f:dateTime | f:SupplyRequest/f:authoredOn | f:RiskAssessment/f:occurrenceDateTime | f:CareTeam/f:period | f:FamilyMemberHistory/f:date | f:Encounter/f:period | f:AllergyIntolerance/f:assertedDate | f:CarePlan/f:period | f:EpisodeOfCare/f:period | f:Procedure/f:performedDateTime | f:Procedure/f:performedPeriod | f:List/f:date | f:Immunization/f:date | f:Flag/f:period | f:Observation/f:effectiveDateTime | f:Observation/f:effectivePeriod | f:DiagnosticReport/f:effectiveDateTime | f:DiagnosticReport/f:effectivePeriod | f:Composition/f:date | f:DetectedIssue/f:date | f:ClinicalImpression/f:date" },
                new SearchParamDefinition() { Resource = "CareTeam", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "CareTeam", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "CareTeam", Name = "category", Description = "Type of team", Type = SearchParamType.Token, Path = new string[] { "CareTeam.category",  }, XPath = "f:CareTeam/f:category" },
                new SearchParamDefinition() { Resource = "CareTeam", Name = "context", Description = "Encounter or episode associated with CareTeam", Type = SearchParamType.Reference, Path = new string[] { "CareTeam.context",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:CareTeam/f:context" },
                new SearchParamDefinition() { Resource = "CareTeam", Name = "encounter", Description = "Encounter or episode associated with CareTeam", Type = SearchParamType.Reference, Path = new string[] { "CareTeam.context",  }, Target = new ResourceType[] { ResourceType.Encounter }, XPath = "f:CareTeam/f:context" },
                new SearchParamDefinition() { Resource = "CareTeam", Name = "participant", Description = "Who is involved", Type = SearchParamType.Reference, Path = new string[] { "CareTeam.participant.member",  }, Target = new ResourceType[] { ResourceType.CareTeam, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:CareTeam/f:participant/f:member" },
                new SearchParamDefinition() { Resource = "CareTeam", Name = "status", Description = "proposed | active | suspended | inactive | entered-in-error", Type = SearchParamType.Token, Path = new string[] { "CareTeam.status",  }, XPath = "f:CareTeam/f:status" },
                new SearchParamDefinition() { Resource = "CareTeam", Name = "subject", Description = "Who care team is for", Type = SearchParamType.Reference, Path = new string[] { "CareTeam.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:CareTeam/f:subject" },
                new SearchParamDefinition() { Resource = "ChargeItem", Name = "account", Description = "Account to place this charge", Type = SearchParamType.Reference, Path = new string[] { "ChargeItem.account",  }, Target = new ResourceType[] { ResourceType.Account }, XPath = "f:ChargeItem/f:account" },
                new SearchParamDefinition() { Resource = "ChargeItem", Name = "code", Description = "A code that identifies the charge, like a billing code", Type = SearchParamType.Token, Path = new string[] { "ChargeItem.code",  }, XPath = "f:ChargeItem/f:code" },
                new SearchParamDefinition() { Resource = "ChargeItem", Name = "context", Description = "Encounter / Episode associated with event", Type = SearchParamType.Reference, Path = new string[] { "ChargeItem.context",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:ChargeItem/f:context" },
                new SearchParamDefinition() { Resource = "ChargeItem", Name = "entered-date", Description = "Date the charge item was entered", Type = SearchParamType.Date, Path = new string[] { "ChargeItem.enteredDate",  }, XPath = "f:ChargeItem/f:enteredDate" },
                new SearchParamDefinition() { Resource = "ChargeItem", Name = "enterer", Description = "Individual who was entering", Type = SearchParamType.Reference, Path = new string[] { "ChargeItem.enterer",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:ChargeItem/f:enterer" },
                new SearchParamDefinition() { Resource = "ChargeItem", Name = "factor-override", Description = "Factor overriding the associated rules", Type = SearchParamType.Number, Path = new string[] { "ChargeItem.factorOverride",  }, XPath = "f:ChargeItem/f:factorOverride" },
                new SearchParamDefinition() { Resource = "ChargeItem", Name = "identifier", Description = "Business Identifier for item", Type = SearchParamType.Token, Path = new string[] { "ChargeItem.identifier",  }, XPath = "f:ChargeItem/f:identifier" },
                new SearchParamDefinition() { Resource = "ChargeItem", Name = "occurrence", Description = "When the charged service was applied", Type = SearchParamType.Date, Path = new string[] { "ChargeItem.occurrenceDateTime", "ChargeItem.occurrencePeriod", "ChargeItem.occurrenceTiming",  }, XPath = "f:ChargeItem/f:occurrenceDateTime | f:ChargeItem/f:occurrencePeriod | f:ChargeItem/f:occurrenceTiming" },
                new SearchParamDefinition() { Resource = "ChargeItem", Name = "participant-actor", Description = "Individual who was performing", Type = SearchParamType.Reference, Path = new string[] { "ChargeItem.participant.actor",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:ChargeItem/f:participant/f:actor" },
                new SearchParamDefinition() { Resource = "ChargeItem", Name = "participant-role", Description = "What type of performance was done", Type = SearchParamType.Token, Path = new string[] { "ChargeItem.participant.role",  }, XPath = "f:ChargeItem/f:participant/f:role" },
                new SearchParamDefinition() { Resource = "ChargeItem", Name = "patient", Description = "Individual service was done for/to", Type = SearchParamType.Reference, Path = new string[] { "ChargeItem.subject",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:ChargeItem/f:subject" },
                new SearchParamDefinition() { Resource = "ChargeItem", Name = "performing-organization", Description = "Organization providing the charged sevice", Type = SearchParamType.Reference, Path = new string[] { "ChargeItem.performingOrganization",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:ChargeItem/f:performingOrganization" },
                new SearchParamDefinition() { Resource = "ChargeItem", Name = "price-override", Description = "Price overriding the associated rules", Type = SearchParamType.Quantity, Path = new string[] { "ChargeItem.priceOverride",  }, XPath = "f:ChargeItem/f:priceOverride" },
                new SearchParamDefinition() { Resource = "ChargeItem", Name = "quantity", Description = "Quantity of which the charge item has been serviced", Type = SearchParamType.Quantity, Path = new string[] { "ChargeItem.quantity",  }, XPath = "f:ChargeItem/f:quantity" },
                new SearchParamDefinition() { Resource = "ChargeItem", Name = "requesting-organization", Description = "Organization requesting the charged service", Type = SearchParamType.Reference, Path = new string[] { "ChargeItem.requestingOrganization",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:ChargeItem/f:requestingOrganization" },
                new SearchParamDefinition() { Resource = "ChargeItem", Name = "service", Description = "Which rendered service is being charged?", Type = SearchParamType.Reference, Path = new string[] { "ChargeItem.service",  }, Target = new ResourceType[] { ResourceType.DiagnosticReport, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.Observation, ResourceType.Procedure, ResourceType.SupplyDelivery }, XPath = "f:ChargeItem/f:service" },
                new SearchParamDefinition() { Resource = "ChargeItem", Name = "subject", Description = "Individual service was done for/to", Type = SearchParamType.Reference, Path = new string[] { "ChargeItem.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ChargeItem/f:subject" },
                new SearchParamDefinition() { Resource = "Claim", Name = "care-team", Description = "Member of the CareTeam", Type = SearchParamType.Reference, Path = new string[] { "Claim.careTeam.provider",  }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Practitioner }, XPath = "f:Claim/f:careTeam/f:provider" },
                new SearchParamDefinition() { Resource = "Claim", Name = "created", Description = "The creation date for the Claim", Type = SearchParamType.Date, Path = new string[] { "Claim.created",  }, XPath = "f:Claim/f:created" },
                new SearchParamDefinition() { Resource = "Claim", Name = "encounter", Description = "Encounters associated with a billed line item", Type = SearchParamType.Reference, Path = new string[] { "Claim.item.encounter",  }, Target = new ResourceType[] { ResourceType.Encounter }, XPath = "f:Claim/f:item/f:encounter" },
                new SearchParamDefinition() { Resource = "Claim", Name = "enterer", Description = "The party responsible for the entry of the Claim", Type = SearchParamType.Reference, Path = new string[] { "Claim.enterer",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:Claim/f:enterer" },
                new SearchParamDefinition() { Resource = "Claim", Name = "facility", Description = "Facility responsible for the goods and services", Type = SearchParamType.Reference, Path = new string[] { "Claim.facility",  }, Target = new ResourceType[] { ResourceType.Location }, XPath = "f:Claim/f:facility" },
                new SearchParamDefinition() { Resource = "Claim", Name = "identifier", Description = "The primary identifier of the financial resource", Type = SearchParamType.Token, Path = new string[] { "Claim.identifier",  }, XPath = "f:Claim/f:identifier" },
                new SearchParamDefinition() { Resource = "Claim", Name = "insurer", Description = "The target payor/insurer for the Claim", Type = SearchParamType.Reference, Path = new string[] { "Claim.insurer",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:Claim/f:insurer" },
                new SearchParamDefinition() { Resource = "Claim", Name = "organization", Description = "The reference to the providing organization", Type = SearchParamType.Reference, Path = new string[] { "Claim.organization",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:Claim/f:organization" },
                new SearchParamDefinition() { Resource = "Claim", Name = "patient", Description = "Patient receiving the services", Type = SearchParamType.Reference, Path = new string[] { "Claim.patient",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:Claim/f:patient" },
                new SearchParamDefinition() { Resource = "Claim", Name = "payee", Description = "The party receiving any payment for the Claim", Type = SearchParamType.Reference, Path = new string[] { "Claim.payee.party",  }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:Claim/f:payee/f:party" },
                new SearchParamDefinition() { Resource = "Claim", Name = "priority", Description = "Processing priority requested", Type = SearchParamType.Token, Path = new string[] { "Claim.priority",  }, XPath = "f:Claim/f:priority" },
                new SearchParamDefinition() { Resource = "Claim", Name = "provider", Description = "Provider responsible for the Claim", Type = SearchParamType.Reference, Path = new string[] { "Claim.provider",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:Claim/f:provider" },
                new SearchParamDefinition() { Resource = "Claim", Name = "use", Description = "The kind of financial resource", Type = SearchParamType.Token, Path = new string[] { "Claim.use",  }, XPath = "f:Claim/f:use" },
                new SearchParamDefinition() { Resource = "ClaimResponse", Name = "created", Description = "The creation date", Type = SearchParamType.Date, Path = new string[] { "ClaimResponse.created",  }, XPath = "f:ClaimResponse/f:created" },
                new SearchParamDefinition() { Resource = "ClaimResponse", Name = "disposition", Description = "The contents of the disposition message", Type = SearchParamType.String, Path = new string[] { "ClaimResponse.disposition",  }, XPath = "f:ClaimResponse/f:disposition" },
                new SearchParamDefinition() { Resource = "ClaimResponse", Name = "identifier", Description = "The identity of the claimresponse", Type = SearchParamType.Token, Path = new string[] { "ClaimResponse.identifier",  }, XPath = "f:ClaimResponse/f:identifier" },
                new SearchParamDefinition() { Resource = "ClaimResponse", Name = "insurer", Description = "The organization who generated this resource", Type = SearchParamType.Reference, Path = new string[] { "ClaimResponse.insurer",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:ClaimResponse/f:insurer" },
                new SearchParamDefinition() { Resource = "ClaimResponse", Name = "outcome", Description = "The processing outcome", Type = SearchParamType.Token, Path = new string[] { "ClaimResponse.outcome",  }, XPath = "f:ClaimResponse/f:outcome" },
                new SearchParamDefinition() { Resource = "ClaimResponse", Name = "patient", Description = "The subject of care.", Type = SearchParamType.Reference, Path = new string[] { "ClaimResponse.patient",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:ClaimResponse/f:patient" },
                new SearchParamDefinition() { Resource = "ClaimResponse", Name = "payment-date", Description = "The expected paymentDate", Type = SearchParamType.Date, Path = new string[] { "ClaimResponse.payment.date",  }, XPath = "f:ClaimResponse/f:payment/f:date" },
                new SearchParamDefinition() { Resource = "ClaimResponse", Name = "request", Description = "The claim reference", Type = SearchParamType.Reference, Path = new string[] { "ClaimResponse.request",  }, Target = new ResourceType[] { ResourceType.Claim }, XPath = "f:ClaimResponse/f:request" },
                new SearchParamDefinition() { Resource = "ClaimResponse", Name = "request-provider", Description = "The Provider of the claim", Type = SearchParamType.Reference, Path = new string[] { "ClaimResponse.requestProvider",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:ClaimResponse/f:requestProvider" },
                new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "date", Description = "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n", Type = SearchParamType.Date, Path = new string[] { "Consent.dateTime", "SupplyRequest.authoredOn", "RiskAssessment.occurrenceDateTime", "CareTeam.period", "FamilyMemberHistory.date", "Encounter.period", "AllergyIntolerance.assertedDate", "CarePlan.period", "EpisodeOfCare.period", "Procedure.performedDateTime", "Procedure.performedPeriod", "List.date", "Immunization.date", "Flag.period", "Observation.effectiveDateTime", "Observation.effectivePeriod", "DiagnosticReport.effectiveDateTime", "DiagnosticReport.effectivePeriod", "Composition.date", "DetectedIssue.date", "ClinicalImpression.date",  }, XPath = "f:Consent/f:dateTime | f:SupplyRequest/f:authoredOn | f:RiskAssessment/f:occurrenceDateTime | f:CareTeam/f:period | f:FamilyMemberHistory/f:date | f:Encounter/f:period | f:AllergyIntolerance/f:assertedDate | f:CarePlan/f:period | f:EpisodeOfCare/f:period | f:Procedure/f:performedDateTime | f:Procedure/f:performedPeriod | f:List/f:date | f:Immunization/f:date | f:Flag/f:period | f:Observation/f:effectiveDateTime | f:Observation/f:effectivePeriod | f:DiagnosticReport/f:effectiveDateTime | f:DiagnosticReport/f:effectivePeriod | f:Composition/f:date | f:DetectedIssue/f:date | f:ClinicalImpression/f:date" },
                new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "action", Description = "Action taken as part of assessment procedure", Type = SearchParamType.Reference, Path = new string[] { "ClinicalImpression.action",  }, Target = new ResourceType[] { ResourceType.Appointment, ResourceType.MedicationRequest, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ReferralRequest }, XPath = "f:ClinicalImpression/f:action" },
                new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "assessor", Description = "The clinician performing the assessment", Type = SearchParamType.Reference, Path = new string[] { "ClinicalImpression.assessor",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:ClinicalImpression/f:assessor" },
                new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "context", Description = "Encounter or Episode created from", Type = SearchParamType.Reference, Path = new string[] { "ClinicalImpression.context",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:ClinicalImpression/f:context" },
                new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "finding-code", Description = "What was found", Type = SearchParamType.Token, Path = new string[] { "ClinicalImpression.finding.itemCodeableConcept",  }, XPath = "f:ClinicalImpression/f:finding/f:itemCodeableConcept" },
                new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "finding-ref", Description = "What was found", Type = SearchParamType.Reference, Path = new string[] { "ClinicalImpression.finding.itemReference",  }, Target = new ResourceType[] { ResourceType.Condition, ResourceType.Observation }, XPath = "f:ClinicalImpression/f:finding/f:itemReference" },
                new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "identifier", Description = "Business identifier", Type = SearchParamType.Token, Path = new string[] { "ClinicalImpression.identifier",  }, XPath = "f:ClinicalImpression/f:identifier" },
                new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "investigation", Description = "Record of a specific investigation", Type = SearchParamType.Reference, Path = new string[] { "ClinicalImpression.investigation.item",  }, Target = new ResourceType[] { ResourceType.DiagnosticReport, ResourceType.FamilyMemberHistory, ResourceType.ImagingStudy, ResourceType.Observation, ResourceType.QuestionnaireResponse, ResourceType.RiskAssessment }, XPath = "f:ClinicalImpression/f:investigation/f:item" },
                new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "previous", Description = "Reference to last assessment", Type = SearchParamType.Reference, Path = new string[] { "ClinicalImpression.previous",  }, Target = new ResourceType[] { ResourceType.ClinicalImpression }, XPath = "f:ClinicalImpression/f:previous" },
                new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "problem", Description = "Relevant impressions of patient state", Type = SearchParamType.Reference, Path = new string[] { "ClinicalImpression.problem",  }, Target = new ResourceType[] { ResourceType.AllergyIntolerance, ResourceType.Condition }, XPath = "f:ClinicalImpression/f:problem" },
                new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "status", Description = "draft | completed | entered-in-error", Type = SearchParamType.Token, Path = new string[] { "ClinicalImpression.status",  }, XPath = "f:ClinicalImpression/f:status" },
                new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "subject", Description = "Patient or group assessed", Type = SearchParamType.Reference, Path = new string[] { "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "CodeSystem", Name = "code", Description = "A code defined in the code system", Type = SearchParamType.Token, Path = new string[] { "CodeSystem.concept.code",  }, XPath = "f:CodeSystem/f:concept/f:code" },
                new SearchParamDefinition() { Resource = "CodeSystem", Name = "content-mode", Description = "not-present | example | fragment | complete", Type = SearchParamType.Token, Path = new string[] { "CodeSystem.content",  }, XPath = "f:CodeSystem/f:content" },
                new SearchParamDefinition() { Resource = "CodeSystem", Name = "date", Description = "The code system publication date", Type = SearchParamType.Date, Path = new string[] { "CodeSystem.date",  }, XPath = "f:CodeSystem/f:date" },
                new SearchParamDefinition() { Resource = "CodeSystem", Name = "description", Description = "The description of the code system", Type = SearchParamType.String, Path = new string[] { "CodeSystem.description",  }, XPath = "f:CodeSystem/f:description" },
                new SearchParamDefinition() { Resource = "CodeSystem", Name = "identifier", Description = "External identifier for the code system", Type = SearchParamType.Token, Path = new string[] { "CodeSystem.identifier",  }, XPath = "f:CodeSystem/f:identifier" },
                new SearchParamDefinition() { Resource = "CodeSystem", Name = "jurisdiction", Description = "Intended jurisdiction for the code system", Type = SearchParamType.Token, Path = new string[] { "CodeSystem.jurisdiction",  }, XPath = "f:CodeSystem/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "CodeSystem", Name = "language", Description = "A language in which a designation is provided", Type = SearchParamType.Token, Path = new string[] { "CodeSystem.concept.designation.language",  }, XPath = "f:CodeSystem/f:concept/f:designation/f:language" },
                new SearchParamDefinition() { Resource = "CodeSystem", Name = "name", Description = "Computationally friendly name of the code system", Type = SearchParamType.String, Path = new string[] { "CodeSystem.name",  }, XPath = "f:CodeSystem/f:name" },
                new SearchParamDefinition() { Resource = "CodeSystem", Name = "publisher", Description = "Name of the publisher of the code system", Type = SearchParamType.String, Path = new string[] { "CodeSystem.publisher",  }, XPath = "f:CodeSystem/f:publisher" },
                new SearchParamDefinition() { Resource = "CodeSystem", Name = "status", Description = "The current status of the code system", Type = SearchParamType.Token, Path = new string[] { "CodeSystem.status",  }, XPath = "f:CodeSystem/f:status" },
                new SearchParamDefinition() { Resource = "CodeSystem", Name = "system", Description = "The system for any codes defined by this code system (same as 'url')", Type = SearchParamType.Uri, Path = new string[] { "CodeSystem.url",  }, XPath = "f:CodeSystem/f:url" },
                new SearchParamDefinition() { Resource = "CodeSystem", Name = "title", Description = "The human-friendly name of the code system", Type = SearchParamType.String, Path = new string[] { "CodeSystem.title",  }, XPath = "f:CodeSystem/f:title" },
                new SearchParamDefinition() { Resource = "CodeSystem", Name = "url", Description = "The uri that identifies the code system", Type = SearchParamType.Uri, Path = new string[] { "CodeSystem.url",  }, XPath = "f:CodeSystem/f:url" },
                new SearchParamDefinition() { Resource = "CodeSystem", Name = "version", Description = "The business version of the code system", Type = SearchParamType.Token, Path = new string[] { "CodeSystem.version",  }, XPath = "f:CodeSystem/f:version" },
                new SearchParamDefinition() { Resource = "Communication", Name = "based-on", Description = "Request fulfilled by this communication", Type = SearchParamType.Reference, Path = new string[] { "Communication.basedOn",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Communication/f:basedOn" },
                new SearchParamDefinition() { Resource = "Communication", Name = "category", Description = "Message category", Type = SearchParamType.Token, Path = new string[] { "Communication.category",  }, XPath = "f:Communication/f:category" },
                new SearchParamDefinition() { Resource = "Communication", Name = "context", Description = "Encounter or episode leading to message", Type = SearchParamType.Reference, Path = new string[] { "Communication.context",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:Communication/f:context" },
                new SearchParamDefinition() { Resource = "Communication", Name = "definition", Description = "Instantiates protocol or definition", Type = SearchParamType.Reference, Path = new string[] { "Communication.definition",  }, Target = new ResourceType[] { ResourceType.ActivityDefinition, ResourceType.PlanDefinition }, XPath = "f:Communication/f:definition" },
                new SearchParamDefinition() { Resource = "Communication", Name = "encounter", Description = "Encounter leading to message", Type = SearchParamType.Reference, Path = new string[] { "Communication.context",  }, Target = new ResourceType[] { ResourceType.Encounter }, XPath = "f:Communication/f:context" },
                new SearchParamDefinition() { Resource = "Communication", Name = "identifier", Description = "Unique identifier", Type = SearchParamType.Token, Path = new string[] { "Communication.identifier",  }, XPath = "f:Communication/f:identifier" },
                new SearchParamDefinition() { Resource = "Communication", Name = "medium", Description = "A channel of communication", Type = SearchParamType.Token, Path = new string[] { "Communication.medium",  }, XPath = "f:Communication/f:medium" },
                new SearchParamDefinition() { Resource = "Communication", Name = "part-of", Description = "Part of this action", Type = SearchParamType.Reference, Path = new string[] { "Communication.partOf",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Communication/f:partOf" },
                new SearchParamDefinition() { Resource = "Communication", Name = "patient", Description = "Focus of message", Type = SearchParamType.Reference, Path = new string[] { "Communication.subject",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:Communication/f:subject" },
                new SearchParamDefinition() { Resource = "Communication", Name = "received", Description = "When received", Type = SearchParamType.Date, Path = new string[] { "Communication.received",  }, XPath = "f:Communication/f:received" },
                new SearchParamDefinition() { Resource = "Communication", Name = "recipient", Description = "Message recipient", Type = SearchParamType.Reference, Path = new string[] { "Communication.recipient",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:Communication/f:recipient" },
                new SearchParamDefinition() { Resource = "Communication", Name = "sender", Description = "Message sender", Type = SearchParamType.Reference, Path = new string[] { "Communication.sender",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:Communication/f:sender" },
                new SearchParamDefinition() { Resource = "Communication", Name = "sent", Description = "When sent", Type = SearchParamType.Date, Path = new string[] { "Communication.sent",  }, XPath = "f:Communication/f:sent" },
                new SearchParamDefinition() { Resource = "Communication", Name = "status", Description = "preparation | in-progress | suspended | aborted | completed | entered-in-error", Type = SearchParamType.Token, Path = new string[] { "Communication.status",  }, XPath = "f:Communication/f:status" },
                new SearchParamDefinition() { Resource = "Communication", Name = "subject", Description = "Focus of message", Type = SearchParamType.Reference, Path = new string[] { "Communication.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:Communication/f:subject" },
                new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "authored", Description = "When request transitioned to being actionable", Type = SearchParamType.Date, Path = new string[] { "CommunicationRequest.authoredOn",  }, XPath = "f:CommunicationRequest/f:authoredOn" },
                new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "based-on", Description = "Fulfills plan or proposal", Type = SearchParamType.Reference, Path = new string[] { "CommunicationRequest.basedOn",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:CommunicationRequest/f:basedOn" },
                new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "category", Description = "Message category", Type = SearchParamType.Token, Path = new string[] { "CommunicationRequest.category",  }, XPath = "f:CommunicationRequest/f:category" },
                new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "context", Description = "Encounter or episode leading to message", Type = SearchParamType.Reference, Path = new string[] { "CommunicationRequest.context",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:CommunicationRequest/f:context" },
                new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "encounter", Description = "Encounter leading to message", Type = SearchParamType.Reference, Path = new string[] { "CommunicationRequest.context",  }, Target = new ResourceType[] { ResourceType.Encounter }, XPath = "f:CommunicationRequest/f:context" },
                new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "group-identifier", Description = "Composite request this is part of", Type = SearchParamType.Token, Path = new string[] { "CommunicationRequest.groupIdentifier",  }, XPath = "f:CommunicationRequest/f:groupIdentifier" },
                new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "identifier", Description = "Unique identifier", Type = SearchParamType.Token, Path = new string[] { "CommunicationRequest.identifier",  }, XPath = "f:CommunicationRequest/f:identifier" },
                new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "medium", Description = "A channel of communication", Type = SearchParamType.Token, Path = new string[] { "CommunicationRequest.medium",  }, XPath = "f:CommunicationRequest/f:medium" },
                new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "occurrence", Description = "When scheduled", Type = SearchParamType.Date, Path = new string[] { "CommunicationRequest.occurrenceDateTime",  }, XPath = "f:CommunicationRequest/f:occurrenceDateTime" },
                new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "patient", Description = "Focus of message", Type = SearchParamType.Reference, Path = new string[] { "CommunicationRequest.subject",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:CommunicationRequest/f:subject" },
                new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "priority", Description = "Message urgency", Type = SearchParamType.Token, Path = new string[] { "CommunicationRequest.priority",  }, XPath = "f:CommunicationRequest/f:priority" },
                new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "recipient", Description = "Message recipient", Type = SearchParamType.Reference, Path = new string[] { "CommunicationRequest.recipient",  }, Target = new ResourceType[] { ResourceType.CareTeam, ResourceType.Device, ResourceType.Group, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:CommunicationRequest/f:recipient" },
                new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "replaces", Description = "Request(s) replaced by this request", Type = SearchParamType.Reference, Path = new string[] { "CommunicationRequest.replaces",  }, Target = new ResourceType[] { ResourceType.CommunicationRequest }, XPath = "f:CommunicationRequest/f:replaces" },
                new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "requester", Description = "Individual making the request", Type = SearchParamType.Reference, Path = new string[] { "CommunicationRequest.requester.agent",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:CommunicationRequest/f:requester/f:agent" },
                new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "sender", Description = "Message sender", Type = SearchParamType.Reference, Path = new string[] { "CommunicationRequest.sender",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:CommunicationRequest/f:sender" },
                new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "status", Description = "draft | active | suspended | cancelled | completed | entered-in-error | unknown", Type = SearchParamType.Token, Path = new string[] { "CommunicationRequest.status",  }, XPath = "f:CommunicationRequest/f:status" },
                new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "subject", Description = "Focus of message", Type = SearchParamType.Reference, Path = new string[] { "CommunicationRequest.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:CommunicationRequest/f:subject" },
                new SearchParamDefinition() { Resource = "CompartmentDefinition", Name = "code", Description = "Patient | Encounter | RelatedPerson | Practitioner | Device", Type = SearchParamType.Token, Path = new string[] { "CompartmentDefinition.code",  }, XPath = "f:CompartmentDefinition/f:code" },
                new SearchParamDefinition() { Resource = "CompartmentDefinition", Name = "date", Description = "The compartment definition publication date", Type = SearchParamType.Date, Path = new string[] { "CompartmentDefinition.date",  }, XPath = "f:CompartmentDefinition/f:date" },
                new SearchParamDefinition() { Resource = "CompartmentDefinition", Name = "description", Description = "The description of the compartment definition", Type = SearchParamType.String, Path = new string[] { "CompartmentDefinition.description",  }, XPath = "f:CompartmentDefinition/f:description" },
                new SearchParamDefinition() { Resource = "CompartmentDefinition", Name = "jurisdiction", Description = "Intended jurisdiction for the compartment definition", Type = SearchParamType.Token, Path = new string[] { "CompartmentDefinition.jurisdiction",  }, XPath = "f:CompartmentDefinition/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "CompartmentDefinition", Name = "name", Description = "Computationally friendly name of the compartment definition", Type = SearchParamType.String, Path = new string[] { "CompartmentDefinition.name",  }, XPath = "f:CompartmentDefinition/f:name" },
                new SearchParamDefinition() { Resource = "CompartmentDefinition", Name = "publisher", Description = "Name of the publisher of the compartment definition", Type = SearchParamType.String, Path = new string[] { "CompartmentDefinition.publisher",  }, XPath = "f:CompartmentDefinition/f:publisher" },
                new SearchParamDefinition() { Resource = "CompartmentDefinition", Name = "resource", Description = "Name of resource type", Type = SearchParamType.Token, Path = new string[] { "CompartmentDefinition.resource.code",  }, XPath = "f:CompartmentDefinition/f:resource/f:code" },
                new SearchParamDefinition() { Resource = "CompartmentDefinition", Name = "status", Description = "The current status of the compartment definition", Type = SearchParamType.Token, Path = new string[] { "CompartmentDefinition.status",  }, XPath = "f:CompartmentDefinition/f:status" },
                new SearchParamDefinition() { Resource = "CompartmentDefinition", Name = "title", Description = "The human-friendly name of the compartment definition", Type = SearchParamType.String, Path = new string[] { "CompartmentDefinition.title",  }, XPath = "f:CompartmentDefinition/f:title" },
                new SearchParamDefinition() { Resource = "CompartmentDefinition", Name = "url", Description = "The uri that identifies the compartment definition", Type = SearchParamType.Uri, Path = new string[] { "CompartmentDefinition.url",  }, XPath = "f:CompartmentDefinition/f:url" },
                new SearchParamDefinition() { Resource = "Composition", Name = "date", Description = "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n", Type = SearchParamType.Date, Path = new string[] { "Consent.dateTime", "SupplyRequest.authoredOn", "RiskAssessment.occurrenceDateTime", "CareTeam.period", "FamilyMemberHistory.date", "Encounter.period", "AllergyIntolerance.assertedDate", "CarePlan.period", "EpisodeOfCare.period", "Procedure.performedDateTime", "Procedure.performedPeriod", "List.date", "Immunization.date", "Flag.period", "Observation.effectiveDateTime", "Observation.effectivePeriod", "DiagnosticReport.effectiveDateTime", "DiagnosticReport.effectivePeriod", "Composition.date", "DetectedIssue.date", "ClinicalImpression.date",  }, XPath = "f:Consent/f:dateTime | f:SupplyRequest/f:authoredOn | f:RiskAssessment/f:occurrenceDateTime | f:CareTeam/f:period | f:FamilyMemberHistory/f:date | f:Encounter/f:period | f:AllergyIntolerance/f:assertedDate | f:CarePlan/f:period | f:EpisodeOfCare/f:period | f:Procedure/f:performedDateTime | f:Procedure/f:performedPeriod | f:List/f:date | f:Immunization/f:date | f:Flag/f:period | f:Observation/f:effectiveDateTime | f:Observation/f:effectivePeriod | f:DiagnosticReport/f:effectiveDateTime | f:DiagnosticReport/f:effectivePeriod | f:Composition/f:date | f:DetectedIssue/f:date | f:ClinicalImpression/f:date" },
                new SearchParamDefinition() { Resource = "Composition", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "Composition", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "Composition", Name = "type", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): The type of the referral\r\n* [DocumentManifest](documentmanifest.html): Kind of document set\r\n* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html): Specific type of encounter\r\n* [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)\r\n* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management\r\n* [Composition](composition.html): Kind of composition (LOINC if possible)\r\n", Type = SearchParamType.Token, Path = new string[] { "ReferralRequest.type", "DocumentManifest.type", "DocumentReference.type", "Encounter.type", "AllergyIntolerance.type", "EpisodeOfCare.type", "Composition.type",  }, XPath = "f:ReferralRequest/f:type | f:DocumentManifest/f:type | f:DocumentReference/f:type | f:Encounter/f:type | f:AllergyIntolerance/f:type | f:EpisodeOfCare/f:type | f:Composition/f:type" },
                new SearchParamDefinition() { Resource = "Composition", Name = "attester", Description = "Who attested the composition", Type = SearchParamType.Reference, Path = new string[] { "Composition.attester.party",  }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner }, XPath = "f:Composition/f:attester/f:party" },
                new SearchParamDefinition() { Resource = "Composition", Name = "author", Description = "Who and/or what authored the composition", Type = SearchParamType.Reference, Path = new string[] { "Composition.author",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:Composition/f:author" },
                new SearchParamDefinition() { Resource = "Composition", Name = "class", Description = "Categorization of Composition", Type = SearchParamType.Token, Path = new string[] { "Composition.class",  }, XPath = "f:Composition/f:class" },
                new SearchParamDefinition() { Resource = "Composition", Name = "confidentiality", Description = "As defined by affinity domain", Type = SearchParamType.Token, Path = new string[] { "Composition.confidentiality",  }, XPath = "f:Composition/f:confidentiality" },
                new SearchParamDefinition() { Resource = "Composition", Name = "context", Description = "Code(s) that apply to the event being documented", Type = SearchParamType.Token, Path = new string[] { "Composition.event.code",  }, XPath = "f:Composition/f:event/f:code" },
                new SearchParamDefinition() { Resource = "Composition", Name = "encounter", Description = "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition\r\n", Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.context.encounter", "RiskAssessment.context", "DeviceRequest.context", "Procedure.context", "List.encounter", "VisionPrescription.encounter", "ProcedureRequest.context", "Flag.encounter", "Observation.context", "DiagnosticReport.context", "NutritionOrder.encounter", "Composition.encounter",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:DocumentReference/f:context/f:encounter | f:RiskAssessment/f:context | f:DeviceRequest/f:context | f:Procedure/f:context | f:List/f:encounter | f:VisionPrescription/f:encounter | f:ProcedureRequest/f:context | f:Flag/f:encounter | f:Observation/f:context | f:DiagnosticReport/f:context | f:NutritionOrder/f:encounter | f:Composition/f:encounter" },
                new SearchParamDefinition() { Resource = "Composition", Name = "entry", Description = "A reference to data that supports this section", Type = SearchParamType.Reference, Path = new string[] { "Composition.section.entry",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Composition/f:section/f:entry" },
                new SearchParamDefinition() { Resource = "Composition", Name = "period", Description = "The period covered by the documentation", Type = SearchParamType.Date, Path = new string[] { "Composition.event.period",  }, XPath = "f:Composition/f:event/f:period" },
                new SearchParamDefinition() { Resource = "Composition", Name = "related-id", Description = "Target of the relationship", Type = SearchParamType.Token, Path = new string[] { "Composition.relatesTo.targetIdentifier",  }, XPath = "f:Composition/f:relatesTo/f:targetIdentifier" },
                new SearchParamDefinition() { Resource = "Composition", Name = "related-ref", Description = "Target of the relationship", Type = SearchParamType.Reference, Path = new string[] { "Composition.relatesTo.targetReference",  }, Target = new ResourceType[] { ResourceType.Composition }, XPath = "f:Composition/f:relatesTo/f:targetReference" },
                new SearchParamDefinition() { Resource = "Composition", Name = "section", Description = "Classification of section (recommended)", Type = SearchParamType.Token, Path = new string[] { "Composition.section.code",  }, XPath = "f:Composition/f:section/f:code" },
                new SearchParamDefinition() { Resource = "Composition", Name = "status", Description = "preliminary | final | amended | entered-in-error", Type = SearchParamType.Token, Path = new string[] { "Composition.status",  }, XPath = "f:Composition/f:status" },
                new SearchParamDefinition() { Resource = "Composition", Name = "subject", Description = "Who and/or what the composition is about", Type = SearchParamType.Reference, Path = new string[] { "Composition.subject",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Composition/f:subject" },
                new SearchParamDefinition() { Resource = "Composition", Name = "title", Description = "Human Readable name/title", Type = SearchParamType.String, Path = new string[] { "Composition.title",  }, XPath = "f:Composition/f:title" },
                new SearchParamDefinition() { Resource = "ConceptMap", Name = "date", Description = "The concept map publication date", Type = SearchParamType.Date, Path = new string[] { "ConceptMap.date",  }, XPath = "f:ConceptMap/f:date" },
                new SearchParamDefinition() { Resource = "ConceptMap", Name = "dependson", Description = "Reference to property mapping depends on", Type = SearchParamType.Uri, Path = new string[] { "ConceptMap.group.element.target.dependsOn.property",  }, XPath = "f:ConceptMap/f:group/f:element/f:target/f:dependsOn/f:property" },
                new SearchParamDefinition() { Resource = "ConceptMap", Name = "description", Description = "The description of the concept map", Type = SearchParamType.String, Path = new string[] { "ConceptMap.description",  }, XPath = "f:ConceptMap/f:description" },
                new SearchParamDefinition() { Resource = "ConceptMap", Name = "identifier", Description = "External identifier for the concept map", Type = SearchParamType.Token, Path = new string[] { "ConceptMap.identifier",  }, XPath = "f:ConceptMap/f:identifier" },
                new SearchParamDefinition() { Resource = "ConceptMap", Name = "jurisdiction", Description = "Intended jurisdiction for the concept map", Type = SearchParamType.Token, Path = new string[] { "ConceptMap.jurisdiction",  }, XPath = "f:ConceptMap/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "ConceptMap", Name = "name", Description = "Computationally friendly name of the concept map", Type = SearchParamType.String, Path = new string[] { "ConceptMap.name",  }, XPath = "f:ConceptMap/f:name" },
                new SearchParamDefinition() { Resource = "ConceptMap", Name = "other", Description = "Canonical URL for other concept map", Type = SearchParamType.Uri, Path = new string[] { "ConceptMap.group.unmapped.url",  }, XPath = "f:ConceptMap/f:group/f:unmapped/f:url" },
                new SearchParamDefinition() { Resource = "ConceptMap", Name = "product", Description = "Reference to property mapping depends on", Type = SearchParamType.Uri, Path = new string[] { "ConceptMap.group.element.target.product.property",  }, XPath = "f:ConceptMap/f:group/f:element/f:target/f:product/f:property" },
                new SearchParamDefinition() { Resource = "ConceptMap", Name = "publisher", Description = "Name of the publisher of the concept map", Type = SearchParamType.String, Path = new string[] { "ConceptMap.publisher",  }, XPath = "f:ConceptMap/f:publisher" },
                new SearchParamDefinition() { Resource = "ConceptMap", Name = "source", Description = "Identifies the source of the concepts which are being mapped", Type = SearchParamType.Reference, Path = new string[] { "ConceptMap.sourceReference",  }, Target = new ResourceType[] { ResourceType.ValueSet }, XPath = "f:ConceptMap/f:sourceReference" },
                new SearchParamDefinition() { Resource = "ConceptMap", Name = "source-code", Description = "Identifies element being mapped", Type = SearchParamType.Token, Path = new string[] { "ConceptMap.group.element.code",  }, XPath = "f:ConceptMap/f:group/f:element/f:code" },
                new SearchParamDefinition() { Resource = "ConceptMap", Name = "source-system", Description = "Code System (if value set crosses code systems)", Type = SearchParamType.Uri, Path = new string[] { "ConceptMap.group.source",  }, XPath = "f:ConceptMap/f:group/f:source" },
                new SearchParamDefinition() { Resource = "ConceptMap", Name = "source-uri", Description = "Identifies the source of the concepts which are being mapped", Type = SearchParamType.Reference, Path = new string[] { "ConceptMap.sourceUri",  }, Target = new ResourceType[] { ResourceType.ValueSet }, XPath = "f:ConceptMap/f:sourceUri" },
                new SearchParamDefinition() { Resource = "ConceptMap", Name = "status", Description = "The current status of the concept map", Type = SearchParamType.Token, Path = new string[] { "ConceptMap.status",  }, XPath = "f:ConceptMap/f:status" },
                new SearchParamDefinition() { Resource = "ConceptMap", Name = "target", Description = "Provides context to the mappings", Type = SearchParamType.Reference, Path = new string[] { "ConceptMap.targetReference",  }, Target = new ResourceType[] { ResourceType.ValueSet }, XPath = "f:ConceptMap/f:targetReference" },
                new SearchParamDefinition() { Resource = "ConceptMap", Name = "target-code", Description = "Code that identifies the target element", Type = SearchParamType.Token, Path = new string[] { "ConceptMap.group.element.target.code",  }, XPath = "f:ConceptMap/f:group/f:element/f:target/f:code" },
                new SearchParamDefinition() { Resource = "ConceptMap", Name = "target-system", Description = "System of the target (if necessary)", Type = SearchParamType.Uri, Path = new string[] { "ConceptMap.group.target",  }, XPath = "f:ConceptMap/f:group/f:target" },
                new SearchParamDefinition() { Resource = "ConceptMap", Name = "target-uri", Description = "Provides context to the mappings", Type = SearchParamType.Reference, Path = new string[] { "ConceptMap.targetUri",  }, Target = new ResourceType[] { ResourceType.ValueSet }, XPath = "f:ConceptMap/f:targetUri" },
                new SearchParamDefinition() { Resource = "ConceptMap", Name = "title", Description = "The human-friendly name of the concept map", Type = SearchParamType.String, Path = new string[] { "ConceptMap.title",  }, XPath = "f:ConceptMap/f:title" },
                new SearchParamDefinition() { Resource = "ConceptMap", Name = "url", Description = "The uri that identifies the concept map", Type = SearchParamType.Uri, Path = new string[] { "ConceptMap.url",  }, XPath = "f:ConceptMap/f:url" },
                new SearchParamDefinition() { Resource = "ConceptMap", Name = "version", Description = "The business version of the concept map", Type = SearchParamType.Token, Path = new string[] { "ConceptMap.version",  }, XPath = "f:ConceptMap/f:version" },
                new SearchParamDefinition() { Resource = "Condition", Name = "code", Description = "Multiple Resources: \r\n\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [List](list.html): What the purpose of this list is\r\n* [ProcedureRequest](procedurerequest.html): What is being requested/ordered\r\n* [Observation](observation.html): The code of the observation type\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report as a whole, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [Condition](condition.html): Code for the condition\r\n", Type = SearchParamType.Token, Path = new string[] { "FamilyMemberHistory.condition.code", "DeviceRequest.codeCodeableConcept", "AllergyIntolerance.code", "AllergyIntolerance.reaction.substance", "Procedure.code", "List.code", "ProcedureRequest.code", "Observation.code", "DiagnosticReport.code", "Condition.code",  }, XPath = "f:FamilyMemberHistory/f:condition/f:code | f:DeviceRequest/f:codeCodeableConcept | f:AllergyIntolerance/f:code | f:AllergyIntolerance/f:reaction/f:substance | f:Procedure/f:code | f:List/f:code | f:ProcedureRequest/f:code | f:Observation/f:code | f:DiagnosticReport/f:code | f:Condition/f:code" },
                new SearchParamDefinition() { Resource = "Condition", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "Condition", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "Condition", Name = "abatement-age", Description = "Abatement as age or age range", Type = SearchParamType.Quantity, Path = new string[] { "Condition.abatementAge", "Condition.abatementRange",  }, XPath = "f:Condition/f:abatementAge | f:Condition/f:abatementRange" },
                new SearchParamDefinition() { Resource = "Condition", Name = "abatement-boolean", Description = "Abatement boolean (boolean is true or non-boolean values are present)", Type = SearchParamType.Token, Path = new string[] { "Condition.abatementDateTime", "Condition.abatementAge", "Condition.abatementBoolean", "Condition.abatementPeriod", "Condition.abatementRange", "Condition.abatementString",  }, XPath = "f:Condition/f:abatementDateTime | f:Condition/f:abatementAge | f:Condition/f:abatementBoolean | f:Condition/f:abatementPeriod | f:Condition/f:abatementRange | f:Condition/f:abatementString" },
                new SearchParamDefinition() { Resource = "Condition", Name = "abatement-date", Description = "Date-related abatements (dateTime and period)", Type = SearchParamType.Date, Path = new string[] { "Condition.abatementDateTime", "Condition.abatementPeriod",  }, XPath = "f:Condition/f:abatementDateTime | f:Condition/f:abatementPeriod" },
                new SearchParamDefinition() { Resource = "Condition", Name = "abatement-string", Description = "Abatement as a string", Type = SearchParamType.String, Path = new string[] { "Condition.abatementString",  }, XPath = "f:Condition/f:abatementString" },
                new SearchParamDefinition() { Resource = "Condition", Name = "asserted-date", Description = "Date record was believed accurate", Type = SearchParamType.Date, Path = new string[] { "Condition.assertedDate",  }, XPath = "f:Condition/f:assertedDate" },
                new SearchParamDefinition() { Resource = "Condition", Name = "asserter", Description = "Person who asserts this condition", Type = SearchParamType.Reference, Path = new string[] { "Condition.asserter",  }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:Condition/f:asserter" },
                new SearchParamDefinition() { Resource = "Condition", Name = "body-site", Description = "Anatomical location, if relevant", Type = SearchParamType.Token, Path = new string[] { "Condition.bodySite",  }, XPath = "f:Condition/f:bodySite" },
                new SearchParamDefinition() { Resource = "Condition", Name = "category", Description = "The category of the condition", Type = SearchParamType.Token, Path = new string[] { "Condition.category",  }, XPath = "f:Condition/f:category" },
                new SearchParamDefinition() { Resource = "Condition", Name = "clinical-status", Description = "The clinical status of the condition", Type = SearchParamType.Token, Path = new string[] { "Condition.clinicalStatus",  }, XPath = "f:Condition/f:clinicalStatus" },
                new SearchParamDefinition() { Resource = "Condition", Name = "context", Description = "Encounter or episode when condition first asserted", Type = SearchParamType.Reference, Path = new string[] { "Condition.context",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:Condition/f:context" },
                new SearchParamDefinition() { Resource = "Condition", Name = "encounter", Description = "Encounter when condition first asserted", Type = SearchParamType.Reference, Path = new string[] { "Condition.context",  }, Target = new ResourceType[] { ResourceType.Encounter }, XPath = "f:Condition/f:context" },
                new SearchParamDefinition() { Resource = "Condition", Name = "evidence", Description = "Manifestation/symptom", Type = SearchParamType.Token, Path = new string[] { "Condition.evidence.code",  }, XPath = "f:Condition/f:evidence/f:code" },
                new SearchParamDefinition() { Resource = "Condition", Name = "evidence-detail", Description = "Supporting information found elsewhere", Type = SearchParamType.Reference, Path = new string[] { "Condition.evidence.detail",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Condition/f:evidence/f:detail" },
                new SearchParamDefinition() { Resource = "Condition", Name = "onset-age", Description = "Onsets as age or age range", Type = SearchParamType.Quantity, Path = new string[] { "Condition.onsetAge", "Condition.onsetRange",  }, XPath = "f:Condition/f:onsetAge | f:Condition/f:onsetRange" },
                new SearchParamDefinition() { Resource = "Condition", Name = "onset-date", Description = "Date related onsets (dateTime and Period)", Type = SearchParamType.Date, Path = new string[] { "Condition.onsetDateTime", "Condition.onsetPeriod",  }, XPath = "f:Condition/f:onsetDateTime | f:Condition/f:onsetPeriod" },
                new SearchParamDefinition() { Resource = "Condition", Name = "onset-info", Description = "Onsets as a string", Type = SearchParamType.String, Path = new string[] { "Condition.onsetString",  }, XPath = "f:Condition/f:onsetString" },
                new SearchParamDefinition() { Resource = "Condition", Name = "severity", Description = "The severity of the condition", Type = SearchParamType.Token, Path = new string[] { "Condition.severity",  }, XPath = "f:Condition/f:severity" },
                new SearchParamDefinition() { Resource = "Condition", Name = "stage", Description = "Simple summary (disease specific)", Type = SearchParamType.Token, Path = new string[] { "Condition.stage.summary",  }, XPath = "f:Condition/f:stage/f:summary" },
                new SearchParamDefinition() { Resource = "Condition", Name = "subject", Description = "Who has the condition?", Type = SearchParamType.Reference, Path = new string[] { "Condition.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:Condition/f:subject" },
                new SearchParamDefinition() { Resource = "Condition", Name = "verification-status", Description = "provisional | differential | confirmed | refuted | entered-in-error | unknown", Type = SearchParamType.Token, Path = new string[] { "Condition.verificationStatus",  }, XPath = "f:Condition/f:verificationStatus" },
                new SearchParamDefinition() { Resource = "Consent", Name = "date", Description = "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n", Type = SearchParamType.Date, Path = new string[] { "Consent.dateTime", "SupplyRequest.authoredOn", "RiskAssessment.occurrenceDateTime", "CareTeam.period", "FamilyMemberHistory.date", "Encounter.period", "AllergyIntolerance.assertedDate", "CarePlan.period", "EpisodeOfCare.period", "Procedure.performedDateTime", "Procedure.performedPeriod", "List.date", "Immunization.date", "Flag.period", "Observation.effectiveDateTime", "Observation.effectivePeriod", "DiagnosticReport.effectiveDateTime", "DiagnosticReport.effectivePeriod", "Composition.date", "DetectedIssue.date", "ClinicalImpression.date",  }, XPath = "f:Consent/f:dateTime | f:SupplyRequest/f:authoredOn | f:RiskAssessment/f:occurrenceDateTime | f:CareTeam/f:period | f:FamilyMemberHistory/f:date | f:Encounter/f:period | f:AllergyIntolerance/f:assertedDate | f:CarePlan/f:period | f:EpisodeOfCare/f:period | f:Procedure/f:performedDateTime | f:Procedure/f:performedPeriod | f:List/f:date | f:Immunization/f:date | f:Flag/f:period | f:Observation/f:effectiveDateTime | f:Observation/f:effectivePeriod | f:DiagnosticReport/f:effectiveDateTime | f:DiagnosticReport/f:effectivePeriod | f:Composition/f:date | f:DetectedIssue/f:date | f:ClinicalImpression/f:date" },
                new SearchParamDefinition() { Resource = "Consent", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "Consent", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "Consent", Name = "action", Description = "Actions controlled by this consent", Type = SearchParamType.Token, Path = new string[] { "Consent.action", "Consent.except.action",  }, XPath = "f:Consent/f:action | f:Consent/f:except/f:action" },
                new SearchParamDefinition() { Resource = "Consent", Name = "actor", Description = "Resource for the actor (or group, by role)", Type = SearchParamType.Reference, Path = new string[] { "Consent.actor.reference", "Consent.except.actor.reference",  }, Target = new ResourceType[] { ResourceType.CareTeam, ResourceType.Device, ResourceType.Group, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:Consent/f:actor/f:reference | f:Consent/f:except/f:actor/f:reference" },
                new SearchParamDefinition() { Resource = "Consent", Name = "category", Description = "Classification of the consent statement - for indexing/retrieval", Type = SearchParamType.Token, Path = new string[] { "Consent.category",  }, XPath = "f:Consent/f:category" },
                new SearchParamDefinition() { Resource = "Consent", Name = "consentor", Description = "Who is agreeing to the policy and exceptions", Type = SearchParamType.Reference, Path = new string[] { "Consent.consentingParty",  }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:Consent/f:consentingParty" },
                new SearchParamDefinition() { Resource = "Consent", Name = "data", Description = "The actual data reference", Type = SearchParamType.Reference, Path = new string[] { "Consent.data.reference", "Consent.except.data.reference",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Consent/f:data/f:reference | f:Consent/f:except/f:data/f:reference" },
                new SearchParamDefinition() { Resource = "Consent", Name = "organization", Description = "Custodian of the consent", Type = SearchParamType.Reference, Path = new string[] { "Consent.organization",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:Consent/f:organization" },
                new SearchParamDefinition() { Resource = "Consent", Name = "period", Description = "Period that this consent applies", Type = SearchParamType.Date, Path = new string[] { "Consent.period",  }, XPath = "f:Consent/f:period" },
                new SearchParamDefinition() { Resource = "Consent", Name = "purpose", Description = "Context of activities for which the agreement is made", Type = SearchParamType.Token, Path = new string[] { "Consent.purpose", "Consent.except.purpose",  }, XPath = "f:Consent/f:purpose | f:Consent/f:except/f:purpose" },
                new SearchParamDefinition() { Resource = "Consent", Name = "securitylabel", Description = "Security Labels that define affected resources", Type = SearchParamType.Token, Path = new string[] { "Consent.securityLabel", "Consent.except.securityLabel",  }, XPath = "f:Consent/f:securityLabel | f:Consent/f:except/f:securityLabel" },
                new SearchParamDefinition() { Resource = "Consent", Name = "source", Description = "Source from which this consent is taken", Type = SearchParamType.Reference, Path = new string[] { "Consent.sourceAttachment", "Consent.sourceIdentifier", "Consent.sourceReference",  }, Target = new ResourceType[] { ResourceType.Consent, ResourceType.Contract, ResourceType.DocumentReference, ResourceType.QuestionnaireResponse }, XPath = "f:Consent/f:sourceAttachment | f:Consent/f:sourceIdentifier | f:Consent/f:sourceReference" },
                new SearchParamDefinition() { Resource = "Consent", Name = "status", Description = "draft | proposed | active | rejected | inactive | entered-in-error", Type = SearchParamType.Token, Path = new string[] { "Consent.status",  }, XPath = "f:Consent/f:status" },
                new SearchParamDefinition() { Resource = "Contract", Name = "agent", Description = "Agent to the Contact", Type = SearchParamType.Reference, Path = new string[] { "Contract.agent.actor",  }, Target = new ResourceType[] { ResourceType.Contract, ResourceType.Device, ResourceType.Group, ResourceType.Location, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, ResourceType.Substance }, XPath = "f:Contract/f:agent/f:actor" },
                new SearchParamDefinition() { Resource = "Contract", Name = "authority", Description = "The authority of the contract", Type = SearchParamType.Reference, Path = new string[] { "Contract.authority",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:Contract/f:authority" },
                new SearchParamDefinition() { Resource = "Contract", Name = "domain", Description = "The domain of the contract", Type = SearchParamType.Reference, Path = new string[] { "Contract.domain",  }, Target = new ResourceType[] { ResourceType.Location }, XPath = "f:Contract/f:domain" },
                new SearchParamDefinition() { Resource = "Contract", Name = "identifier", Description = "The identity of the contract", Type = SearchParamType.Token, Path = new string[] { "Contract.identifier",  }, XPath = "f:Contract/f:identifier" },
                new SearchParamDefinition() { Resource = "Contract", Name = "issued", Description = "The date/time the contract was issued", Type = SearchParamType.Date, Path = new string[] { "Contract.issued",  }, XPath = "f:Contract/f:issued" },
                new SearchParamDefinition() { Resource = "Contract", Name = "patient", Description = "The identity of the subject of the contract (if a patient)", Type = SearchParamType.Reference, Path = new string[] { "Contract.subject",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:Contract/f:subject" },
                new SearchParamDefinition() { Resource = "Contract", Name = "signer", Description = "Contract Signatory Party", Type = SearchParamType.Reference, Path = new string[] { "Contract.signer.party",  }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:Contract/f:signer/f:party" },
                new SearchParamDefinition() { Resource = "Contract", Name = "subject", Description = "The identity of the subject of the contract", Type = SearchParamType.Reference, Path = new string[] { "Contract.subject",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Contract/f:subject" },
                new SearchParamDefinition() { Resource = "Contract", Name = "term-topic", Description = "The identity of the topic of the contract terms", Type = SearchParamType.Reference, Path = new string[] { "Contract.term.topic",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Contract/f:term/f:topic" },
                new SearchParamDefinition() { Resource = "Coverage", Name = "beneficiary", Description = "Covered party", Type = SearchParamType.Reference, Path = new string[] { "Coverage.beneficiary",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:Coverage/f:beneficiary" },
                new SearchParamDefinition() { Resource = "Coverage", Name = "class", Description = "Class identifier", Type = SearchParamType.String, Path = new string[] { "Coverage.grouping.class",  }, XPath = "f:Coverage/f:grouping/f:class" },
                new SearchParamDefinition() { Resource = "Coverage", Name = "dependent", Description = "Dependent number", Type = SearchParamType.String, Path = new string[] { "Coverage.dependent",  }, XPath = "f:Coverage/f:dependent" },
                new SearchParamDefinition() { Resource = "Coverage", Name = "group", Description = "Group identifier", Type = SearchParamType.String, Path = new string[] { "Coverage.grouping.group",  }, XPath = "f:Coverage/f:grouping/f:group" },
                new SearchParamDefinition() { Resource = "Coverage", Name = "identifier", Description = "The primary identifier of the insured and the coverage", Type = SearchParamType.Token, Path = new string[] { "Coverage.identifier",  }, XPath = "f:Coverage/f:identifier" },
                new SearchParamDefinition() { Resource = "Coverage", Name = "payor", Description = "The identity of the insurer or party paying for services", Type = SearchParamType.Reference, Path = new string[] { "Coverage.payor",  }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Patient, ResourceType.RelatedPerson }, XPath = "f:Coverage/f:payor" },
                new SearchParamDefinition() { Resource = "Coverage", Name = "plan", Description = "A plan or policy identifier", Type = SearchParamType.String, Path = new string[] { "Coverage.grouping.plan",  }, XPath = "f:Coverage/f:grouping/f:plan" },
                new SearchParamDefinition() { Resource = "Coverage", Name = "policy-holder", Description = "Reference to the policyholder", Type = SearchParamType.Reference, Path = new string[] { "Coverage.policyHolder",  }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Patient, ResourceType.RelatedPerson }, XPath = "f:Coverage/f:policyHolder" },
                new SearchParamDefinition() { Resource = "Coverage", Name = "sequence", Description = "Sequence number", Type = SearchParamType.String, Path = new string[] { "Coverage.sequence",  }, XPath = "f:Coverage/f:sequence" },
                new SearchParamDefinition() { Resource = "Coverage", Name = "subclass", Description = "Sub-class identifier", Type = SearchParamType.String, Path = new string[] { "Coverage.grouping.subClass",  }, XPath = "f:Coverage/f:grouping/f:subClass" },
                new SearchParamDefinition() { Resource = "Coverage", Name = "subgroup", Description = "Sub-group identifier", Type = SearchParamType.String, Path = new string[] { "Coverage.grouping.subGroup",  }, XPath = "f:Coverage/f:grouping/f:subGroup" },
                new SearchParamDefinition() { Resource = "Coverage", Name = "subplan", Description = "Sub-plan identifier", Type = SearchParamType.String, Path = new string[] { "Coverage.grouping.subPlan",  }, XPath = "f:Coverage/f:grouping/f:subPlan" },
                new SearchParamDefinition() { Resource = "Coverage", Name = "subscriber", Description = "Reference to the subscriber", Type = SearchParamType.Reference, Path = new string[] { "Coverage.subscriber",  }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.RelatedPerson }, XPath = "f:Coverage/f:subscriber" },
                new SearchParamDefinition() { Resource = "Coverage", Name = "type", Description = "The kind of coverage (health plan, auto, Workers Compensation)", Type = SearchParamType.Token, Path = new string[] { "Coverage.type",  }, XPath = "f:Coverage/f:type" },
                new SearchParamDefinition() { Resource = "DataElement", Name = "code", Description = "A code for the data element (server may choose to do subsumption)", Type = SearchParamType.Token, Path = new string[] { "DataElement.element.code",  }, XPath = "f:DataElement/f:element/f:code" },
                new SearchParamDefinition() { Resource = "DataElement", Name = "date", Description = "The data element publication date", Type = SearchParamType.Date, Path = new string[] { "DataElement.date",  }, XPath = "f:DataElement/f:date" },
                new SearchParamDefinition() { Resource = "DataElement", Name = "description", Description = "Text search in the description of the data element.  This corresponds to the definition of the first DataElement.element.", Type = SearchParamType.String, Path = new string[] { "DataElement.element.definition",  }, XPath = "f:DataElement/f:element/f:definition" },
                new SearchParamDefinition() { Resource = "DataElement", Name = "identifier", Description = "External identifier for the data element", Type = SearchParamType.Token, Path = new string[] { "DataElement.identifier",  }, XPath = "f:DataElement/f:identifier" },
                new SearchParamDefinition() { Resource = "DataElement", Name = "jurisdiction", Description = "Intended jurisdiction for the data element", Type = SearchParamType.Token, Path = new string[] { "DataElement.jurisdiction",  }, XPath = "f:DataElement/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "DataElement", Name = "name", Description = "Computationally friendly name of the data element", Type = SearchParamType.String, Path = new string[] { "DataElement.name",  }, XPath = "f:DataElement/f:name" },
                new SearchParamDefinition() { Resource = "DataElement", Name = "publisher", Description = "Name of the publisher of the data element", Type = SearchParamType.String, Path = new string[] { "DataElement.publisher",  }, XPath = "f:DataElement/f:publisher" },
                new SearchParamDefinition() { Resource = "DataElement", Name = "status", Description = "The current status of the data element", Type = SearchParamType.Token, Path = new string[] { "DataElement.status",  }, XPath = "f:DataElement/f:status" },
                new SearchParamDefinition() { Resource = "DataElement", Name = "stringency", Description = "The stringency of the data element definition", Type = SearchParamType.Token, Path = new string[] { "DataElement.stringency",  }, XPath = "f:DataElement/f:stringency" },
                new SearchParamDefinition() { Resource = "DataElement", Name = "title", Description = "The human-friendly name of the data element", Type = SearchParamType.String, Path = new string[] { "DataElement.title",  }, XPath = "f:DataElement/f:title" },
                new SearchParamDefinition() { Resource = "DataElement", Name = "url", Description = "The uri that identifies the data element", Type = SearchParamType.Uri, Path = new string[] { "DataElement.url",  }, XPath = "f:DataElement/f:url" },
                new SearchParamDefinition() { Resource = "DataElement", Name = "version", Description = "The business version of the data element", Type = SearchParamType.Token, Path = new string[] { "DataElement.version",  }, XPath = "f:DataElement/f:version" },
                new SearchParamDefinition() { Resource = "DataElement", Name = "objectClass", Description = "Matches on the 11179-objectClass extension value", Type = SearchParamType.Token, Path = new string[] { "DataElement.element.mapping.extension[@url='http:..hl7.org.fhir.StructureDefinition.11179-objectClass']", "DataElement.element.mapping.extension[@url='http:..hl7.org.fhir.StructureDefinition.11179-objectClass']",  }, XPath = "f:DataElement/f:element/f:mapping/f:extension[@url='http://hl7.org/fhir/StructureDefinition/11179-objectClass'] | f:DataElement/f:element/f:mapping/f:extension[@url='http://hl7.org/fhir/StructureDefinition/11179-objectClass']" },
                new SearchParamDefinition() { Resource = "DataElement", Name = "objectClassProperty", Description = "Matches on the 11179-objectClassProperty extension value", Type = SearchParamType.Token, Path = new string[] { "DataElement.element.mapping.extension[@url='http:..hl7.org.fhir.StructureDefinition.11179-objectClassProperty']", "DataElement.element.mapping.extension[@url='http:..hl7.org.fhir.StructureDefinition.11179-objectClassProperty']",  }, XPath = "f:DataElement/f:element/f:mapping/f:extension[@url='http://hl7.org/fhir/StructureDefinition/11179-objectClassProperty'] | f:DataElement/f:element/f:mapping/f:extension[@url='http://hl7.org/fhir/StructureDefinition/11179-objectClassProperty']" },
                new SearchParamDefinition() { Resource = "DetectedIssue", Name = "date", Description = "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n", Type = SearchParamType.Date, Path = new string[] { "Consent.dateTime", "SupplyRequest.authoredOn", "RiskAssessment.occurrenceDateTime", "CareTeam.period", "FamilyMemberHistory.date", "Encounter.period", "AllergyIntolerance.assertedDate", "CarePlan.period", "EpisodeOfCare.period", "Procedure.performedDateTime", "Procedure.performedPeriod", "List.date", "Immunization.date", "Flag.period", "Observation.effectiveDateTime", "Observation.effectivePeriod", "DiagnosticReport.effectiveDateTime", "DiagnosticReport.effectivePeriod", "Composition.date", "DetectedIssue.date", "ClinicalImpression.date",  }, XPath = "f:Consent/f:dateTime | f:SupplyRequest/f:authoredOn | f:RiskAssessment/f:occurrenceDateTime | f:CareTeam/f:period | f:FamilyMemberHistory/f:date | f:Encounter/f:period | f:AllergyIntolerance/f:assertedDate | f:CarePlan/f:period | f:EpisodeOfCare/f:period | f:Procedure/f:performedDateTime | f:Procedure/f:performedPeriod | f:List/f:date | f:Immunization/f:date | f:Flag/f:period | f:Observation/f:effectiveDateTime | f:Observation/f:effectivePeriod | f:DiagnosticReport/f:effectiveDateTime | f:DiagnosticReport/f:effectivePeriod | f:Composition/f:date | f:DetectedIssue/f:date | f:ClinicalImpression/f:date" },
                new SearchParamDefinition() { Resource = "DetectedIssue", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "DetectedIssue", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "DetectedIssue", Name = "author", Description = "The provider or device that identified the issue", Type = SearchParamType.Reference, Path = new string[] { "DetectedIssue.author",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Practitioner }, XPath = "f:DetectedIssue/f:author" },
                new SearchParamDefinition() { Resource = "DetectedIssue", Name = "category", Description = "Issue Category, e.g. drug-drug, duplicate therapy, etc.", Type = SearchParamType.Token, Path = new string[] { "DetectedIssue.category",  }, XPath = "f:DetectedIssue/f:category" },
                new SearchParamDefinition() { Resource = "DetectedIssue", Name = "implicated", Description = "Problem resource", Type = SearchParamType.Reference, Path = new string[] { "DetectedIssue.implicated",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:DetectedIssue/f:implicated" },
                new SearchParamDefinition() { Resource = "Device", Name = "device-name", Description = "A server defined search that may match any of the string fields in the Device.udi.name  or Device.type.coding.display or  Device.type.text", Type = SearchParamType.String, Path = new string[] { "Device.udi.name", "Device.type.text", "Device.type.coding.display",  }, XPath = "f:Device/f:udi/f:name | f:Device/f:type/f:text | f:Device/f:type/f:coding/f:display" },
                new SearchParamDefinition() { Resource = "Device", Name = "identifier", Description = "Instance id from manufacturer, owner, and others", Type = SearchParamType.Token, Path = new string[] { "Device.identifier",  }, XPath = "f:Device/f:identifier" },
                new SearchParamDefinition() { Resource = "Device", Name = "location", Description = "A location, where the resource is found", Type = SearchParamType.Reference, Path = new string[] { "Device.location",  }, Target = new ResourceType[] { ResourceType.Location }, XPath = "f:Device/f:location" },
                new SearchParamDefinition() { Resource = "Device", Name = "manufacturer", Description = "The manufacturer of the device", Type = SearchParamType.String, Path = new string[] { "Device.manufacturer",  }, XPath = "f:Device/f:manufacturer" },
                new SearchParamDefinition() { Resource = "Device", Name = "model", Description = "The model of the device", Type = SearchParamType.String, Path = new string[] { "Device.model",  }, XPath = "f:Device/f:model" },
                new SearchParamDefinition() { Resource = "Device", Name = "organization", Description = "The organization responsible for the device", Type = SearchParamType.Reference, Path = new string[] { "Device.owner",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:Device/f:owner" },
                new SearchParamDefinition() { Resource = "Device", Name = "patient", Description = "Patient information, if the resource is affixed to a person", Type = SearchParamType.Reference, Path = new string[] { "Device.patient",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:Device/f:patient" },
                new SearchParamDefinition() { Resource = "Device", Name = "status", Description = "active | inactive | entered-in-error | unknown", Type = SearchParamType.Token, Path = new string[] { "Device.status",  }, XPath = "f:Device/f:status" },
                new SearchParamDefinition() { Resource = "Device", Name = "type", Description = "The type of the device", Type = SearchParamType.Token, Path = new string[] { "Device.type",  }, XPath = "f:Device/f:type" },
                new SearchParamDefinition() { Resource = "Device", Name = "udi-carrier", Description = "UDI Barcode (RFID or other technology) string either in HRF format or AIDC format converted to base64 string.", Type = SearchParamType.String, Path = new string[] { "Device.udi.carrierHRF", "Device.udi.carrierAIDC",  }, XPath = "f:Device/f:udi/f:carrierHRF | f:Device/f:udi/f:carrierAIDC" },
                new SearchParamDefinition() { Resource = "Device", Name = "udi-di", Description = "The udi Device Identifier (DI)", Type = SearchParamType.String, Path = new string[] { "Device.udi.deviceIdentifier",  }, XPath = "f:Device/f:udi/f:deviceIdentifier" },
                new SearchParamDefinition() { Resource = "Device", Name = "url", Description = "Network address to contact device", Type = SearchParamType.Uri, Path = new string[] { "Device.url",  }, XPath = "f:Device/f:url" },
                new SearchParamDefinition() { Resource = "DeviceComponent", Name = "identifier", Description = "The identifier of the component", Type = SearchParamType.Token, Path = new string[] { "DeviceComponent.identifier",  }, XPath = "f:DeviceComponent/f:identifier" },
                new SearchParamDefinition() { Resource = "DeviceComponent", Name = "parent", Description = "The parent DeviceComponent resource", Type = SearchParamType.Reference, Path = new string[] { "DeviceComponent.parent",  }, Target = new ResourceType[] { ResourceType.DeviceComponent }, XPath = "f:DeviceComponent/f:parent" },
                new SearchParamDefinition() { Resource = "DeviceComponent", Name = "source", Description = "The device source", Type = SearchParamType.Reference, Path = new string[] { "DeviceComponent.source",  }, Target = new ResourceType[] { ResourceType.Device }, XPath = "f:DeviceComponent/f:source" },
                new SearchParamDefinition() { Resource = "DeviceComponent", Name = "type", Description = "The device component type", Type = SearchParamType.Token, Path = new string[] { "DeviceComponent.type",  }, XPath = "f:DeviceComponent/f:type" },
                new SearchParamDefinition() { Resource = "DeviceMetric", Name = "category", Description = "The category of the metric", Type = SearchParamType.Token, Path = new string[] { "DeviceMetric.category",  }, XPath = "f:DeviceMetric/f:category" },
                new SearchParamDefinition() { Resource = "DeviceMetric", Name = "identifier", Description = "The identifier of the metric", Type = SearchParamType.Token, Path = new string[] { "DeviceMetric.identifier",  }, XPath = "f:DeviceMetric/f:identifier" },
                new SearchParamDefinition() { Resource = "DeviceMetric", Name = "parent", Description = "The parent DeviceMetric resource", Type = SearchParamType.Reference, Path = new string[] { "DeviceMetric.parent",  }, Target = new ResourceType[] { ResourceType.DeviceComponent }, XPath = "f:DeviceMetric/f:parent" },
                new SearchParamDefinition() { Resource = "DeviceMetric", Name = "source", Description = "The device resource", Type = SearchParamType.Reference, Path = new string[] { "DeviceMetric.source",  }, Target = new ResourceType[] { ResourceType.Device }, XPath = "f:DeviceMetric/f:source" },
                new SearchParamDefinition() { Resource = "DeviceMetric", Name = "type", Description = "The component type", Type = SearchParamType.Token, Path = new string[] { "DeviceMetric.type",  }, XPath = "f:DeviceMetric/f:type" },
                new SearchParamDefinition() { Resource = "DeviceRequest", Name = "code", Description = "Multiple Resources: \r\n\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [List](list.html): What the purpose of this list is\r\n* [ProcedureRequest](procedurerequest.html): What is being requested/ordered\r\n* [Observation](observation.html): The code of the observation type\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report as a whole, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [Condition](condition.html): Code for the condition\r\n", Type = SearchParamType.Token, Path = new string[] { "FamilyMemberHistory.condition.code", "DeviceRequest.codeCodeableConcept", "AllergyIntolerance.code", "AllergyIntolerance.reaction.substance", "Procedure.code", "List.code", "ProcedureRequest.code", "Observation.code", "DiagnosticReport.code", "Condition.code",  }, XPath = "f:FamilyMemberHistory/f:condition/f:code | f:DeviceRequest/f:codeCodeableConcept | f:AllergyIntolerance/f:code | f:AllergyIntolerance/f:reaction/f:substance | f:Procedure/f:code | f:List/f:code | f:ProcedureRequest/f:code | f:Observation/f:code | f:DiagnosticReport/f:code | f:Condition/f:code" },
                new SearchParamDefinition() { Resource = "DeviceRequest", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "DeviceRequest", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "DeviceRequest", Name = "encounter", Description = "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition\r\n", Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.context.encounter", "RiskAssessment.context", "DeviceRequest.context", "Procedure.context", "List.encounter", "VisionPrescription.encounter", "ProcedureRequest.context", "Flag.encounter", "Observation.context", "DiagnosticReport.context", "NutritionOrder.encounter", "Composition.encounter",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:DocumentReference/f:context/f:encounter | f:RiskAssessment/f:context | f:DeviceRequest/f:context | f:Procedure/f:context | f:List/f:encounter | f:VisionPrescription/f:encounter | f:ProcedureRequest/f:context | f:Flag/f:encounter | f:Observation/f:context | f:DiagnosticReport/f:context | f:NutritionOrder/f:encounter | f:Composition/f:encounter" },
                new SearchParamDefinition() { Resource = "DeviceRequest", Name = "authored-on", Description = "When the request transitioned to being actionable", Type = SearchParamType.Date, Path = new string[] { "DeviceRequest.authoredOn",  }, XPath = "f:DeviceRequest/f:authoredOn" },
                new SearchParamDefinition() { Resource = "DeviceRequest", Name = "based-on", Description = "Plan/proposal/order fulfilled by this request", Type = SearchParamType.Reference, Path = new string[] { "DeviceRequest.basedOn",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:DeviceRequest/f:basedOn" },
                new SearchParamDefinition() { Resource = "DeviceRequest", Name = "definition", Description = "Protocol or definition followed by this request", Type = SearchParamType.Reference, Path = new string[] { "DeviceRequest.definition",  }, Target = new ResourceType[] { ResourceType.ActivityDefinition, ResourceType.PlanDefinition }, XPath = "f:DeviceRequest/f:definition" },
                new SearchParamDefinition() { Resource = "DeviceRequest", Name = "device", Description = "Reference to resource that is being requested/ordered", Type = SearchParamType.Reference, Path = new string[] { "DeviceRequest.codeReference",  }, Target = new ResourceType[] { ResourceType.Device }, XPath = "f:DeviceRequest/f:codeReference" },
                new SearchParamDefinition() { Resource = "DeviceRequest", Name = "event-date", Description = "When service should occur", Type = SearchParamType.Date, Path = new string[] { "DeviceRequest.occurrenceDateTime", "DeviceRequest.occurrencePeriod",  }, XPath = "f:DeviceRequest/f:occurrenceDateTime | f:DeviceRequest/f:occurrencePeriod" },
                new SearchParamDefinition() { Resource = "DeviceRequest", Name = "group-identifier", Description = "Composite request this is part of", Type = SearchParamType.Token, Path = new string[] { "DeviceRequest.groupIdentifier",  }, XPath = "f:DeviceRequest/f:groupIdentifier" },
                new SearchParamDefinition() { Resource = "DeviceRequest", Name = "intent", Description = "proposal | plan | original-order |reflex-order", Type = SearchParamType.Token, Path = new string[] { "DeviceRequest.intent",  }, XPath = "f:DeviceRequest/f:intent" },
                new SearchParamDefinition() { Resource = "DeviceRequest", Name = "performer", Description = "Desired performer for service", Type = SearchParamType.Reference, Path = new string[] { "DeviceRequest.performer",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.HealthcareService, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:DeviceRequest/f:performer" },
                new SearchParamDefinition() { Resource = "DeviceRequest", Name = "priorrequest", Description = "Request takes the place of referenced completed or terminated requests", Type = SearchParamType.Reference, Path = new string[] { "DeviceRequest.priorRequest",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:DeviceRequest/f:priorRequest" },
                new SearchParamDefinition() { Resource = "DeviceRequest", Name = "requester", Description = "Who/what is requesting service ", Type = SearchParamType.Reference, Path = new string[] { "DeviceRequest.requester.agent",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Practitioner }, XPath = "f:DeviceRequest/f:requester/f:agent" },
                new SearchParamDefinition() { Resource = "DeviceRequest", Name = "status", Description = "entered-in-error | draft | active |suspended | completed ", Type = SearchParamType.Token, Path = new string[] { "DeviceRequest.status",  }, XPath = "f:DeviceRequest/f:status" },
                new SearchParamDefinition() { Resource = "DeviceRequest", Name = "subject", Description = "Individual the service is ordered for", Type = SearchParamType.Reference, Path = new string[] { "DeviceRequest.subject",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Location, ResourceType.Patient }, XPath = "f:DeviceRequest/f:subject" },
                new SearchParamDefinition() { Resource = "DeviceUseStatement", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "DeviceUseStatement", Name = "device", Description = "Search by device", Type = SearchParamType.Reference, Path = new string[] { "DeviceUseStatement.device",  }, Target = new ResourceType[] { ResourceType.Device }, XPath = "f:DeviceUseStatement/f:device" },
                new SearchParamDefinition() { Resource = "DeviceUseStatement", Name = "identifier", Description = "Search by identifier", Type = SearchParamType.Token, Path = new string[] { "DeviceUseStatement.identifier",  }, XPath = "f:DeviceUseStatement/f:identifier" },
                new SearchParamDefinition() { Resource = "DeviceUseStatement", Name = "subject", Description = "Search by subject", Type = SearchParamType.Reference, Path = new string[] { "DeviceUseStatement.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:DeviceUseStatement/f:subject" },
                new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "code", Description = "Multiple Resources: \r\n\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [List](list.html): What the purpose of this list is\r\n* [ProcedureRequest](procedurerequest.html): What is being requested/ordered\r\n* [Observation](observation.html): The code of the observation type\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report as a whole, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [Condition](condition.html): Code for the condition\r\n", Type = SearchParamType.Token, Path = new string[] { "FamilyMemberHistory.condition.code", "DeviceRequest.codeCodeableConcept", "AllergyIntolerance.code", "AllergyIntolerance.reaction.substance", "Procedure.code", "List.code", "ProcedureRequest.code", "Observation.code", "DiagnosticReport.code", "Condition.code",  }, XPath = "f:FamilyMemberHistory/f:condition/f:code | f:DeviceRequest/f:codeCodeableConcept | f:AllergyIntolerance/f:code | f:AllergyIntolerance/f:reaction/f:substance | f:Procedure/f:code | f:List/f:code | f:ProcedureRequest/f:code | f:Observation/f:code | f:DiagnosticReport/f:code | f:Condition/f:code" },
                new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "date", Description = "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n", Type = SearchParamType.Date, Path = new string[] { "Consent.dateTime", "SupplyRequest.authoredOn", "RiskAssessment.occurrenceDateTime", "CareTeam.period", "FamilyMemberHistory.date", "Encounter.period", "AllergyIntolerance.assertedDate", "CarePlan.period", "EpisodeOfCare.period", "Procedure.performedDateTime", "Procedure.performedPeriod", "List.date", "Immunization.date", "Flag.period", "Observation.effectiveDateTime", "Observation.effectivePeriod", "DiagnosticReport.effectiveDateTime", "DiagnosticReport.effectivePeriod", "Composition.date", "DetectedIssue.date", "ClinicalImpression.date",  }, XPath = "f:Consent/f:dateTime | f:SupplyRequest/f:authoredOn | f:RiskAssessment/f:occurrenceDateTime | f:CareTeam/f:period | f:FamilyMemberHistory/f:date | f:Encounter/f:period | f:AllergyIntolerance/f:assertedDate | f:CarePlan/f:period | f:EpisodeOfCare/f:period | f:Procedure/f:performedDateTime | f:Procedure/f:performedPeriod | f:List/f:date | f:Immunization/f:date | f:Flag/f:period | f:Observation/f:effectiveDateTime | f:Observation/f:effectivePeriod | f:DiagnosticReport/f:effectiveDateTime | f:DiagnosticReport/f:effectivePeriod | f:Composition/f:date | f:DetectedIssue/f:date | f:ClinicalImpression/f:date" },
                new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "encounter", Description = "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition\r\n", Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.context.encounter", "RiskAssessment.context", "DeviceRequest.context", "Procedure.context", "List.encounter", "VisionPrescription.encounter", "ProcedureRequest.context", "Flag.encounter", "Observation.context", "DiagnosticReport.context", "NutritionOrder.encounter", "Composition.encounter",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:DocumentReference/f:context/f:encounter | f:RiskAssessment/f:context | f:DeviceRequest/f:context | f:Procedure/f:context | f:List/f:encounter | f:VisionPrescription/f:encounter | f:ProcedureRequest/f:context | f:Flag/f:encounter | f:Observation/f:context | f:DiagnosticReport/f:context | f:NutritionOrder/f:encounter | f:Composition/f:encounter" },
                new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "based-on", Description = "Reference to the procedure request.", Type = SearchParamType.Reference, Path = new string[] { "DiagnosticReport.basedOn",  }, Target = new ResourceType[] { ResourceType.CarePlan, ResourceType.ImmunizationRecommendation, ResourceType.MedicationRequest, ResourceType.NutritionOrder, ResourceType.ProcedureRequest, ResourceType.ReferralRequest }, XPath = "f:DiagnosticReport/f:basedOn" },
                new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "category", Description = "Which diagnostic discipline/department created the report", Type = SearchParamType.Token, Path = new string[] { "DiagnosticReport.category",  }, XPath = "f:DiagnosticReport/f:category" },
                new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "context", Description = "Healthcare event (Episode of Care or Encounter) related to the report", Type = SearchParamType.Reference, Path = new string[] { "DiagnosticReport.context",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:DiagnosticReport/f:context" },
                new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "diagnosis", Description = "A coded diagnosis on the report", Type = SearchParamType.Token, Path = new string[] { "DiagnosticReport.codedDiagnosis",  }, XPath = "f:DiagnosticReport/f:codedDiagnosis" },
                new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "image", Description = "A reference to the image source.", Type = SearchParamType.Reference, Path = new string[] { "DiagnosticReport.image.link",  }, Target = new ResourceType[] { ResourceType.Media }, XPath = "f:DiagnosticReport/f:image/f:link" },
                new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "issued", Description = "When the report was issued", Type = SearchParamType.Date, Path = new string[] { "DiagnosticReport.issued",  }, XPath = "f:DiagnosticReport/f:issued" },
                new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "performer", Description = "Who was the source of the report (organization)", Type = SearchParamType.Reference, Path = new string[] { "DiagnosticReport.performer.actor",  }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Practitioner }, XPath = "f:DiagnosticReport/f:performer/f:actor" },
                new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "result", Description = "Link to an atomic result (observation resource)", Type = SearchParamType.Reference, Path = new string[] { "DiagnosticReport.result",  }, Target = new ResourceType[] { ResourceType.Observation }, XPath = "f:DiagnosticReport/f:result" },
                new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "specimen", Description = "The specimen details", Type = SearchParamType.Reference, Path = new string[] { "DiagnosticReport.specimen",  }, Target = new ResourceType[] { ResourceType.Specimen }, XPath = "f:DiagnosticReport/f:specimen" },
                new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "status", Description = "The status of the report", Type = SearchParamType.Token, Path = new string[] { "DiagnosticReport.status",  }, XPath = "f:DiagnosticReport/f:status" },
                new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "subject", Description = "The subject of the report", Type = SearchParamType.Reference, Path = new string[] { "DiagnosticReport.subject",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Location, ResourceType.Patient }, XPath = "f:DiagnosticReport/f:subject" },
                new SearchParamDefinition() { Resource = "DocumentManifest", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "DocumentManifest", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "DocumentManifest", Name = "type", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): The type of the referral\r\n* [DocumentManifest](documentmanifest.html): Kind of document set\r\n* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html): Specific type of encounter\r\n* [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)\r\n* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management\r\n* [Composition](composition.html): Kind of composition (LOINC if possible)\r\n", Type = SearchParamType.Token, Path = new string[] { "ReferralRequest.type", "DocumentManifest.type", "DocumentReference.type", "Encounter.type", "AllergyIntolerance.type", "EpisodeOfCare.type", "Composition.type",  }, XPath = "f:ReferralRequest/f:type | f:DocumentManifest/f:type | f:DocumentReference/f:type | f:Encounter/f:type | f:AllergyIntolerance/f:type | f:EpisodeOfCare/f:type | f:Composition/f:type" },
                new SearchParamDefinition() { Resource = "DocumentManifest", Name = "author", Description = "Who and/or what authored the manifest", Type = SearchParamType.Reference, Path = new string[] { "DocumentManifest.author",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:DocumentManifest/f:author" },
                new SearchParamDefinition() { Resource = "DocumentManifest", Name = "content-ref", Description = "Contents of this set of documents", Type = SearchParamType.Reference, Path = new string[] { "DocumentManifest.content.pReference",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:DocumentManifest/f:content/f:pReference" },
                new SearchParamDefinition() { Resource = "DocumentManifest", Name = "created", Description = "When this document manifest created", Type = SearchParamType.Date, Path = new string[] { "DocumentManifest.created",  }, XPath = "f:DocumentManifest/f:created" },
                new SearchParamDefinition() { Resource = "DocumentManifest", Name = "description", Description = "Human-readable description (title)", Type = SearchParamType.String, Path = new string[] { "DocumentManifest.description",  }, XPath = "f:DocumentManifest/f:description" },
                new SearchParamDefinition() { Resource = "DocumentManifest", Name = "recipient", Description = "Intended to get notified about this set of documents", Type = SearchParamType.Reference, Path = new string[] { "DocumentManifest.recipient",  }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:DocumentManifest/f:recipient" },
                new SearchParamDefinition() { Resource = "DocumentManifest", Name = "related-id", Description = "Identifiers of things that are related", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.related.identifier",  }, XPath = "f:DocumentManifest/f:related/f:identifier" },
                new SearchParamDefinition() { Resource = "DocumentManifest", Name = "related-ref", Description = "Related Resource", Type = SearchParamType.Reference, Path = new string[] { "DocumentManifest.related.ref",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:DocumentManifest/f:related/f:ref" },
                new SearchParamDefinition() { Resource = "DocumentManifest", Name = "source", Description = "The source system/application/software", Type = SearchParamType.Uri, Path = new string[] { "DocumentManifest.source",  }, XPath = "f:DocumentManifest/f:source" },
                new SearchParamDefinition() { Resource = "DocumentManifest", Name = "status", Description = "current | superseded | entered-in-error", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.status",  }, XPath = "f:DocumentManifest/f:status" },
                new SearchParamDefinition() { Resource = "DocumentManifest", Name = "subject", Description = "The subject of the set of documents", Type = SearchParamType.Reference, Path = new string[] { "DocumentManifest.subject",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Patient, ResourceType.Practitioner }, XPath = "f:DocumentManifest/f:subject" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "type", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): The type of the referral\r\n* [DocumentManifest](documentmanifest.html): Kind of document set\r\n* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html): Specific type of encounter\r\n* [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)\r\n* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management\r\n* [Composition](composition.html): Kind of composition (LOINC if possible)\r\n", Type = SearchParamType.Token, Path = new string[] { "ReferralRequest.type", "DocumentManifest.type", "DocumentReference.type", "Encounter.type", "AllergyIntolerance.type", "EpisodeOfCare.type", "Composition.type",  }, XPath = "f:ReferralRequest/f:type | f:DocumentManifest/f:type | f:DocumentReference/f:type | f:Encounter/f:type | f:AllergyIntolerance/f:type | f:EpisodeOfCare/f:type | f:Composition/f:type" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "encounter", Description = "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition\r\n", Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.context.encounter", "RiskAssessment.context", "DeviceRequest.context", "Procedure.context", "List.encounter", "VisionPrescription.encounter", "ProcedureRequest.context", "Flag.encounter", "Observation.context", "DiagnosticReport.context", "NutritionOrder.encounter", "Composition.encounter",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:DocumentReference/f:context/f:encounter | f:RiskAssessment/f:context | f:DeviceRequest/f:context | f:Procedure/f:context | f:List/f:encounter | f:VisionPrescription/f:encounter | f:ProcedureRequest/f:context | f:Flag/f:encounter | f:Observation/f:context | f:DiagnosticReport/f:context | f:NutritionOrder/f:encounter | f:Composition/f:encounter" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "authenticator", Description = "Who/what authenticated the document", Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.authenticator",  }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Practitioner }, XPath = "f:DocumentReference/f:authenticator" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "author", Description = "Who and/or what authored the document", Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.author",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:DocumentReference/f:author" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "class", Description = "Categorization of document", Type = SearchParamType.Token, Path = new string[] { "DocumentReference.class",  }, XPath = "f:DocumentReference/f:class" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "created", Description = "Document creation time", Type = SearchParamType.Date, Path = new string[] { "DocumentReference.created",  }, XPath = "f:DocumentReference/f:created" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "custodian", Description = "Organization which maintains the document", Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.custodian",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:DocumentReference/f:custodian" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "description", Description = "Human-readable description (title)", Type = SearchParamType.String, Path = new string[] { "DocumentReference.description",  }, XPath = "f:DocumentReference/f:description" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "event", Description = "Main clinical acts documented", Type = SearchParamType.Token, Path = new string[] { "DocumentReference.context.event",  }, XPath = "f:DocumentReference/f:context/f:event" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "facility", Description = "Kind of facility where patient was seen", Type = SearchParamType.Token, Path = new string[] { "DocumentReference.context.facilityType",  }, XPath = "f:DocumentReference/f:context/f:facilityType" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "format", Description = "Format/content rules for the document", Type = SearchParamType.Token, Path = new string[] { "DocumentReference.content.format",  }, XPath = "f:DocumentReference/f:content/f:format" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "indexed", Description = "When this document reference was created", Type = SearchParamType.Date, Path = new string[] { "DocumentReference.indexed",  }, XPath = "f:DocumentReference/f:indexed" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "language", Description = "Human language of the content (BCP-47)", Type = SearchParamType.Token, Path = new string[] { "DocumentReference.content.attachment.language",  }, XPath = "f:DocumentReference/f:content/f:attachment/f:language" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "location", Description = "Uri where the data can be found", Type = SearchParamType.Uri, Path = new string[] { "DocumentReference.content.attachment.url",  }, XPath = "f:DocumentReference/f:content/f:attachment/f:url" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "period", Description = "Time of service that is being documented", Type = SearchParamType.Date, Path = new string[] { "DocumentReference.context.period",  }, XPath = "f:DocumentReference/f:context/f:period" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "related-id", Description = "Identifier of related objects or events", Type = SearchParamType.Token, Path = new string[] { "DocumentReference.context.related.identifier",  }, XPath = "f:DocumentReference/f:context/f:related/f:identifier" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "related-ref", Description = "Related Resource", Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.context.related.ref",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:DocumentReference/f:context/f:related/f:ref" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "relatesto", Description = "Target of the relationship", Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.relatesTo.target",  }, Target = new ResourceType[] { ResourceType.DocumentReference }, XPath = "f:DocumentReference/f:relatesTo/f:target" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "relation", Description = "replaces | transforms | signs | appends", Type = SearchParamType.Token, Path = new string[] { "DocumentReference.relatesTo.code",  }, XPath = "f:DocumentReference/f:relatesTo/f:code" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "relationship", Description = "Combination of relation and relatesTo", Type = SearchParamType.Composite, Path = new string[] {  } },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "securitylabel", Description = "Document security-tags", Type = SearchParamType.Token, Path = new string[] { "DocumentReference.securityLabel",  }, XPath = "f:DocumentReference/f:securityLabel" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "setting", Description = "Additional details about where the content was created (e.g. clinical specialty)", Type = SearchParamType.Token, Path = new string[] { "DocumentReference.context.practiceSetting",  }, XPath = "f:DocumentReference/f:context/f:practiceSetting" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "status", Description = "current | superseded | entered-in-error", Type = SearchParamType.Token, Path = new string[] { "DocumentReference.status",  }, XPath = "f:DocumentReference/f:status" },
                new SearchParamDefinition() { Resource = "DocumentReference", Name = "subject", Description = "Who/what is the subject of the document", Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.subject",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Patient, ResourceType.Practitioner }, XPath = "f:DocumentReference/f:subject" },
                new SearchParamDefinition() { Resource = "EligibilityRequest", Name = "created", Description = "The creation date for the EOB", Type = SearchParamType.Date, Path = new string[] { "EligibilityRequest.created",  }, XPath = "f:EligibilityRequest/f:created" },
                new SearchParamDefinition() { Resource = "EligibilityRequest", Name = "enterer", Description = "The party who is responsible for the request", Type = SearchParamType.Reference, Path = new string[] { "EligibilityRequest.enterer",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:EligibilityRequest/f:enterer" },
                new SearchParamDefinition() { Resource = "EligibilityRequest", Name = "facility", Description = "Facility responsible for the goods and services", Type = SearchParamType.Reference, Path = new string[] { "EligibilityRequest.facility",  }, Target = new ResourceType[] { ResourceType.Location }, XPath = "f:EligibilityRequest/f:facility" },
                new SearchParamDefinition() { Resource = "EligibilityRequest", Name = "identifier", Description = "The business identifier of the Eligibility", Type = SearchParamType.Token, Path = new string[] { "EligibilityRequest.identifier",  }, XPath = "f:EligibilityRequest/f:identifier" },
                new SearchParamDefinition() { Resource = "EligibilityRequest", Name = "organization", Description = "The reference to the providing organization", Type = SearchParamType.Reference, Path = new string[] { "EligibilityRequest.organization",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:EligibilityRequest/f:organization" },
                new SearchParamDefinition() { Resource = "EligibilityRequest", Name = "patient", Description = "The reference to the patient", Type = SearchParamType.Reference, Path = new string[] { "EligibilityRequest.patient",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:EligibilityRequest/f:patient" },
                new SearchParamDefinition() { Resource = "EligibilityRequest", Name = "provider", Description = "The reference to the provider", Type = SearchParamType.Reference, Path = new string[] { "EligibilityRequest.provider",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:EligibilityRequest/f:provider" },
                new SearchParamDefinition() { Resource = "EligibilityResponse", Name = "created", Description = "The creation date", Type = SearchParamType.Date, Path = new string[] { "EligibilityResponse.created",  }, XPath = "f:EligibilityResponse/f:created" },
                new SearchParamDefinition() { Resource = "EligibilityResponse", Name = "disposition", Description = "The contents of the disposition message", Type = SearchParamType.String, Path = new string[] { "EligibilityResponse.disposition",  }, XPath = "f:EligibilityResponse/f:disposition" },
                new SearchParamDefinition() { Resource = "EligibilityResponse", Name = "identifier", Description = "The business identifier", Type = SearchParamType.Token, Path = new string[] { "EligibilityResponse.identifier",  }, XPath = "f:EligibilityResponse/f:identifier" },
                new SearchParamDefinition() { Resource = "EligibilityResponse", Name = "insurer", Description = "The organization which generated this resource", Type = SearchParamType.Reference, Path = new string[] { "EligibilityResponse.insurer",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:EligibilityResponse/f:insurer" },
                new SearchParamDefinition() { Resource = "EligibilityResponse", Name = "outcome", Description = "The processing outcome", Type = SearchParamType.Token, Path = new string[] { "EligibilityResponse.outcome",  }, XPath = "f:EligibilityResponse/f:outcome" },
                new SearchParamDefinition() { Resource = "EligibilityResponse", Name = "request", Description = "The EligibilityRequest reference", Type = SearchParamType.Reference, Path = new string[] { "EligibilityResponse.request",  }, Target = new ResourceType[] { ResourceType.EligibilityRequest }, XPath = "f:EligibilityResponse/f:request" },
                new SearchParamDefinition() { Resource = "EligibilityResponse", Name = "request-organization", Description = "The EligibilityRequest organization", Type = SearchParamType.Reference, Path = new string[] { "EligibilityResponse.requestOrganization",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:EligibilityResponse/f:requestOrganization" },
                new SearchParamDefinition() { Resource = "EligibilityResponse", Name = "request-provider", Description = "The EligibilityRequest provider", Type = SearchParamType.Reference, Path = new string[] { "EligibilityResponse.requestProvider",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:EligibilityResponse/f:requestProvider" },
                new SearchParamDefinition() { Resource = "Encounter", Name = "date", Description = "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n", Type = SearchParamType.Date, Path = new string[] { "Consent.dateTime", "SupplyRequest.authoredOn", "RiskAssessment.occurrenceDateTime", "CareTeam.period", "FamilyMemberHistory.date", "Encounter.period", "AllergyIntolerance.assertedDate", "CarePlan.period", "EpisodeOfCare.period", "Procedure.performedDateTime", "Procedure.performedPeriod", "List.date", "Immunization.date", "Flag.period", "Observation.effectiveDateTime", "Observation.effectivePeriod", "DiagnosticReport.effectiveDateTime", "DiagnosticReport.effectivePeriod", "Composition.date", "DetectedIssue.date", "ClinicalImpression.date",  }, XPath = "f:Consent/f:dateTime | f:SupplyRequest/f:authoredOn | f:RiskAssessment/f:occurrenceDateTime | f:CareTeam/f:period | f:FamilyMemberHistory/f:date | f:Encounter/f:period | f:AllergyIntolerance/f:assertedDate | f:CarePlan/f:period | f:EpisodeOfCare/f:period | f:Procedure/f:performedDateTime | f:Procedure/f:performedPeriod | f:List/f:date | f:Immunization/f:date | f:Flag/f:period | f:Observation/f:effectiveDateTime | f:Observation/f:effectivePeriod | f:DiagnosticReport/f:effectiveDateTime | f:DiagnosticReport/f:effectivePeriod | f:Composition/f:date | f:DetectedIssue/f:date | f:ClinicalImpression/f:date" },
                new SearchParamDefinition() { Resource = "Encounter", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "Encounter", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "Encounter", Name = "type", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): The type of the referral\r\n* [DocumentManifest](documentmanifest.html): Kind of document set\r\n* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html): Specific type of encounter\r\n* [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)\r\n* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management\r\n* [Composition](composition.html): Kind of composition (LOINC if possible)\r\n", Type = SearchParamType.Token, Path = new string[] { "ReferralRequest.type", "DocumentManifest.type", "DocumentReference.type", "Encounter.type", "AllergyIntolerance.type", "EpisodeOfCare.type", "Composition.type",  }, XPath = "f:ReferralRequest/f:type | f:DocumentManifest/f:type | f:DocumentReference/f:type | f:Encounter/f:type | f:AllergyIntolerance/f:type | f:EpisodeOfCare/f:type | f:Composition/f:type" },
                new SearchParamDefinition() { Resource = "Encounter", Name = "appointment", Description = "The appointment that scheduled this encounter", Type = SearchParamType.Reference, Path = new string[] { "Encounter.appointment",  }, Target = new ResourceType[] { ResourceType.Appointment }, XPath = "f:Encounter/f:appointment" },
                new SearchParamDefinition() { Resource = "Encounter", Name = "class", Description = "inpatient | outpatient | ambulatory | emergency +", Type = SearchParamType.Token, Path = new string[] { "Encounter.class",  }, XPath = "f:Encounter/f:class" },
                new SearchParamDefinition() { Resource = "Encounter", Name = "diagnosis", Description = "Reason the encounter takes place (resource)", Type = SearchParamType.Reference, Path = new string[] { "Encounter.diagnosis.condition",  }, Target = new ResourceType[] { ResourceType.Condition, ResourceType.Procedure }, XPath = "f:Encounter/f:diagnosis/f:condition" },
                new SearchParamDefinition() { Resource = "Encounter", Name = "episodeofcare", Description = "Episode(s) of care that this encounter should be recorded against", Type = SearchParamType.Reference, Path = new string[] { "Encounter.episodeOfCare",  }, Target = new ResourceType[] { ResourceType.EpisodeOfCare }, XPath = "f:Encounter/f:episodeOfCare" },
                new SearchParamDefinition() { Resource = "Encounter", Name = "incomingreferral", Description = "The ReferralRequest that initiated this encounter", Type = SearchParamType.Reference, Path = new string[] { "Encounter.incomingReferral",  }, Target = new ResourceType[] { ResourceType.ReferralRequest }, XPath = "f:Encounter/f:incomingReferral" },
                new SearchParamDefinition() { Resource = "Encounter", Name = "length", Description = "Length of encounter in days", Type = SearchParamType.Number, Path = new string[] { "Encounter.length",  }, XPath = "f:Encounter/f:length" },
                new SearchParamDefinition() { Resource = "Encounter", Name = "location", Description = "Location the encounter takes place", Type = SearchParamType.Reference, Path = new string[] { "Encounter.location.location",  }, Target = new ResourceType[] { ResourceType.Location }, XPath = "f:Encounter/f:location/f:location" },
                new SearchParamDefinition() { Resource = "Encounter", Name = "location-period", Description = "Time period during which the patient was present at the location", Type = SearchParamType.Date, Path = new string[] { "Encounter.location.period",  }, XPath = "f:Encounter/f:location/f:period" },
                new SearchParamDefinition() { Resource = "Encounter", Name = "part-of", Description = "Another Encounter this encounter is part of", Type = SearchParamType.Reference, Path = new string[] { "Encounter.partOf",  }, Target = new ResourceType[] { ResourceType.Encounter }, XPath = "f:Encounter/f:partOf" },
                new SearchParamDefinition() { Resource = "Encounter", Name = "participant", Description = "Persons involved in the encounter other than the patient", Type = SearchParamType.Reference, Path = new string[] { "Encounter.participant.individual",  }, Target = new ResourceType[] { ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:Encounter/f:participant/f:individual" },
                new SearchParamDefinition() { Resource = "Encounter", Name = "participant-type", Description = "Role of participant in encounter", Type = SearchParamType.Token, Path = new string[] { "Encounter.participant.type",  }, XPath = "f:Encounter/f:participant/f:type" },
                new SearchParamDefinition() { Resource = "Encounter", Name = "practitioner", Description = "Persons involved in the encounter other than the patient", Type = SearchParamType.Reference, Path = new string[] { "Encounter.participant.individual",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:Encounter/f:participant/f:individual" },
                new SearchParamDefinition() { Resource = "Encounter", Name = "reason", Description = "Reason the encounter takes place (code)", Type = SearchParamType.Token, Path = new string[] { "Encounter.reason",  }, XPath = "f:Encounter/f:reason" },
                new SearchParamDefinition() { Resource = "Encounter", Name = "service-provider", Description = "The custodian organization of this Encounter record", Type = SearchParamType.Reference, Path = new string[] { "Encounter.serviceProvider",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:Encounter/f:serviceProvider" },
                new SearchParamDefinition() { Resource = "Encounter", Name = "special-arrangement", Description = "Wheelchair, translator, stretcher, etc.", Type = SearchParamType.Token, Path = new string[] { "Encounter.hospitalization.specialArrangement",  }, XPath = "f:Encounter/f:hospitalization/f:specialArrangement" },
                new SearchParamDefinition() { Resource = "Encounter", Name = "status", Description = "planned | arrived | triaged | in-progress | onleave | finished | cancelled +", Type = SearchParamType.Token, Path = new string[] { "Encounter.status",  }, XPath = "f:Encounter/f:status" },
                new SearchParamDefinition() { Resource = "Encounter", Name = "subject", Description = "The patient ro group present at the encounter", Type = SearchParamType.Reference, Path = new string[] { "Encounter.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:Encounter/f:subject" },
                new SearchParamDefinition() { Resource = "Endpoint", Name = "connection-type", Description = "Protocol/Profile/Standard to be used with this endpoint connection", Type = SearchParamType.Token, Path = new string[] { "Endpoint.connectionType",  }, XPath = "f:Endpoint/f:connectionType" },
                new SearchParamDefinition() { Resource = "Endpoint", Name = "identifier", Description = "Identifies this endpoint across multiple systems", Type = SearchParamType.Token, Path = new string[] { "Endpoint.identifier",  }, XPath = "f:Endpoint/f:identifier" },
                new SearchParamDefinition() { Resource = "Endpoint", Name = "name", Description = "A name that this endpoint can be identified by", Type = SearchParamType.String, Path = new string[] { "Endpoint.name",  }, XPath = "f:Endpoint/f:name" },
                new SearchParamDefinition() { Resource = "Endpoint", Name = "organization", Description = "The organization that is managing the endpoint", Type = SearchParamType.Reference, Path = new string[] { "Endpoint.managingOrganization",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:Endpoint/f:managingOrganization" },
                new SearchParamDefinition() { Resource = "Endpoint", Name = "payload-type", Description = "The type of content that may be used at this endpoint (e.g. XDS Discharge summaries)", Type = SearchParamType.Token, Path = new string[] { "Endpoint.payloadType",  }, XPath = "f:Endpoint/f:payloadType" },
                new SearchParamDefinition() { Resource = "Endpoint", Name = "status", Description = "The current status of the Endpoint (usually expected to be active)", Type = SearchParamType.Token, Path = new string[] { "Endpoint.status",  }, XPath = "f:Endpoint/f:status" },
                new SearchParamDefinition() { Resource = "EnrollmentRequest", Name = "identifier", Description = "The business identifier of the Enrollment", Type = SearchParamType.Token, Path = new string[] { "EnrollmentRequest.identifier",  }, XPath = "f:EnrollmentRequest/f:identifier" },
                new SearchParamDefinition() { Resource = "EnrollmentRequest", Name = "organization", Description = "The organization who generated this resource", Type = SearchParamType.Reference, Path = new string[] { "EnrollmentRequest.organization",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:EnrollmentRequest/f:organization" },
                new SearchParamDefinition() { Resource = "EnrollmentRequest", Name = "patient", Description = "The party to be enrolled", Type = SearchParamType.Reference, Path = new string[] { "EnrollmentRequest.subject",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:EnrollmentRequest/f:subject" },
                new SearchParamDefinition() { Resource = "EnrollmentRequest", Name = "subject", Description = "The party to be enrolled", Type = SearchParamType.Reference, Path = new string[] { "EnrollmentRequest.subject",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:EnrollmentRequest/f:subject" },
                new SearchParamDefinition() { Resource = "EnrollmentResponse", Name = "identifier", Description = "The business identifier of the EnrollmentResponse", Type = SearchParamType.Token, Path = new string[] { "EnrollmentResponse.identifier",  }, XPath = "f:EnrollmentResponse/f:identifier" },
                new SearchParamDefinition() { Resource = "EnrollmentResponse", Name = "organization", Description = "The organization who generated this resource", Type = SearchParamType.Reference, Path = new string[] { "EnrollmentResponse.organization",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:EnrollmentResponse/f:organization" },
                new SearchParamDefinition() { Resource = "EnrollmentResponse", Name = "request", Description = "The reference to the claim", Type = SearchParamType.Reference, Path = new string[] { "EnrollmentResponse.request",  }, Target = new ResourceType[] { ResourceType.EnrollmentRequest }, XPath = "f:EnrollmentResponse/f:request" },
                new SearchParamDefinition() { Resource = "EpisodeOfCare", Name = "date", Description = "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n", Type = SearchParamType.Date, Path = new string[] { "Consent.dateTime", "SupplyRequest.authoredOn", "RiskAssessment.occurrenceDateTime", "CareTeam.period", "FamilyMemberHistory.date", "Encounter.period", "AllergyIntolerance.assertedDate", "CarePlan.period", "EpisodeOfCare.period", "Procedure.performedDateTime", "Procedure.performedPeriod", "List.date", "Immunization.date", "Flag.period", "Observation.effectiveDateTime", "Observation.effectivePeriod", "DiagnosticReport.effectiveDateTime", "DiagnosticReport.effectivePeriod", "Composition.date", "DetectedIssue.date", "ClinicalImpression.date",  }, XPath = "f:Consent/f:dateTime | f:SupplyRequest/f:authoredOn | f:RiskAssessment/f:occurrenceDateTime | f:CareTeam/f:period | f:FamilyMemberHistory/f:date | f:Encounter/f:period | f:AllergyIntolerance/f:assertedDate | f:CarePlan/f:period | f:EpisodeOfCare/f:period | f:Procedure/f:performedDateTime | f:Procedure/f:performedPeriod | f:List/f:date | f:Immunization/f:date | f:Flag/f:period | f:Observation/f:effectiveDateTime | f:Observation/f:effectivePeriod | f:DiagnosticReport/f:effectiveDateTime | f:DiagnosticReport/f:effectivePeriod | f:Composition/f:date | f:DetectedIssue/f:date | f:ClinicalImpression/f:date" },
                new SearchParamDefinition() { Resource = "EpisodeOfCare", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "EpisodeOfCare", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "EpisodeOfCare", Name = "type", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): The type of the referral\r\n* [DocumentManifest](documentmanifest.html): Kind of document set\r\n* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html): Specific type of encounter\r\n* [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)\r\n* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management\r\n* [Composition](composition.html): Kind of composition (LOINC if possible)\r\n", Type = SearchParamType.Token, Path = new string[] { "ReferralRequest.type", "DocumentManifest.type", "DocumentReference.type", "Encounter.type", "AllergyIntolerance.type", "EpisodeOfCare.type", "Composition.type",  }, XPath = "f:ReferralRequest/f:type | f:DocumentManifest/f:type | f:DocumentReference/f:type | f:Encounter/f:type | f:AllergyIntolerance/f:type | f:EpisodeOfCare/f:type | f:Composition/f:type" },
                new SearchParamDefinition() { Resource = "EpisodeOfCare", Name = "care-manager", Description = "Care manager/care co-ordinator for the patient", Type = SearchParamType.Reference, Path = new string[] { "EpisodeOfCare.careManager",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:EpisodeOfCare/f:careManager" },
                new SearchParamDefinition() { Resource = "EpisodeOfCare", Name = "condition", Description = "Conditions/problems/diagnoses this episode of care is for", Type = SearchParamType.Reference, Path = new string[] { "EpisodeOfCare.diagnosis.condition",  }, Target = new ResourceType[] { ResourceType.Condition }, XPath = "f:EpisodeOfCare/f:diagnosis/f:condition" },
                new SearchParamDefinition() { Resource = "EpisodeOfCare", Name = "incomingreferral", Description = "Incoming Referral Request", Type = SearchParamType.Reference, Path = new string[] { "EpisodeOfCare.referralRequest",  }, Target = new ResourceType[] { ResourceType.ReferralRequest }, XPath = "f:EpisodeOfCare/f:referralRequest" },
                new SearchParamDefinition() { Resource = "EpisodeOfCare", Name = "organization", Description = "The organization that has assumed the specific responsibilities of this EpisodeOfCare", Type = SearchParamType.Reference, Path = new string[] { "EpisodeOfCare.managingOrganization",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:EpisodeOfCare/f:managingOrganization" },
                new SearchParamDefinition() { Resource = "EpisodeOfCare", Name = "status", Description = "The current status of the Episode of Care as provided (does not check the status history collection)", Type = SearchParamType.Token, Path = new string[] { "EpisodeOfCare.status",  }, XPath = "f:EpisodeOfCare/f:status" },
                new SearchParamDefinition() { Resource = "ExpansionProfile", Name = "date", Description = "The expansion profile publication date", Type = SearchParamType.Date, Path = new string[] { "ExpansionProfile.date",  }, XPath = "f:ExpansionProfile/f:date" },
                new SearchParamDefinition() { Resource = "ExpansionProfile", Name = "description", Description = "The description of the expansion profile", Type = SearchParamType.String, Path = new string[] { "ExpansionProfile.description",  }, XPath = "f:ExpansionProfile/f:description" },
                new SearchParamDefinition() { Resource = "ExpansionProfile", Name = "identifier", Description = "External identifier for the expansion profile", Type = SearchParamType.Token, Path = new string[] { "ExpansionProfile.identifier",  }, XPath = "f:ExpansionProfile/f:identifier" },
                new SearchParamDefinition() { Resource = "ExpansionProfile", Name = "jurisdiction", Description = "Intended jurisdiction for the expansion profile", Type = SearchParamType.Token, Path = new string[] { "ExpansionProfile.jurisdiction",  }, XPath = "f:ExpansionProfile/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "ExpansionProfile", Name = "name", Description = "Computationally friendly name of the expansion profile", Type = SearchParamType.String, Path = new string[] { "ExpansionProfile.name",  }, XPath = "f:ExpansionProfile/f:name" },
                new SearchParamDefinition() { Resource = "ExpansionProfile", Name = "publisher", Description = "Name of the publisher of the expansion profile", Type = SearchParamType.String, Path = new string[] { "ExpansionProfile.publisher",  }, XPath = "f:ExpansionProfile/f:publisher" },
                new SearchParamDefinition() { Resource = "ExpansionProfile", Name = "status", Description = "The current status of the expansion profile", Type = SearchParamType.Token, Path = new string[] { "ExpansionProfile.status",  }, XPath = "f:ExpansionProfile/f:status" },
                new SearchParamDefinition() { Resource = "ExpansionProfile", Name = "url", Description = "The uri that identifies the expansion profile", Type = SearchParamType.Uri, Path = new string[] { "ExpansionProfile.url",  }, XPath = "f:ExpansionProfile/f:url" },
                new SearchParamDefinition() { Resource = "ExpansionProfile", Name = "version", Description = "The business version of the expansion profile", Type = SearchParamType.Token, Path = new string[] { "ExpansionProfile.version",  }, XPath = "f:ExpansionProfile/f:version" },
                new SearchParamDefinition() { Resource = "ExplanationOfBenefit", Name = "care-team", Description = "Member of the CareTeam", Type = SearchParamType.Reference, Path = new string[] { "ExplanationOfBenefit.careTeam.provider",  }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Practitioner }, XPath = "f:ExplanationOfBenefit/f:careTeam/f:provider" },
                new SearchParamDefinition() { Resource = "ExplanationOfBenefit", Name = "claim", Description = "The reference to the claim", Type = SearchParamType.Reference, Path = new string[] { "ExplanationOfBenefit.claim",  }, Target = new ResourceType[] { ResourceType.Claim }, XPath = "f:ExplanationOfBenefit/f:claim" },
                new SearchParamDefinition() { Resource = "ExplanationOfBenefit", Name = "coverage", Description = "The plan under which the claim was adjudicated", Type = SearchParamType.Reference, Path = new string[] { "ExplanationOfBenefit.insurance.coverage",  }, Target = new ResourceType[] { ResourceType.Coverage }, XPath = "f:ExplanationOfBenefit/f:insurance/f:coverage" },
                new SearchParamDefinition() { Resource = "ExplanationOfBenefit", Name = "created", Description = "The creation date for the EOB", Type = SearchParamType.Date, Path = new string[] { "ExplanationOfBenefit.created",  }, XPath = "f:ExplanationOfBenefit/f:created" },
                new SearchParamDefinition() { Resource = "ExplanationOfBenefit", Name = "disposition", Description = "The contents of the disposition message", Type = SearchParamType.String, Path = new string[] { "ExplanationOfBenefit.disposition",  }, XPath = "f:ExplanationOfBenefit/f:disposition" },
                new SearchParamDefinition() { Resource = "ExplanationOfBenefit", Name = "encounter", Description = "Encounters associated with a billed line item", Type = SearchParamType.Reference, Path = new string[] { "ExplanationOfBenefit.item.encounter",  }, Target = new ResourceType[] { ResourceType.Encounter }, XPath = "f:ExplanationOfBenefit/f:item/f:encounter" },
                new SearchParamDefinition() { Resource = "ExplanationOfBenefit", Name = "enterer", Description = "The party responsible for the entry of the Claim", Type = SearchParamType.Reference, Path = new string[] { "ExplanationOfBenefit.enterer",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:ExplanationOfBenefit/f:enterer" },
                new SearchParamDefinition() { Resource = "ExplanationOfBenefit", Name = "facility", Description = "Facility responsible for the goods and services", Type = SearchParamType.Reference, Path = new string[] { "ExplanationOfBenefit.facility",  }, Target = new ResourceType[] { ResourceType.Location }, XPath = "f:ExplanationOfBenefit/f:facility" },
                new SearchParamDefinition() { Resource = "ExplanationOfBenefit", Name = "identifier", Description = "The business identifier of the Explanation of Benefit", Type = SearchParamType.Token, Path = new string[] { "ExplanationOfBenefit.identifier",  }, XPath = "f:ExplanationOfBenefit/f:identifier" },
                new SearchParamDefinition() { Resource = "ExplanationOfBenefit", Name = "organization", Description = "The reference to the providing organization", Type = SearchParamType.Reference, Path = new string[] { "ExplanationOfBenefit.organization",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:ExplanationOfBenefit/f:organization" },
                new SearchParamDefinition() { Resource = "ExplanationOfBenefit", Name = "patient", Description = "The reference to the patient", Type = SearchParamType.Reference, Path = new string[] { "ExplanationOfBenefit.patient",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:ExplanationOfBenefit/f:patient" },
                new SearchParamDefinition() { Resource = "ExplanationOfBenefit", Name = "payee", Description = "The party receiving any payment for the Claim", Type = SearchParamType.Reference, Path = new string[] { "ExplanationOfBenefit.payee.party",  }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:ExplanationOfBenefit/f:payee/f:party" },
                new SearchParamDefinition() { Resource = "ExplanationOfBenefit", Name = "provider", Description = "The reference to the provider", Type = SearchParamType.Reference, Path = new string[] { "ExplanationOfBenefit.provider",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:ExplanationOfBenefit/f:provider" },
                new SearchParamDefinition() { Resource = "FamilyMemberHistory", Name = "code", Description = "Multiple Resources: \r\n\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [List](list.html): What the purpose of this list is\r\n* [ProcedureRequest](procedurerequest.html): What is being requested/ordered\r\n* [Observation](observation.html): The code of the observation type\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report as a whole, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [Condition](condition.html): Code for the condition\r\n", Type = SearchParamType.Token, Path = new string[] { "FamilyMemberHistory.condition.code", "DeviceRequest.codeCodeableConcept", "AllergyIntolerance.code", "AllergyIntolerance.reaction.substance", "Procedure.code", "List.code", "ProcedureRequest.code", "Observation.code", "DiagnosticReport.code", "Condition.code",  }, XPath = "f:FamilyMemberHistory/f:condition/f:code | f:DeviceRequest/f:codeCodeableConcept | f:AllergyIntolerance/f:code | f:AllergyIntolerance/f:reaction/f:substance | f:Procedure/f:code | f:List/f:code | f:ProcedureRequest/f:code | f:Observation/f:code | f:DiagnosticReport/f:code | f:Condition/f:code" },
                new SearchParamDefinition() { Resource = "FamilyMemberHistory", Name = "date", Description = "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n", Type = SearchParamType.Date, Path = new string[] { "Consent.dateTime", "SupplyRequest.authoredOn", "RiskAssessment.occurrenceDateTime", "CareTeam.period", "FamilyMemberHistory.date", "Encounter.period", "AllergyIntolerance.assertedDate", "CarePlan.period", "EpisodeOfCare.period", "Procedure.performedDateTime", "Procedure.performedPeriod", "List.date", "Immunization.date", "Flag.period", "Observation.effectiveDateTime", "Observation.effectivePeriod", "DiagnosticReport.effectiveDateTime", "DiagnosticReport.effectivePeriod", "Composition.date", "DetectedIssue.date", "ClinicalImpression.date",  }, XPath = "f:Consent/f:dateTime | f:SupplyRequest/f:authoredOn | f:RiskAssessment/f:occurrenceDateTime | f:CareTeam/f:period | f:FamilyMemberHistory/f:date | f:Encounter/f:period | f:AllergyIntolerance/f:assertedDate | f:CarePlan/f:period | f:EpisodeOfCare/f:period | f:Procedure/f:performedDateTime | f:Procedure/f:performedPeriod | f:List/f:date | f:Immunization/f:date | f:Flag/f:period | f:Observation/f:effectiveDateTime | f:Observation/f:effectivePeriod | f:DiagnosticReport/f:effectiveDateTime | f:DiagnosticReport/f:effectivePeriod | f:Composition/f:date | f:DetectedIssue/f:date | f:ClinicalImpression/f:date" },
                new SearchParamDefinition() { Resource = "FamilyMemberHistory", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "FamilyMemberHistory", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "FamilyMemberHistory", Name = "definition", Description = "Instantiates protocol or definition", Type = SearchParamType.Reference, Path = new string[] { "FamilyMemberHistory.definition",  }, Target = new ResourceType[] { ResourceType.PlanDefinition, ResourceType.Questionnaire }, XPath = "f:FamilyMemberHistory/f:definition" },
                new SearchParamDefinition() { Resource = "FamilyMemberHistory", Name = "gender", Description = "A search by a gender code of a family member", Type = SearchParamType.Token, Path = new string[] { "FamilyMemberHistory.gender",  }, XPath = "f:FamilyMemberHistory/f:gender" },
                new SearchParamDefinition() { Resource = "FamilyMemberHistory", Name = "relationship", Description = "A search by a relationship type", Type = SearchParamType.Token, Path = new string[] { "FamilyMemberHistory.relationship",  }, XPath = "f:FamilyMemberHistory/f:relationship" },
                new SearchParamDefinition() { Resource = "FamilyMemberHistory", Name = "status", Description = "partial | completed | entered-in-error | health-unknown", Type = SearchParamType.Token, Path = new string[] { "FamilyMemberHistory.status",  }, XPath = "f:FamilyMemberHistory/f:status" },
                new SearchParamDefinition() { Resource = "Flag", Name = "date", Description = "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n", Type = SearchParamType.Date, Path = new string[] { "Consent.dateTime", "SupplyRequest.authoredOn", "RiskAssessment.occurrenceDateTime", "CareTeam.period", "FamilyMemberHistory.date", "Encounter.period", "AllergyIntolerance.assertedDate", "CarePlan.period", "EpisodeOfCare.period", "Procedure.performedDateTime", "Procedure.performedPeriod", "List.date", "Immunization.date", "Flag.period", "Observation.effectiveDateTime", "Observation.effectivePeriod", "DiagnosticReport.effectiveDateTime", "DiagnosticReport.effectivePeriod", "Composition.date", "DetectedIssue.date", "ClinicalImpression.date",  }, XPath = "f:Consent/f:dateTime | f:SupplyRequest/f:authoredOn | f:RiskAssessment/f:occurrenceDateTime | f:CareTeam/f:period | f:FamilyMemberHistory/f:date | f:Encounter/f:period | f:AllergyIntolerance/f:assertedDate | f:CarePlan/f:period | f:EpisodeOfCare/f:period | f:Procedure/f:performedDateTime | f:Procedure/f:performedPeriod | f:List/f:date | f:Immunization/f:date | f:Flag/f:period | f:Observation/f:effectiveDateTime | f:Observation/f:effectivePeriod | f:DiagnosticReport/f:effectiveDateTime | f:DiagnosticReport/f:effectivePeriod | f:Composition/f:date | f:DetectedIssue/f:date | f:ClinicalImpression/f:date" },
                new SearchParamDefinition() { Resource = "Flag", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "Flag", Name = "encounter", Description = "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition\r\n", Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.context.encounter", "RiskAssessment.context", "DeviceRequest.context", "Procedure.context", "List.encounter", "VisionPrescription.encounter", "ProcedureRequest.context", "Flag.encounter", "Observation.context", "DiagnosticReport.context", "NutritionOrder.encounter", "Composition.encounter",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:DocumentReference/f:context/f:encounter | f:RiskAssessment/f:context | f:DeviceRequest/f:context | f:Procedure/f:context | f:List/f:encounter | f:VisionPrescription/f:encounter | f:ProcedureRequest/f:context | f:Flag/f:encounter | f:Observation/f:context | f:DiagnosticReport/f:context | f:NutritionOrder/f:encounter | f:Composition/f:encounter" },
                new SearchParamDefinition() { Resource = "Flag", Name = "author", Description = "Flag creator", Type = SearchParamType.Reference, Path = new string[] { "Flag.author",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner }, XPath = "f:Flag/f:author" },
                new SearchParamDefinition() { Resource = "Flag", Name = "identifier", Description = "Business identifier", Type = SearchParamType.Token, Path = new string[] { "Flag.identifier",  }, XPath = "f:Flag/f:identifier" },
                new SearchParamDefinition() { Resource = "Flag", Name = "subject", Description = "The identity of a subject to list flags for", Type = SearchParamType.Reference, Path = new string[] { "Flag.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Location, ResourceType.Medication, ResourceType.Organization, ResourceType.Patient, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.Procedure }, XPath = "f:Flag/f:subject" },
                new SearchParamDefinition() { Resource = "Goal", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "Goal", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "Goal", Name = "category", Description = "E.g. Treatment, dietary, behavioral, etc.", Type = SearchParamType.Token, Path = new string[] { "Goal.category",  }, XPath = "f:Goal/f:category" },
                new SearchParamDefinition() { Resource = "Goal", Name = "start-date", Description = "When goal pursuit begins", Type = SearchParamType.Date, Path = new string[] { "Goal.startDate",  }, XPath = "f:Goal/f:startDate" },
                new SearchParamDefinition() { Resource = "Goal", Name = "status", Description = "proposed | accepted | planned | in-progress | on-target | ahead-of-target | behind-target | sustaining | achieved | on-hold | cancelled | entered-in-error | rejected", Type = SearchParamType.Token, Path = new string[] { "Goal.status",  }, XPath = "f:Goal/f:status" },
                new SearchParamDefinition() { Resource = "Goal", Name = "subject", Description = "Who this goal is intended for", Type = SearchParamType.Reference, Path = new string[] { "Goal.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Organization, ResourceType.Patient }, XPath = "f:Goal/f:subject" },
                new SearchParamDefinition() { Resource = "Goal", Name = "target-date", Description = "Reach goal on or before", Type = SearchParamType.Date, Path = new string[] { "Goal.target.dueDate",  }, XPath = "f:Goal/f:target/f:dueDate" },
                new SearchParamDefinition() { Resource = "GraphDefinition", Name = "date", Description = "The graph definition publication date", Type = SearchParamType.Date, Path = new string[] { "GraphDefinition.date",  }, XPath = "f:GraphDefinition/f:date" },
                new SearchParamDefinition() { Resource = "GraphDefinition", Name = "description", Description = "The description of the graph definition", Type = SearchParamType.String, Path = new string[] { "GraphDefinition.description",  }, XPath = "f:GraphDefinition/f:description" },
                new SearchParamDefinition() { Resource = "GraphDefinition", Name = "jurisdiction", Description = "Intended jurisdiction for the graph definition", Type = SearchParamType.Token, Path = new string[] { "GraphDefinition.jurisdiction",  }, XPath = "f:GraphDefinition/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "GraphDefinition", Name = "name", Description = "Computationally friendly name of the graph definition", Type = SearchParamType.String, Path = new string[] { "GraphDefinition.name",  }, XPath = "f:GraphDefinition/f:name" },
                new SearchParamDefinition() { Resource = "GraphDefinition", Name = "publisher", Description = "Name of the publisher of the graph definition", Type = SearchParamType.String, Path = new string[] { "GraphDefinition.publisher",  }, XPath = "f:GraphDefinition/f:publisher" },
                new SearchParamDefinition() { Resource = "GraphDefinition", Name = "start", Description = "Type of resource at which the graph starts", Type = SearchParamType.Token, Path = new string[] { "GraphDefinition.start",  }, XPath = "f:GraphDefinition/f:start" },
                new SearchParamDefinition() { Resource = "GraphDefinition", Name = "status", Description = "The current status of the graph definition", Type = SearchParamType.Token, Path = new string[] { "GraphDefinition.status",  }, XPath = "f:GraphDefinition/f:status" },
                new SearchParamDefinition() { Resource = "GraphDefinition", Name = "url", Description = "The uri that identifies the graph definition", Type = SearchParamType.Uri, Path = new string[] { "GraphDefinition.url",  }, XPath = "f:GraphDefinition/f:url" },
                new SearchParamDefinition() { Resource = "GraphDefinition", Name = "version", Description = "The business version of the graph definition", Type = SearchParamType.Token, Path = new string[] { "GraphDefinition.version",  }, XPath = "f:GraphDefinition/f:version" },
                new SearchParamDefinition() { Resource = "Group", Name = "actual", Description = "Descriptive or actual", Type = SearchParamType.Token, Path = new string[] { "Group.actual",  }, XPath = "f:Group/f:actual" },
                new SearchParamDefinition() { Resource = "Group", Name = "characteristic", Description = "Kind of characteristic", Type = SearchParamType.Token, Path = new string[] { "Group.characteristic.code",  }, XPath = "f:Group/f:characteristic/f:code" },
                new SearchParamDefinition() { Resource = "Group", Name = "characteristic-value", Description = "A composite of both characteristic and value", Type = SearchParamType.Composite, Path = new string[] {  } },
                new SearchParamDefinition() { Resource = "Group", Name = "code", Description = "The kind of resources contained", Type = SearchParamType.Token, Path = new string[] { "Group.code",  }, XPath = "f:Group/f:code" },
                new SearchParamDefinition() { Resource = "Group", Name = "exclude", Description = "Group includes or excludes", Type = SearchParamType.Token, Path = new string[] { "Group.characteristic.exclude",  }, XPath = "f:Group/f:characteristic/f:exclude" },
                new SearchParamDefinition() { Resource = "Group", Name = "identifier", Description = "Unique id", Type = SearchParamType.Token, Path = new string[] { "Group.identifier",  }, XPath = "f:Group/f:identifier" },
                new SearchParamDefinition() { Resource = "Group", Name = "member", Description = "Reference to the group member", Type = SearchParamType.Reference, Path = new string[] { "Group.member.entity",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Medication, ResourceType.Patient, ResourceType.Practitioner, ResourceType.Substance }, XPath = "f:Group/f:member/f:entity" },
                new SearchParamDefinition() { Resource = "Group", Name = "type", Description = "The type of resources the group contains", Type = SearchParamType.Token, Path = new string[] { "Group.type",  }, XPath = "f:Group/f:type" },
                new SearchParamDefinition() { Resource = "Group", Name = "value", Description = "Value held by characteristic", Type = SearchParamType.Token, Path = new string[] { "Group.characteristic.valueCodeableConcept", "Group.characteristic.valueBoolean", "Group.characteristic.valueQuantity", "Group.characteristic.valueRange",  }, XPath = "f:Group/f:characteristic/f:valueCodeableConcept | f:Group/f:characteristic/f:valueBoolean | f:Group/f:characteristic/f:valueQuantity | f:Group/f:characteristic/f:valueRange" },
                new SearchParamDefinition() { Resource = "GuidanceResponse", Name = "identifier", Description = "The identifier of the guidance response", Type = SearchParamType.Token, Path = new string[] { "GuidanceResponse.identifier",  }, XPath = "f:GuidanceResponse/f:identifier" },
                new SearchParamDefinition() { Resource = "GuidanceResponse", Name = "patient", Description = "The identity of a patient to search for guidance response results", Type = SearchParamType.Reference, Path = new string[] { "GuidanceResponse.subject",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:GuidanceResponse/f:subject" },
                new SearchParamDefinition() { Resource = "GuidanceResponse", Name = "request", Description = "The identifier of the request associated with the response", Type = SearchParamType.Token, Path = new string[] { "GuidanceResponse.requestId",  }, XPath = "f:GuidanceResponse/f:requestId" },
                new SearchParamDefinition() { Resource = "GuidanceResponse", Name = "subject", Description = "The subject that the guidance response is about", Type = SearchParamType.Reference, Path = new string[] { "GuidanceResponse.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:GuidanceResponse/f:subject" },
                new SearchParamDefinition() { Resource = "HealthcareService", Name = "active", Description = "The Healthcare Service is currently marked as active", Type = SearchParamType.Token, Path = new string[] { "HealthcareService.active",  }, XPath = "f:HealthcareService/f:active" },
                new SearchParamDefinition() { Resource = "HealthcareService", Name = "category", Description = "Service Category of the Healthcare Service", Type = SearchParamType.Token, Path = new string[] { "HealthcareService.category",  }, XPath = "f:HealthcareService/f:category" },
                new SearchParamDefinition() { Resource = "HealthcareService", Name = "characteristic", Description = "One of the HealthcareService's characteristics", Type = SearchParamType.Token, Path = new string[] { "HealthcareService.characteristic",  }, XPath = "f:HealthcareService/f:characteristic" },
                new SearchParamDefinition() { Resource = "HealthcareService", Name = "endpoint", Description = "Technical endpoints providing access to services operated for the location", Type = SearchParamType.Reference, Path = new string[] { "HealthcareService.endpoint",  }, Target = new ResourceType[] { ResourceType.Endpoint }, XPath = "f:HealthcareService/f:endpoint" },
                new SearchParamDefinition() { Resource = "HealthcareService", Name = "identifier", Description = "External identifiers for this item", Type = SearchParamType.Token, Path = new string[] { "HealthcareService.identifier",  }, XPath = "f:HealthcareService/f:identifier" },
                new SearchParamDefinition() { Resource = "HealthcareService", Name = "location", Description = "The location of the Healthcare Service", Type = SearchParamType.Reference, Path = new string[] { "HealthcareService.location",  }, Target = new ResourceType[] { ResourceType.Location }, XPath = "f:HealthcareService/f:location" },
                new SearchParamDefinition() { Resource = "HealthcareService", Name = "name", Description = "A portion of the Healthcare service name", Type = SearchParamType.String, Path = new string[] { "HealthcareService.name",  }, XPath = "f:HealthcareService/f:name" },
                new SearchParamDefinition() { Resource = "HealthcareService", Name = "organization", Description = "The organization that provides this Healthcare Service", Type = SearchParamType.Reference, Path = new string[] { "HealthcareService.providedBy",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:HealthcareService/f:providedBy" },
                new SearchParamDefinition() { Resource = "HealthcareService", Name = "programname", Description = "One of the Program Names serviced by this HealthcareService", Type = SearchParamType.String, Path = new string[] { "HealthcareService.programName",  }, XPath = "f:HealthcareService/f:programName" },
                new SearchParamDefinition() { Resource = "HealthcareService", Name = "type", Description = "The type of service provided by this healthcare service", Type = SearchParamType.Token, Path = new string[] { "HealthcareService.type",  }, XPath = "f:HealthcareService/f:type" },
                new SearchParamDefinition() { Resource = "ImagingManifest", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "ImagingManifest", Name = "author", Description = "Author of the ImagingManifest (or a DICOM Key Object Selection which it represents)", Type = SearchParamType.Reference, Path = new string[] { "ImagingManifest.author",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:ImagingManifest/f:author" },
                new SearchParamDefinition() { Resource = "ImagingManifest", Name = "authoring-time", Description = "Time of the ImagingManifest (or a DICOM Key Object Selection which it represents) authoring", Type = SearchParamType.Date, Path = new string[] { "ImagingManifest.authoringTime",  }, XPath = "f:ImagingManifest/f:authoringTime" },
                new SearchParamDefinition() { Resource = "ImagingManifest", Name = "endpoint", Description = "The endpoint for the study or series", Type = SearchParamType.Reference, Path = new string[] { "ImagingManifest.study.endpoint", "ImagingManifest.study.series.endpoint",  }, Target = new ResourceType[] { ResourceType.Endpoint }, XPath = "f:ImagingManifest/f:study/f:endpoint | f:ImagingManifest/f:study/f:series/f:endpoint" },
                new SearchParamDefinition() { Resource = "ImagingManifest", Name = "identifier", Description = "UID of the ImagingManifest (or a DICOM Key Object Selection which it represents)", Type = SearchParamType.Token, Path = new string[] { "ImagingManifest.identifier",  }, XPath = "f:ImagingManifest/f:identifier" },
                new SearchParamDefinition() { Resource = "ImagingManifest", Name = "imaging-study", Description = "ImagingStudy resource selected in the ImagingManifest (or a DICOM Key Object Selection which it represents)", Type = SearchParamType.Reference, Path = new string[] { "ImagingManifest.study.imagingStudy",  }, Target = new ResourceType[] { ResourceType.ImagingStudy }, XPath = "f:ImagingManifest/f:study/f:imagingStudy" },
                new SearchParamDefinition() { Resource = "ImagingManifest", Name = "selected-study", Description = "Study selected in the ImagingManifest (or a DICOM Key Object Selection which it represents)", Type = SearchParamType.Uri, Path = new string[] { "ImagingManifest.study.uid",  }, XPath = "f:ImagingManifest/f:study/f:uid" },
                new SearchParamDefinition() { Resource = "ImagingStudy", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "ImagingStudy", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "ImagingStudy", Name = "accession", Description = "The accession identifier for the study", Type = SearchParamType.Token, Path = new string[] { "ImagingStudy.accession",  }, XPath = "f:ImagingStudy/f:accession" },
                new SearchParamDefinition() { Resource = "ImagingStudy", Name = "basedon", Description = "The order for the image", Type = SearchParamType.Reference, Path = new string[] { "ImagingStudy.basedOn",  }, Target = new ResourceType[] { ResourceType.CarePlan, ResourceType.ProcedureRequest, ResourceType.ReferralRequest }, XPath = "f:ImagingStudy/f:basedOn" },
                new SearchParamDefinition() { Resource = "ImagingStudy", Name = "bodysite", Description = "The body site studied", Type = SearchParamType.Token, Path = new string[] { "ImagingStudy.series.bodySite",  }, XPath = "f:ImagingStudy/f:series/f:bodySite" },
                new SearchParamDefinition() { Resource = "ImagingStudy", Name = "context", Description = "The context of the study", Type = SearchParamType.Reference, Path = new string[] { "ImagingStudy.context",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:ImagingStudy/f:context" },
                new SearchParamDefinition() { Resource = "ImagingStudy", Name = "dicom-class", Description = "The type of the instance", Type = SearchParamType.Uri, Path = new string[] { "ImagingStudy.series.instance.sopClass",  }, XPath = "f:ImagingStudy/f:series/f:instance/f:sopClass" },
                new SearchParamDefinition() { Resource = "ImagingStudy", Name = "endpoint", Description = "The endpoint for te study or series", Type = SearchParamType.Reference, Path = new string[] { "ImagingStudy.endpoint", "ImagingStudy.series.endpoint",  }, Target = new ResourceType[] { ResourceType.Endpoint }, XPath = "f:ImagingStudy/f:endpoint | f:ImagingStudy/f:series/f:endpoint" },
                new SearchParamDefinition() { Resource = "ImagingStudy", Name = "modality", Description = "The modality of the series", Type = SearchParamType.Token, Path = new string[] { "ImagingStudy.series.modality",  }, XPath = "f:ImagingStudy/f:series/f:modality" },
                new SearchParamDefinition() { Resource = "ImagingStudy", Name = "performer", Description = "The person who performed the study", Type = SearchParamType.Reference, Path = new string[] { "ImagingStudy.series.performer",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:ImagingStudy/f:series/f:performer" },
                new SearchParamDefinition() { Resource = "ImagingStudy", Name = "reason", Description = "The reason for the study", Type = SearchParamType.Token, Path = new string[] { "ImagingStudy.reason",  }, XPath = "f:ImagingStudy/f:reason" },
                new SearchParamDefinition() { Resource = "ImagingStudy", Name = "series", Description = "The identifier of the series of images", Type = SearchParamType.Uri, Path = new string[] { "ImagingStudy.series.uid",  }, XPath = "f:ImagingStudy/f:series/f:uid" },
                new SearchParamDefinition() { Resource = "ImagingStudy", Name = "started", Description = "When the study was started", Type = SearchParamType.Date, Path = new string[] { "ImagingStudy.started",  }, XPath = "f:ImagingStudy/f:started" },
                new SearchParamDefinition() { Resource = "ImagingStudy", Name = "study", Description = "The study identifier for the image", Type = SearchParamType.Uri, Path = new string[] { "ImagingStudy.uid",  }, XPath = "f:ImagingStudy/f:uid" },
                new SearchParamDefinition() { Resource = "ImagingStudy", Name = "uid", Description = "The instance unique identifier", Type = SearchParamType.Uri, Path = new string[] { "ImagingStudy.series.instance.uid",  }, XPath = "f:ImagingStudy/f:series/f:instance/f:uid" },
                new SearchParamDefinition() { Resource = "Immunization", Name = "date", Description = "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n", Type = SearchParamType.Date, Path = new string[] { "Consent.dateTime", "SupplyRequest.authoredOn", "RiskAssessment.occurrenceDateTime", "CareTeam.period", "FamilyMemberHistory.date", "Encounter.period", "AllergyIntolerance.assertedDate", "CarePlan.period", "EpisodeOfCare.period", "Procedure.performedDateTime", "Procedure.performedPeriod", "List.date", "Immunization.date", "Flag.period", "Observation.effectiveDateTime", "Observation.effectivePeriod", "DiagnosticReport.effectiveDateTime", "DiagnosticReport.effectivePeriod", "Composition.date", "DetectedIssue.date", "ClinicalImpression.date",  }, XPath = "f:Consent/f:dateTime | f:SupplyRequest/f:authoredOn | f:RiskAssessment/f:occurrenceDateTime | f:CareTeam/f:period | f:FamilyMemberHistory/f:date | f:Encounter/f:period | f:AllergyIntolerance/f:assertedDate | f:CarePlan/f:period | f:EpisodeOfCare/f:period | f:Procedure/f:performedDateTime | f:Procedure/f:performedPeriod | f:List/f:date | f:Immunization/f:date | f:Flag/f:period | f:Observation/f:effectiveDateTime | f:Observation/f:effectivePeriod | f:DiagnosticReport/f:effectiveDateTime | f:DiagnosticReport/f:effectivePeriod | f:Composition/f:date | f:DetectedIssue/f:date | f:ClinicalImpression/f:date" },
                new SearchParamDefinition() { Resource = "Immunization", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "Immunization", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "Immunization", Name = "dose-sequence", Description = "Dose number within series", Type = SearchParamType.Number, Path = new string[] { "Immunization.vaccinationProtocol.doseSequence",  }, XPath = "f:Immunization/f:vaccinationProtocol/f:doseSequence" },
                new SearchParamDefinition() { Resource = "Immunization", Name = "location", Description = "The service delivery location or facility in which the vaccine was / was to be administered", Type = SearchParamType.Reference, Path = new string[] { "Immunization.location",  }, Target = new ResourceType[] { ResourceType.Location }, XPath = "f:Immunization/f:location" },
                new SearchParamDefinition() { Resource = "Immunization", Name = "lot-number", Description = "Vaccine Lot Number", Type = SearchParamType.String, Path = new string[] { "Immunization.lotNumber",  }, XPath = "f:Immunization/f:lotNumber" },
                new SearchParamDefinition() { Resource = "Immunization", Name = "manufacturer", Description = "Vaccine Manufacturer", Type = SearchParamType.Reference, Path = new string[] { "Immunization.manufacturer",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:Immunization/f:manufacturer" },
                new SearchParamDefinition() { Resource = "Immunization", Name = "notgiven", Description = "Administrations which were not given", Type = SearchParamType.Token, Path = new string[] { "Immunization.notGiven",  }, XPath = "f:Immunization/f:notGiven" },
                new SearchParamDefinition() { Resource = "Immunization", Name = "practitioner", Description = "The practitioner who played a role in the vaccination", Type = SearchParamType.Reference, Path = new string[] { "Immunization.practitioner.actor",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:Immunization/f:practitioner/f:actor" },
                new SearchParamDefinition() { Resource = "Immunization", Name = "reaction", Description = "Additional information on reaction", Type = SearchParamType.Reference, Path = new string[] { "Immunization.reaction.detail",  }, Target = new ResourceType[] { ResourceType.Observation }, XPath = "f:Immunization/f:reaction/f:detail" },
                new SearchParamDefinition() { Resource = "Immunization", Name = "reaction-date", Description = "When reaction started", Type = SearchParamType.Date, Path = new string[] { "Immunization.reaction.date",  }, XPath = "f:Immunization/f:reaction/f:date" },
                new SearchParamDefinition() { Resource = "Immunization", Name = "reason", Description = "Why immunization occurred", Type = SearchParamType.Token, Path = new string[] { "Immunization.explanation.reason",  }, XPath = "f:Immunization/f:explanation/f:reason" },
                new SearchParamDefinition() { Resource = "Immunization", Name = "reason-not-given", Description = "Explanation of reason vaccination was not administered", Type = SearchParamType.Token, Path = new string[] { "Immunization.explanation.reasonNotGiven",  }, XPath = "f:Immunization/f:explanation/f:reasonNotGiven" },
                new SearchParamDefinition() { Resource = "Immunization", Name = "status", Description = "Immunization event status", Type = SearchParamType.Token, Path = new string[] { "Immunization.status",  }, XPath = "f:Immunization/f:status" },
                new SearchParamDefinition() { Resource = "Immunization", Name = "vaccine-code", Description = "Vaccine Product Administered", Type = SearchParamType.Token, Path = new string[] { "Immunization.vaccineCode",  }, XPath = "f:Immunization/f:vaccineCode" },
                new SearchParamDefinition() { Resource = "ImmunizationRecommendation", Name = "date", Description = "Date recommendation created", Type = SearchParamType.Date, Path = new string[] { "ImmunizationRecommendation.recommendation.date",  }, XPath = "f:ImmunizationRecommendation/f:recommendation/f:date" },
                new SearchParamDefinition() { Resource = "ImmunizationRecommendation", Name = "dose-number", Description = "Recommended dose number", Type = SearchParamType.Number, Path = new string[] { "ImmunizationRecommendation.recommendation.doseNumber",  }, XPath = "f:ImmunizationRecommendation/f:recommendation/f:doseNumber" },
                new SearchParamDefinition() { Resource = "ImmunizationRecommendation", Name = "dose-sequence", Description = "Dose number within sequence", Type = SearchParamType.Number, Path = new string[] { "ImmunizationRecommendation.recommendation.protocol.doseSequence",  }, XPath = "f:ImmunizationRecommendation/f:recommendation/f:protocol/f:doseSequence" },
                new SearchParamDefinition() { Resource = "ImmunizationRecommendation", Name = "identifier", Description = "Business identifier", Type = SearchParamType.Token, Path = new string[] { "ImmunizationRecommendation.identifier",  }, XPath = "f:ImmunizationRecommendation/f:identifier" },
                new SearchParamDefinition() { Resource = "ImmunizationRecommendation", Name = "information", Description = "Patient observations supporting recommendation", Type = SearchParamType.Reference, Path = new string[] { "ImmunizationRecommendation.recommendation.supportingPatientInformation",  }, Target = new ResourceType[] { ResourceType.AllergyIntolerance, ResourceType.Observation }, XPath = "f:ImmunizationRecommendation/f:recommendation/f:supportingPatientInformation" },
                new SearchParamDefinition() { Resource = "ImmunizationRecommendation", Name = "patient", Description = "Who this profile is for", Type = SearchParamType.Reference, Path = new string[] { "ImmunizationRecommendation.patient",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:ImmunizationRecommendation/f:patient" },
                new SearchParamDefinition() { Resource = "ImmunizationRecommendation", Name = "status", Description = "Vaccine administration status", Type = SearchParamType.Token, Path = new string[] { "ImmunizationRecommendation.recommendation.forecastStatus",  }, XPath = "f:ImmunizationRecommendation/f:recommendation/f:forecastStatus" },
                new SearchParamDefinition() { Resource = "ImmunizationRecommendation", Name = "support", Description = "Past immunizations supporting recommendation", Type = SearchParamType.Reference, Path = new string[] { "ImmunizationRecommendation.recommendation.supportingImmunization",  }, Target = new ResourceType[] { ResourceType.Immunization }, XPath = "f:ImmunizationRecommendation/f:recommendation/f:supportingImmunization" },
                new SearchParamDefinition() { Resource = "ImmunizationRecommendation", Name = "target-disease", Description = "Disease to be immunized against", Type = SearchParamType.Token, Path = new string[] { "ImmunizationRecommendation.recommendation.targetDisease",  }, XPath = "f:ImmunizationRecommendation/f:recommendation/f:targetDisease" },
                new SearchParamDefinition() { Resource = "ImmunizationRecommendation", Name = "vaccine-type", Description = "Vaccine recommendation applies to", Type = SearchParamType.Token, Path = new string[] { "ImmunizationRecommendation.recommendation.vaccineCode",  }, XPath = "f:ImmunizationRecommendation/f:recommendation/f:vaccineCode" },
                new SearchParamDefinition() { Resource = "ImplementationGuide", Name = "date", Description = "The implementation guide publication date", Type = SearchParamType.Date, Path = new string[] { "ImplementationGuide.date",  }, XPath = "f:ImplementationGuide/f:date" },
                new SearchParamDefinition() { Resource = "ImplementationGuide", Name = "dependency", Description = "Where to find dependency", Type = SearchParamType.Uri, Path = new string[] { "ImplementationGuide.dependency.uri",  }, XPath = "f:ImplementationGuide/f:dependency/f:uri" },
                new SearchParamDefinition() { Resource = "ImplementationGuide", Name = "description", Description = "The description of the implementation guide", Type = SearchParamType.String, Path = new string[] { "ImplementationGuide.description",  }, XPath = "f:ImplementationGuide/f:description" },
                new SearchParamDefinition() { Resource = "ImplementationGuide", Name = "experimental", Description = "For testing purposes, not real usage", Type = SearchParamType.Token, Path = new string[] { "ImplementationGuide.experimental",  }, XPath = "f:ImplementationGuide/f:experimental" },
                new SearchParamDefinition() { Resource = "ImplementationGuide", Name = "jurisdiction", Description = "Intended jurisdiction for the implementation guide", Type = SearchParamType.Token, Path = new string[] { "ImplementationGuide.jurisdiction",  }, XPath = "f:ImplementationGuide/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "ImplementationGuide", Name = "name", Description = "Computationally friendly name of the implementation guide", Type = SearchParamType.String, Path = new string[] { "ImplementationGuide.name",  }, XPath = "f:ImplementationGuide/f:name" },
                new SearchParamDefinition() { Resource = "ImplementationGuide", Name = "publisher", Description = "Name of the publisher of the implementation guide", Type = SearchParamType.String, Path = new string[] { "ImplementationGuide.publisher",  }, XPath = "f:ImplementationGuide/f:publisher" },
                new SearchParamDefinition() { Resource = "ImplementationGuide", Name = "resource", Description = "Location of the resource", Type = SearchParamType.Reference, Path = new string[] { "ImplementationGuide.package.resource.sourceUri", "ImplementationGuide.package.resource.sourceReference",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:ImplementationGuide/f:package/f:resource/f:sourceUri | f:ImplementationGuide/f:package/f:resource/f:sourceReference" },
                new SearchParamDefinition() { Resource = "ImplementationGuide", Name = "status", Description = "The current status of the implementation guide", Type = SearchParamType.Token, Path = new string[] { "ImplementationGuide.status",  }, XPath = "f:ImplementationGuide/f:status" },
                new SearchParamDefinition() { Resource = "ImplementationGuide", Name = "url", Description = "The uri that identifies the implementation guide", Type = SearchParamType.Uri, Path = new string[] { "ImplementationGuide.url",  }, XPath = "f:ImplementationGuide/f:url" },
                new SearchParamDefinition() { Resource = "ImplementationGuide", Name = "version", Description = "The business version of the implementation guide", Type = SearchParamType.Token, Path = new string[] { "ImplementationGuide.version",  }, XPath = "f:ImplementationGuide/f:version" },
                new SearchParamDefinition() { Resource = "Library", Name = "composed-of", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "Library.relatedArtifact[type.@value='composed-of'].resource",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Library/f:relatedArtifact[f:type/@value='composed-of']/f:resource" },
                new SearchParamDefinition() { Resource = "Library", Name = "date", Description = "The library publication date", Type = SearchParamType.Date, Path = new string[] { "Library.date",  }, XPath = "f:Library/f:date" },
                new SearchParamDefinition() { Resource = "Library", Name = "depends-on", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "Library.relatedArtifact[type.@value='depends-on'].resource",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Library/f:relatedArtifact[f:type/@value='depends-on']/f:resource" },
                new SearchParamDefinition() { Resource = "Library", Name = "derived-from", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "Library.relatedArtifact[type.@value='derived-from'].resource",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Library/f:relatedArtifact[f:type/@value='derived-from']/f:resource" },
                new SearchParamDefinition() { Resource = "Library", Name = "description", Description = "The description of the library", Type = SearchParamType.String, Path = new string[] { "Library.description",  }, XPath = "f:Library/f:description" },
                new SearchParamDefinition() { Resource = "Library", Name = "effective", Description = "The time during which the library is intended to be in use", Type = SearchParamType.Date, Path = new string[] { "Library.effectivePeriod",  }, XPath = "f:Library/f:effectivePeriod" },
                new SearchParamDefinition() { Resource = "Library", Name = "identifier", Description = "External identifier for the library", Type = SearchParamType.Token, Path = new string[] { "Library.identifier",  }, XPath = "f:Library/f:identifier" },
                new SearchParamDefinition() { Resource = "Library", Name = "jurisdiction", Description = "Intended jurisdiction for the library", Type = SearchParamType.Token, Path = new string[] { "Library.jurisdiction",  }, XPath = "f:Library/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "Library", Name = "name", Description = "Computationally friendly name of the library", Type = SearchParamType.String, Path = new string[] { "Library.name",  }, XPath = "f:Library/f:name" },
                new SearchParamDefinition() { Resource = "Library", Name = "predecessor", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "Library.relatedArtifact[type.@value='predecessor'].resource",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Library/f:relatedArtifact[f:type/@value='predecessor']/f:resource" },
                new SearchParamDefinition() { Resource = "Library", Name = "publisher", Description = "Name of the publisher of the library", Type = SearchParamType.String, Path = new string[] { "Library.publisher",  }, XPath = "f:Library/f:publisher" },
                new SearchParamDefinition() { Resource = "Library", Name = "status", Description = "The current status of the library", Type = SearchParamType.Token, Path = new string[] { "Library.status",  }, XPath = "f:Library/f:status" },
                new SearchParamDefinition() { Resource = "Library", Name = "successor", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "Library.relatedArtifact[type.@value='successor'].resource",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Library/f:relatedArtifact[f:type/@value='successor']/f:resource" },
                new SearchParamDefinition() { Resource = "Library", Name = "title", Description = "The human-friendly name of the library", Type = SearchParamType.String, Path = new string[] { "Library.title",  }, XPath = "f:Library/f:title" },
                new SearchParamDefinition() { Resource = "Library", Name = "topic", Description = "Topics associated with the module", Type = SearchParamType.Token, Path = new string[] { "Library.topic",  }, XPath = "f:Library/f:topic" },
                new SearchParamDefinition() { Resource = "Library", Name = "url", Description = "The uri that identifies the library", Type = SearchParamType.Uri, Path = new string[] { "Library.url",  }, XPath = "f:Library/f:url" },
                new SearchParamDefinition() { Resource = "Library", Name = "version", Description = "The business version of the library", Type = SearchParamType.Token, Path = new string[] { "Library.version",  }, XPath = "f:Library/f:version" },
                new SearchParamDefinition() { Resource = "Linkage", Name = "author", Description = "Author of the Linkage", Type = SearchParamType.Reference, Path = new string[] { "Linkage.author",  }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Practitioner }, XPath = "f:Linkage/f:author" },
                new SearchParamDefinition() { Resource = "Linkage", Name = "item", Description = "Matches on any item in the Linkage", Type = SearchParamType.Reference, Path = new string[] { "Linkage.item.resource",  }, XPath = "f:Linkage/f:item/f:resource" },
                new SearchParamDefinition() { Resource = "Linkage", Name = "source", Description = "Matches on any item in the Linkage with a type of 'source'", Type = SearchParamType.Reference, Path = new string[] { "Linkage.item.resource",  }, XPath = "f:Linkage/f:item/f:resource" },
                new SearchParamDefinition() { Resource = "List", Name = "code", Description = "Multiple Resources: \r\n\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [List](list.html): What the purpose of this list is\r\n* [ProcedureRequest](procedurerequest.html): What is being requested/ordered\r\n* [Observation](observation.html): The code of the observation type\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report as a whole, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [Condition](condition.html): Code for the condition\r\n", Type = SearchParamType.Token, Path = new string[] { "FamilyMemberHistory.condition.code", "DeviceRequest.codeCodeableConcept", "AllergyIntolerance.code", "AllergyIntolerance.reaction.substance", "Procedure.code", "List.code", "ProcedureRequest.code", "Observation.code", "DiagnosticReport.code", "Condition.code",  }, XPath = "f:FamilyMemberHistory/f:condition/f:code | f:DeviceRequest/f:codeCodeableConcept | f:AllergyIntolerance/f:code | f:AllergyIntolerance/f:reaction/f:substance | f:Procedure/f:code | f:List/f:code | f:ProcedureRequest/f:code | f:Observation/f:code | f:DiagnosticReport/f:code | f:Condition/f:code" },
                new SearchParamDefinition() { Resource = "List", Name = "date", Description = "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n", Type = SearchParamType.Date, Path = new string[] { "Consent.dateTime", "SupplyRequest.authoredOn", "RiskAssessment.occurrenceDateTime", "CareTeam.period", "FamilyMemberHistory.date", "Encounter.period", "AllergyIntolerance.assertedDate", "CarePlan.period", "EpisodeOfCare.period", "Procedure.performedDateTime", "Procedure.performedPeriod", "List.date", "Immunization.date", "Flag.period", "Observation.effectiveDateTime", "Observation.effectivePeriod", "DiagnosticReport.effectiveDateTime", "DiagnosticReport.effectivePeriod", "Composition.date", "DetectedIssue.date", "ClinicalImpression.date",  }, XPath = "f:Consent/f:dateTime | f:SupplyRequest/f:authoredOn | f:RiskAssessment/f:occurrenceDateTime | f:CareTeam/f:period | f:FamilyMemberHistory/f:date | f:Encounter/f:period | f:AllergyIntolerance/f:assertedDate | f:CarePlan/f:period | f:EpisodeOfCare/f:period | f:Procedure/f:performedDateTime | f:Procedure/f:performedPeriod | f:List/f:date | f:Immunization/f:date | f:Flag/f:period | f:Observation/f:effectiveDateTime | f:Observation/f:effectivePeriod | f:DiagnosticReport/f:effectiveDateTime | f:DiagnosticReport/f:effectivePeriod | f:Composition/f:date | f:DetectedIssue/f:date | f:ClinicalImpression/f:date" },
                new SearchParamDefinition() { Resource = "List", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "List", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "List", Name = "encounter", Description = "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition\r\n", Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.context.encounter", "RiskAssessment.context", "DeviceRequest.context", "Procedure.context", "List.encounter", "VisionPrescription.encounter", "ProcedureRequest.context", "Flag.encounter", "Observation.context", "DiagnosticReport.context", "NutritionOrder.encounter", "Composition.encounter",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:DocumentReference/f:context/f:encounter | f:RiskAssessment/f:context | f:DeviceRequest/f:context | f:Procedure/f:context | f:List/f:encounter | f:VisionPrescription/f:encounter | f:ProcedureRequest/f:context | f:Flag/f:encounter | f:Observation/f:context | f:DiagnosticReport/f:context | f:NutritionOrder/f:encounter | f:Composition/f:encounter" },
                new SearchParamDefinition() { Resource = "List", Name = "empty-reason", Description = "Why list is empty", Type = SearchParamType.Token, Path = new string[] { "List.emptyReason",  }, XPath = "f:List/f:emptyReason" },
                new SearchParamDefinition() { Resource = "List", Name = "item", Description = "Actual entry", Type = SearchParamType.Reference, Path = new string[] { "List.entry.item",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:List/f:entry/f:item" },
                new SearchParamDefinition() { Resource = "List", Name = "notes", Description = "The annotation  - text content", Type = SearchParamType.String, Path = new string[] { "List.note.text",  }, XPath = "f:List/f:note/f:text" },
                new SearchParamDefinition() { Resource = "List", Name = "source", Description = "Who and/or what defined the list contents (aka Author)", Type = SearchParamType.Reference, Path = new string[] { "List.source",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Patient, ResourceType.Practitioner }, XPath = "f:List/f:source" },
                new SearchParamDefinition() { Resource = "List", Name = "status", Description = "current | retired | entered-in-error", Type = SearchParamType.Token, Path = new string[] { "List.status",  }, XPath = "f:List/f:status" },
                new SearchParamDefinition() { Resource = "List", Name = "subject", Description = "If all resources have the same subject", Type = SearchParamType.Reference, Path = new string[] { "List.subject",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Location, ResourceType.Patient }, XPath = "f:List/f:subject" },
                new SearchParamDefinition() { Resource = "List", Name = "title", Description = "Descriptive name for the list", Type = SearchParamType.String, Path = new string[] { "List.title",  }, XPath = "f:List/f:title" },
                new SearchParamDefinition() { Resource = "Location", Name = "address", Description = "A (part of the) address of the location", Type = SearchParamType.String, Path = new string[] { "Location.address",  }, XPath = "f:Location/f:address" },
                new SearchParamDefinition() { Resource = "Location", Name = "address-city", Description = "A city specified in an address", Type = SearchParamType.String, Path = new string[] { "Location.address.city",  }, XPath = "f:Location/f:address/f:city" },
                new SearchParamDefinition() { Resource = "Location", Name = "address-country", Description = "A country specified in an address", Type = SearchParamType.String, Path = new string[] { "Location.address.country",  }, XPath = "f:Location/f:address/f:country" },
                new SearchParamDefinition() { Resource = "Location", Name = "address-postalcode", Description = "A postal code specified in an address", Type = SearchParamType.String, Path = new string[] { "Location.address.postalCode",  }, XPath = "f:Location/f:address/f:postalCode" },
                new SearchParamDefinition() { Resource = "Location", Name = "address-state", Description = "A state specified in an address", Type = SearchParamType.String, Path = new string[] { "Location.address.state",  }, XPath = "f:Location/f:address/f:state" },
                new SearchParamDefinition() { Resource = "Location", Name = "address-use", Description = "A use code specified in an address", Type = SearchParamType.Token, Path = new string[] { "Location.address.use",  }, XPath = "f:Location/f:address/f:use" },
                new SearchParamDefinition() { Resource = "Location", Name = "endpoint", Description = "Technical endpoints providing access to services operated for the location", Type = SearchParamType.Reference, Path = new string[] { "Location.endpoint",  }, Target = new ResourceType[] { ResourceType.Endpoint }, XPath = "f:Location/f:endpoint" },
                new SearchParamDefinition() { Resource = "Location", Name = "identifier", Description = "An identifier for the location", Type = SearchParamType.Token, Path = new string[] { "Location.identifier",  }, XPath = "f:Location/f:identifier" },
                new SearchParamDefinition() { Resource = "Location", Name = "name", Description = "A portion of the location's name or alias", Type = SearchParamType.String, Path = new string[] { "Location.name", "Location.alias",  }, XPath = "f:Location/f:name | f:Location/f:alias" },
                new SearchParamDefinition() { Resource = "Location", Name = "near", Description = "The coordinates expressed as [latitude]:[longitude] (using the WGS84 datum, see notes) to find locations near to (servers may search using a square rather than a circle for efficiency)\n\nRequires the near-distance parameter to be provided also", Type = SearchParamType.Token, Path = new string[] { "Location.position",  }, XPath = "f:Location/f:position" },
                new SearchParamDefinition() { Resource = "Location", Name = "near-distance", Description = "A distance quantity to limit the near search to locations within a specific distance\n\nRequires the near parameter to also be included", Type = SearchParamType.Quantity, Path = new string[] { "Location.position",  }, XPath = "f:Location/f:position" },
                new SearchParamDefinition() { Resource = "Location", Name = "operational-status", Description = "Searches for locations (typically bed/room) that have an operational status (e.g. contaminated, housekeeping)", Type = SearchParamType.Token, Path = new string[] { "Location.operationalStatus",  }, XPath = "f:Location/f:operationalStatus" },
                new SearchParamDefinition() { Resource = "Location", Name = "organization", Description = "Searches for locations that are managed by the provided organization", Type = SearchParamType.Reference, Path = new string[] { "Location.managingOrganization",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:Location/f:managingOrganization" },
                new SearchParamDefinition() { Resource = "Location", Name = "partof", Description = "A location of which this location is a part", Type = SearchParamType.Reference, Path = new string[] { "Location.partOf",  }, Target = new ResourceType[] { ResourceType.Location }, XPath = "f:Location/f:partOf" },
                new SearchParamDefinition() { Resource = "Location", Name = "status", Description = "Searches for locations with a specific kind of status", Type = SearchParamType.Token, Path = new string[] { "Location.status",  }, XPath = "f:Location/f:status" },
                new SearchParamDefinition() { Resource = "Location", Name = "type", Description = "A code for the type of location", Type = SearchParamType.Token, Path = new string[] { "Location.type",  }, XPath = "f:Location/f:type" },
                new SearchParamDefinition() { Resource = "Measure", Name = "composed-of", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "Measure.relatedArtifact[type.@value='composed-of'].resource",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Measure/f:relatedArtifact[f:type/@value='composed-of']/f:resource" },
                new SearchParamDefinition() { Resource = "Measure", Name = "date", Description = "The measure publication date", Type = SearchParamType.Date, Path = new string[] { "Measure.date",  }, XPath = "f:Measure/f:date" },
                new SearchParamDefinition() { Resource = "Measure", Name = "depends-on", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "Measure.relatedArtifact[type.@value='depends-on'].resource", "Measure.library",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Measure/f:relatedArtifact[f:type/@value='depends-on']/f:resource | f:Measure/f:library" },
                new SearchParamDefinition() { Resource = "Measure", Name = "derived-from", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "Measure.relatedArtifact[type.@value='derived-from'].resource",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Measure/f:relatedArtifact[f:type/@value='derived-from']/f:resource" },
                new SearchParamDefinition() { Resource = "Measure", Name = "description", Description = "The description of the measure", Type = SearchParamType.String, Path = new string[] { "Measure.description",  }, XPath = "f:Measure/f:description" },
                new SearchParamDefinition() { Resource = "Measure", Name = "effective", Description = "The time during which the measure is intended to be in use", Type = SearchParamType.Date, Path = new string[] { "Measure.effectivePeriod",  }, XPath = "f:Measure/f:effectivePeriod" },
                new SearchParamDefinition() { Resource = "Measure", Name = "identifier", Description = "External identifier for the measure", Type = SearchParamType.Token, Path = new string[] { "Measure.identifier",  }, XPath = "f:Measure/f:identifier" },
                new SearchParamDefinition() { Resource = "Measure", Name = "jurisdiction", Description = "Intended jurisdiction for the measure", Type = SearchParamType.Token, Path = new string[] { "Measure.jurisdiction",  }, XPath = "f:Measure/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "Measure", Name = "name", Description = "Computationally friendly name of the measure", Type = SearchParamType.String, Path = new string[] { "Measure.name",  }, XPath = "f:Measure/f:name" },
                new SearchParamDefinition() { Resource = "Measure", Name = "predecessor", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "Measure.relatedArtifact[type.@value='predecessor'].resource",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Measure/f:relatedArtifact[f:type/@value='predecessor']/f:resource" },
                new SearchParamDefinition() { Resource = "Measure", Name = "publisher", Description = "Name of the publisher of the measure", Type = SearchParamType.String, Path = new string[] { "Measure.publisher",  }, XPath = "f:Measure/f:publisher" },
                new SearchParamDefinition() { Resource = "Measure", Name = "status", Description = "The current status of the measure", Type = SearchParamType.Token, Path = new string[] { "Measure.status",  }, XPath = "f:Measure/f:status" },
                new SearchParamDefinition() { Resource = "Measure", Name = "successor", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "Measure.relatedArtifact[type.@value='successor'].resource",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Measure/f:relatedArtifact[f:type/@value='successor']/f:resource" },
                new SearchParamDefinition() { Resource = "Measure", Name = "title", Description = "The human-friendly name of the measure", Type = SearchParamType.String, Path = new string[] { "Measure.title",  }, XPath = "f:Measure/f:title" },
                new SearchParamDefinition() { Resource = "Measure", Name = "topic", Description = "Topics associated with the module", Type = SearchParamType.Token, Path = new string[] { "Measure.topic",  }, XPath = "f:Measure/f:topic" },
                new SearchParamDefinition() { Resource = "Measure", Name = "url", Description = "The uri that identifies the measure", Type = SearchParamType.Uri, Path = new string[] { "Measure.url",  }, XPath = "f:Measure/f:url" },
                new SearchParamDefinition() { Resource = "Measure", Name = "version", Description = "The business version of the measure", Type = SearchParamType.Token, Path = new string[] { "Measure.version",  }, XPath = "f:Measure/f:version" },
                new SearchParamDefinition() { Resource = "MeasureReport", Name = "identifier", Description = "External identifier of the measure report to be returned", Type = SearchParamType.Token, Path = new string[] { "MeasureReport.identifier",  }, XPath = "f:MeasureReport/f:identifier" },
                new SearchParamDefinition() { Resource = "MeasureReport", Name = "patient", Description = "The identity of a patient to search for individual measure report results for", Type = SearchParamType.Reference, Path = new string[] { "MeasureReport.patient",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:MeasureReport/f:patient" },
                new SearchParamDefinition() { Resource = "MeasureReport", Name = "status", Description = "The status of the measure report", Type = SearchParamType.Token, Path = new string[] { "MeasureReport.status",  }, XPath = "f:MeasureReport/f:status" },
                new SearchParamDefinition() { Resource = "Media", Name = "based-on", Description = "Procedure that caused this media to be created", Type = SearchParamType.Reference, Path = new string[] { "Media.basedOn",  }, Target = new ResourceType[] { ResourceType.ProcedureRequest }, XPath = "f:Media/f:basedOn" },
                new SearchParamDefinition() { Resource = "Media", Name = "context", Description = "Encounter / Episode associated with media", Type = SearchParamType.Reference, Path = new string[] { "Media.context",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:Media/f:context" },
                new SearchParamDefinition() { Resource = "Media", Name = "created", Description = "Date attachment was first created", Type = SearchParamType.Date, Path = new string[] { "Media.content.creation",  }, XPath = "f:Media/f:content/f:creation" },
                new SearchParamDefinition() { Resource = "Media", Name = "date", Description = "When Media was collected", Type = SearchParamType.Date, Path = new string[] { "Media.occurrenceDateTime", "Media.occurrencePeriod",  }, XPath = "f:Media/f:occurrenceDateTime | f:Media/f:occurrencePeriod" },
                new SearchParamDefinition() { Resource = "Media", Name = "device", Description = "Observing Device", Type = SearchParamType.Reference, Path = new string[] { "Media.device",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.DeviceMetric }, XPath = "f:Media/f:device" },
                new SearchParamDefinition() { Resource = "Media", Name = "identifier", Description = "Identifier(s) for the image", Type = SearchParamType.Token, Path = new string[] { "Media.identifier",  }, XPath = "f:Media/f:identifier" },
                new SearchParamDefinition() { Resource = "Media", Name = "operator", Description = "The person who generated the image", Type = SearchParamType.Reference, Path = new string[] { "Media.operator",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:Media/f:operator" },
                new SearchParamDefinition() { Resource = "Media", Name = "patient", Description = "Who/What this Media is a record of", Type = SearchParamType.Reference, Path = new string[] { "Media.subject",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:Media/f:subject" },
                new SearchParamDefinition() { Resource = "Media", Name = "site", Description = "Body part in media", Type = SearchParamType.Token, Path = new string[] { "Media.bodySite",  }, XPath = "f:Media/f:bodySite" },
                new SearchParamDefinition() { Resource = "Media", Name = "subject", Description = "Who/What this Media is a record of", Type = SearchParamType.Reference, Path = new string[] { "Media.subject",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Patient, ResourceType.Practitioner, ResourceType.Specimen }, XPath = "f:Media/f:subject" },
                new SearchParamDefinition() { Resource = "Media", Name = "subtype", Description = "The type of acquisition equipment/process", Type = SearchParamType.Token, Path = new string[] { "Media.subtype",  }, XPath = "f:Media/f:subtype" },
                new SearchParamDefinition() { Resource = "Media", Name = "type", Description = "photo | video | audio", Type = SearchParamType.Token, Path = new string[] { "Media.type",  }, XPath = "f:Media/f:type" },
                new SearchParamDefinition() { Resource = "Media", Name = "view", Description = "Imaging view, e.g. Lateral or Antero-posterior", Type = SearchParamType.Token, Path = new string[] { "Media.view",  }, XPath = "f:Media/f:view" },
                new SearchParamDefinition() { Resource = "Medication", Name = "code", Description = "Multiple Resources: \r\n\r\n* [Medication](medication.html): Codes that identify this medication\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [MedicationDispense](medicationdispense.html): Return dispenses of this medicine code\r\n", Type = SearchParamType.Token, Path = new string[] { "Medication.code", "MedicationRequest.medicationCodeableConcept", "MedicationAdministration.medicationCodeableConcept", "MedicationStatement.medicationCodeableConcept", "MedicationDispense.medicationCodeableConcept",  }, XPath = "f:Medication/f:code | f:MedicationRequest/f:medicationCodeableConcept | f:MedicationAdministration/f:medicationCodeableConcept | f:MedicationStatement/f:medicationCodeableConcept | f:MedicationDispense/f:medicationCodeableConcept" },
                new SearchParamDefinition() { Resource = "Medication", Name = "container", Description = "E.g. box, vial, blister-pack", Type = SearchParamType.Token, Path = new string[] { "Medication.package.container",  }, XPath = "f:Medication/f:package/f:container" },
                new SearchParamDefinition() { Resource = "Medication", Name = "form", Description = "powder | tablets | capsule +", Type = SearchParamType.Token, Path = new string[] { "Medication.form",  }, XPath = "f:Medication/f:form" },
                new SearchParamDefinition() { Resource = "Medication", Name = "ingredient", Description = "The product contained", Type = SearchParamType.Reference, Path = new string[] { "Medication.ingredient.itemReference",  }, Target = new ResourceType[] { ResourceType.Medication, ResourceType.Substance }, XPath = "f:Medication/f:ingredient/f:itemReference" },
                new SearchParamDefinition() { Resource = "Medication", Name = "ingredient-code", Description = "The product contained", Type = SearchParamType.Token, Path = new string[] { "Medication.ingredient.itemCodeableConcept",  }, XPath = "f:Medication/f:ingredient/f:itemCodeableConcept" },
                new SearchParamDefinition() { Resource = "Medication", Name = "manufacturer", Description = "Manufacturer of the item", Type = SearchParamType.Reference, Path = new string[] { "Medication.manufacturer",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:Medication/f:manufacturer" },
                new SearchParamDefinition() { Resource = "Medication", Name = "over-the-counter", Description = "True if medication does not require a prescription", Type = SearchParamType.Token, Path = new string[] { "Medication.isOverTheCounter",  }, XPath = "f:Medication/f:isOverTheCounter" },
                new SearchParamDefinition() { Resource = "Medication", Name = "package-item", Description = "The item in the package", Type = SearchParamType.Reference, Path = new string[] { "Medication.package.content.itemReference",  }, Target = new ResourceType[] { ResourceType.Medication }, XPath = "f:Medication/f:package/f:content/f:itemReference" },
                new SearchParamDefinition() { Resource = "Medication", Name = "package-item-code", Description = "The item in the package", Type = SearchParamType.Token, Path = new string[] { "Medication.package.content.itemCodeableConcept",  }, XPath = "f:Medication/f:package/f:content/f:itemCodeableConcept" },
                new SearchParamDefinition() { Resource = "Medication", Name = "status", Description = "active | inactive | entered-in-error", Type = SearchParamType.Token, Path = new string[] { "Medication.status",  }, XPath = "f:Medication/f:status" },
                new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "code", Description = "Multiple Resources: \r\n\r\n* [Medication](medication.html): Codes that identify this medication\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [MedicationDispense](medicationdispense.html): Return dispenses of this medicine code\r\n", Type = SearchParamType.Token, Path = new string[] { "Medication.code", "MedicationRequest.medicationCodeableConcept", "MedicationAdministration.medicationCodeableConcept", "MedicationStatement.medicationCodeableConcept", "MedicationDispense.medicationCodeableConcept",  }, XPath = "f:Medication/f:code | f:MedicationRequest/f:medicationCodeableConcept | f:MedicationAdministration/f:medicationCodeableConcept | f:MedicationStatement/f:medicationCodeableConcept | f:MedicationDispense/f:medicationCodeableConcept" },
                new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "context", Description = "Return administrations that share this encounter or episode of care", Type = SearchParamType.Reference, Path = new string[] { "MedicationAdministration.context",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:MedicationAdministration/f:context" },
                new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "device", Description = "Return administrations with this administration device identity", Type = SearchParamType.Reference, Path = new string[] { "MedicationAdministration.device",  }, Target = new ResourceType[] { ResourceType.Device }, XPath = "f:MedicationAdministration/f:device" },
                new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "effective-time", Description = "Date administration happened (or did not happen)", Type = SearchParamType.Date, Path = new string[] { "MedicationAdministration.effectiveDateTime", "MedicationAdministration.effectivePeriod",  }, XPath = "f:MedicationAdministration/f:effectiveDateTime | f:MedicationAdministration/f:effectivePeriod" },
                new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Return dispenses with this external identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "MedicationRequest.identifier", "MedicationAdministration.identifier", "MedicationStatement.identifier", "MedicationDispense.identifier",  }, XPath = "f:MedicationRequest/f:identifier | f:MedicationAdministration/f:identifier | f:MedicationStatement/f:identifier | f:MedicationDispense/f:identifier" },
                new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "medication", Description = "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication reference\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication resource\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication reference\r\n* [MedicationDispense](medicationdispense.html): Return dispenses of this medicine resource\r\n", Type = SearchParamType.Reference, Path = new string[] { "MedicationRequest.medicationReference", "MedicationAdministration.medicationReference", "MedicationStatement.medicationReference", "MedicationDispense.medicationReference",  }, Target = new ResourceType[] { ResourceType.Medication }, XPath = "f:MedicationRequest/f:medicationReference | f:MedicationAdministration/f:medicationReference | f:MedicationStatement/f:medicationReference | f:MedicationDispense/f:medicationReference" },
                new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "not-given", Description = "Administrations that were not made", Type = SearchParamType.Token, Path = new string[] { "MedicationAdministration.notGiven",  }, XPath = "f:MedicationAdministration/f:notGiven" },
                new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n", Type = SearchParamType.Reference, Path = new string[] { "MedicationRequest.subject", "MedicationAdministration.subject", "MedicationStatement.subject", "MedicationDispense.subject",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:MedicationRequest/f:subject | f:MedicationAdministration/f:subject | f:MedicationStatement/f:subject | f:MedicationDispense/f:subject" },
                new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "performer", Description = "The identify of the individual who administered the medication", Type = SearchParamType.Reference, Path = new string[] { "MedicationAdministration.performer.actor",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:MedicationAdministration/f:performer/f:actor" },
                new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "prescription", Description = "Multiple Resources: \r\n\r\n* [MedicationAdministration](medicationadministration.html): The identity of a prescription to list administrations from\r\n* [MedicationDispense](medicationdispense.html): The identity of a prescription to list dispenses from\r\n", Type = SearchParamType.Reference, Path = new string[] { "MedicationAdministration.prescription", "MedicationDispense.authorizingPrescription",  }, Target = new ResourceType[] { ResourceType.MedicationRequest }, XPath = "f:MedicationAdministration/f:prescription | f:MedicationDispense/f:authorizingPrescription" },
                new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "reason-given", Description = "Reasons for administering the medication", Type = SearchParamType.Token, Path = new string[] { "MedicationAdministration.reasonCode",  }, XPath = "f:MedicationAdministration/f:reasonCode" },
                new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "reason-not-given", Description = "Reasons for not administering the medication", Type = SearchParamType.Token, Path = new string[] { "MedicationAdministration.reasonNotGiven",  }, XPath = "f:MedicationAdministration/f:reasonNotGiven" },
                new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "status", Description = "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Status of the prescription\r\n* [MedicationAdministration](medicationadministration.html): MedicationAdministration event status (for example one of active/paused/completed/nullified)\r\n* [MedicationStatement](medicationstatement.html): Return statements that match the given status\r\n* [MedicationDispense](medicationdispense.html): Return dispenses with a specified dispense status\r\n", Type = SearchParamType.Token, Path = new string[] { "MedicationRequest.status", "MedicationAdministration.status", "MedicationStatement.status", "MedicationDispense.status",  }, XPath = "f:MedicationRequest/f:status | f:MedicationAdministration/f:status | f:MedicationStatement/f:status | f:MedicationDispense/f:status" },
                new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "subject", Description = "The identify of the individual or group to list administrations for", Type = SearchParamType.Reference, Path = new string[] { "MedicationAdministration.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:MedicationAdministration/f:subject" },
                new SearchParamDefinition() { Resource = "MedicationDispense", Name = "code", Description = "Multiple Resources: \r\n\r\n* [Medication](medication.html): Codes that identify this medication\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [MedicationDispense](medicationdispense.html): Return dispenses of this medicine code\r\n", Type = SearchParamType.Token, Path = new string[] { "Medication.code", "MedicationRequest.medicationCodeableConcept", "MedicationAdministration.medicationCodeableConcept", "MedicationStatement.medicationCodeableConcept", "MedicationDispense.medicationCodeableConcept",  }, XPath = "f:Medication/f:code | f:MedicationRequest/f:medicationCodeableConcept | f:MedicationAdministration/f:medicationCodeableConcept | f:MedicationStatement/f:medicationCodeableConcept | f:MedicationDispense/f:medicationCodeableConcept" },
                new SearchParamDefinition() { Resource = "MedicationDispense", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Return dispenses with this external identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "MedicationRequest.identifier", "MedicationAdministration.identifier", "MedicationStatement.identifier", "MedicationDispense.identifier",  }, XPath = "f:MedicationRequest/f:identifier | f:MedicationAdministration/f:identifier | f:MedicationStatement/f:identifier | f:MedicationDispense/f:identifier" },
                new SearchParamDefinition() { Resource = "MedicationDispense", Name = "medication", Description = "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication reference\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication resource\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication reference\r\n* [MedicationDispense](medicationdispense.html): Return dispenses of this medicine resource\r\n", Type = SearchParamType.Reference, Path = new string[] { "MedicationRequest.medicationReference", "MedicationAdministration.medicationReference", "MedicationStatement.medicationReference", "MedicationDispense.medicationReference",  }, Target = new ResourceType[] { ResourceType.Medication }, XPath = "f:MedicationRequest/f:medicationReference | f:MedicationAdministration/f:medicationReference | f:MedicationStatement/f:medicationReference | f:MedicationDispense/f:medicationReference" },
                new SearchParamDefinition() { Resource = "MedicationDispense", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n", Type = SearchParamType.Reference, Path = new string[] { "MedicationRequest.subject", "MedicationAdministration.subject", "MedicationStatement.subject", "MedicationDispense.subject",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:MedicationRequest/f:subject | f:MedicationAdministration/f:subject | f:MedicationStatement/f:subject | f:MedicationDispense/f:subject" },
                new SearchParamDefinition() { Resource = "MedicationDispense", Name = "prescription", Description = "Multiple Resources: \r\n\r\n* [MedicationAdministration](medicationadministration.html): The identity of a prescription to list administrations from\r\n* [MedicationDispense](medicationdispense.html): The identity of a prescription to list dispenses from\r\n", Type = SearchParamType.Reference, Path = new string[] { "MedicationAdministration.prescription", "MedicationDispense.authorizingPrescription",  }, Target = new ResourceType[] { ResourceType.MedicationRequest }, XPath = "f:MedicationAdministration/f:prescription | f:MedicationDispense/f:authorizingPrescription" },
                new SearchParamDefinition() { Resource = "MedicationDispense", Name = "status", Description = "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Status of the prescription\r\n* [MedicationAdministration](medicationadministration.html): MedicationAdministration event status (for example one of active/paused/completed/nullified)\r\n* [MedicationStatement](medicationstatement.html): Return statements that match the given status\r\n* [MedicationDispense](medicationdispense.html): Return dispenses with a specified dispense status\r\n", Type = SearchParamType.Token, Path = new string[] { "MedicationRequest.status", "MedicationAdministration.status", "MedicationStatement.status", "MedicationDispense.status",  }, XPath = "f:MedicationRequest/f:status | f:MedicationAdministration/f:status | f:MedicationStatement/f:status | f:MedicationDispense/f:status" },
                new SearchParamDefinition() { Resource = "MedicationDispense", Name = "context", Description = "Returns dispenses with a specific context (episode or episode of care)", Type = SearchParamType.Reference, Path = new string[] { "MedicationDispense.context",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:MedicationDispense/f:context" },
                new SearchParamDefinition() { Resource = "MedicationDispense", Name = "destination", Description = "Return dispenses that should be sent to a specific destination", Type = SearchParamType.Reference, Path = new string[] { "MedicationDispense.destination",  }, Target = new ResourceType[] { ResourceType.Location }, XPath = "f:MedicationDispense/f:destination" },
                new SearchParamDefinition() { Resource = "MedicationDispense", Name = "performer", Description = "Return dispenses performed by a specific individual", Type = SearchParamType.Reference, Path = new string[] { "MedicationDispense.performer.actor",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:MedicationDispense/f:performer/f:actor" },
                new SearchParamDefinition() { Resource = "MedicationDispense", Name = "receiver", Description = "The identity of a receiver to list dispenses for", Type = SearchParamType.Reference, Path = new string[] { "MedicationDispense.receiver",  }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.Practitioner }, XPath = "f:MedicationDispense/f:receiver" },
                new SearchParamDefinition() { Resource = "MedicationDispense", Name = "responsibleparty", Description = "Return dispenses with the specified responsible party", Type = SearchParamType.Reference, Path = new string[] { "MedicationDispense.substitution.responsibleParty",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:MedicationDispense/f:substitution/f:responsibleParty" },
                new SearchParamDefinition() { Resource = "MedicationDispense", Name = "subject", Description = "The identity of a patient to list dispenses  for", Type = SearchParamType.Reference, Path = new string[] { "MedicationDispense.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:MedicationDispense/f:subject" },
                new SearchParamDefinition() { Resource = "MedicationDispense", Name = "type", Description = "Return dispenses of a specific type", Type = SearchParamType.Token, Path = new string[] { "MedicationDispense.type",  }, XPath = "f:MedicationDispense/f:type" },
                new SearchParamDefinition() { Resource = "MedicationDispense", Name = "whenhandedover", Description = "Returns dispenses handed over on this date", Type = SearchParamType.Date, Path = new string[] { "MedicationDispense.whenHandedOver",  }, XPath = "f:MedicationDispense/f:whenHandedOver" },
                new SearchParamDefinition() { Resource = "MedicationDispense", Name = "whenprepared", Description = "Returns dispenses prepared on this date", Type = SearchParamType.Date, Path = new string[] { "MedicationDispense.whenPrepared",  }, XPath = "f:MedicationDispense/f:whenPrepared" },
                new SearchParamDefinition() { Resource = "MedicationRequest", Name = "code", Description = "Multiple Resources: \r\n\r\n* [Medication](medication.html): Codes that identify this medication\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [MedicationDispense](medicationdispense.html): Return dispenses of this medicine code\r\n", Type = SearchParamType.Token, Path = new string[] { "Medication.code", "MedicationRequest.medicationCodeableConcept", "MedicationAdministration.medicationCodeableConcept", "MedicationStatement.medicationCodeableConcept", "MedicationDispense.medicationCodeableConcept",  }, XPath = "f:Medication/f:code | f:MedicationRequest/f:medicationCodeableConcept | f:MedicationAdministration/f:medicationCodeableConcept | f:MedicationStatement/f:medicationCodeableConcept | f:MedicationDispense/f:medicationCodeableConcept" },
                new SearchParamDefinition() { Resource = "MedicationRequest", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Return dispenses with this external identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "MedicationRequest.identifier", "MedicationAdministration.identifier", "MedicationStatement.identifier", "MedicationDispense.identifier",  }, XPath = "f:MedicationRequest/f:identifier | f:MedicationAdministration/f:identifier | f:MedicationStatement/f:identifier | f:MedicationDispense/f:identifier" },
                new SearchParamDefinition() { Resource = "MedicationRequest", Name = "medication", Description = "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication reference\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication resource\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication reference\r\n* [MedicationDispense](medicationdispense.html): Return dispenses of this medicine resource\r\n", Type = SearchParamType.Reference, Path = new string[] { "MedicationRequest.medicationReference", "MedicationAdministration.medicationReference", "MedicationStatement.medicationReference", "MedicationDispense.medicationReference",  }, Target = new ResourceType[] { ResourceType.Medication }, XPath = "f:MedicationRequest/f:medicationReference | f:MedicationAdministration/f:medicationReference | f:MedicationStatement/f:medicationReference | f:MedicationDispense/f:medicationReference" },
                new SearchParamDefinition() { Resource = "MedicationRequest", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n", Type = SearchParamType.Reference, Path = new string[] { "MedicationRequest.subject", "MedicationAdministration.subject", "MedicationStatement.subject", "MedicationDispense.subject",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:MedicationRequest/f:subject | f:MedicationAdministration/f:subject | f:MedicationStatement/f:subject | f:MedicationDispense/f:subject" },
                new SearchParamDefinition() { Resource = "MedicationRequest", Name = "status", Description = "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Status of the prescription\r\n* [MedicationAdministration](medicationadministration.html): MedicationAdministration event status (for example one of active/paused/completed/nullified)\r\n* [MedicationStatement](medicationstatement.html): Return statements that match the given status\r\n* [MedicationDispense](medicationdispense.html): Return dispenses with a specified dispense status\r\n", Type = SearchParamType.Token, Path = new string[] { "MedicationRequest.status", "MedicationAdministration.status", "MedicationStatement.status", "MedicationDispense.status",  }, XPath = "f:MedicationRequest/f:status | f:MedicationAdministration/f:status | f:MedicationStatement/f:status | f:MedicationDispense/f:status" },
                new SearchParamDefinition() { Resource = "MedicationRequest", Name = "authoredon", Description = "Return prescriptions written on this date", Type = SearchParamType.Date, Path = new string[] { "MedicationRequest.authoredOn",  }, XPath = "f:MedicationRequest/f:authoredOn" },
                new SearchParamDefinition() { Resource = "MedicationRequest", Name = "category", Description = "Returns prescriptions with different categories", Type = SearchParamType.Token, Path = new string[] { "MedicationRequest.category",  }, XPath = "f:MedicationRequest/f:category" },
                new SearchParamDefinition() { Resource = "MedicationRequest", Name = "context", Description = "Return prescriptions with this encounter or episode of care identifier", Type = SearchParamType.Reference, Path = new string[] { "MedicationRequest.context",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:MedicationRequest/f:context" },
                new SearchParamDefinition() { Resource = "MedicationRequest", Name = "date", Description = "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Returns medication request to be administered on a specific date\r\n", Type = SearchParamType.Date, Path = new string[] { "MedicationRequest.dosageInstruction.timing.event",  }, XPath = "f:MedicationRequest/f:dosageInstruction/f:timing/f:event" },
                new SearchParamDefinition() { Resource = "MedicationRequest", Name = "intended-dispenser", Description = "Returns prescriptions intended to be dispensed by this Organization", Type = SearchParamType.Reference, Path = new string[] { "MedicationRequest.dispenseRequest.performer",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:MedicationRequest/f:dispenseRequest/f:performer" },
                new SearchParamDefinition() { Resource = "MedicationRequest", Name = "intent", Description = "Returns prescriptions with different intents", Type = SearchParamType.Token, Path = new string[] { "MedicationRequest.intent",  }, XPath = "f:MedicationRequest/f:intent" },
                new SearchParamDefinition() { Resource = "MedicationRequest", Name = "priority", Description = "Returns prescriptions with different priorities", Type = SearchParamType.Token, Path = new string[] { "MedicationRequest.priority",  }, XPath = "f:MedicationRequest/f:priority" },
                new SearchParamDefinition() { Resource = "MedicationRequest", Name = "requester", Description = "Returns prescriptions prescribed by this prescriber", Type = SearchParamType.Reference, Path = new string[] { "MedicationRequest.requester.agent",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:MedicationRequest/f:requester/f:agent" },
                new SearchParamDefinition() { Resource = "MedicationRequest", Name = "subject", Description = "The identity of a patient to list orders  for", Type = SearchParamType.Reference, Path = new string[] { "MedicationRequest.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:MedicationRequest/f:subject" },
                new SearchParamDefinition() { Resource = "MedicationStatement", Name = "code", Description = "Multiple Resources: \r\n\r\n* [Medication](medication.html): Codes that identify this medication\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [MedicationDispense](medicationdispense.html): Return dispenses of this medicine code\r\n", Type = SearchParamType.Token, Path = new string[] { "Medication.code", "MedicationRequest.medicationCodeableConcept", "MedicationAdministration.medicationCodeableConcept", "MedicationStatement.medicationCodeableConcept", "MedicationDispense.medicationCodeableConcept",  }, XPath = "f:Medication/f:code | f:MedicationRequest/f:medicationCodeableConcept | f:MedicationAdministration/f:medicationCodeableConcept | f:MedicationStatement/f:medicationCodeableConcept | f:MedicationDispense/f:medicationCodeableConcept" },
                new SearchParamDefinition() { Resource = "MedicationStatement", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Return dispenses with this external identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "MedicationRequest.identifier", "MedicationAdministration.identifier", "MedicationStatement.identifier", "MedicationDispense.identifier",  }, XPath = "f:MedicationRequest/f:identifier | f:MedicationAdministration/f:identifier | f:MedicationStatement/f:identifier | f:MedicationDispense/f:identifier" },
                new SearchParamDefinition() { Resource = "MedicationStatement", Name = "medication", Description = "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication reference\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication resource\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication reference\r\n* [MedicationDispense](medicationdispense.html): Return dispenses of this medicine resource\r\n", Type = SearchParamType.Reference, Path = new string[] { "MedicationRequest.medicationReference", "MedicationAdministration.medicationReference", "MedicationStatement.medicationReference", "MedicationDispense.medicationReference",  }, Target = new ResourceType[] { ResourceType.Medication }, XPath = "f:MedicationRequest/f:medicationReference | f:MedicationAdministration/f:medicationReference | f:MedicationStatement/f:medicationReference | f:MedicationDispense/f:medicationReference" },
                new SearchParamDefinition() { Resource = "MedicationStatement", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n", Type = SearchParamType.Reference, Path = new string[] { "MedicationRequest.subject", "MedicationAdministration.subject", "MedicationStatement.subject", "MedicationDispense.subject",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:MedicationRequest/f:subject | f:MedicationAdministration/f:subject | f:MedicationStatement/f:subject | f:MedicationDispense/f:subject" },
                new SearchParamDefinition() { Resource = "MedicationStatement", Name = "status", Description = "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Status of the prescription\r\n* [MedicationAdministration](medicationadministration.html): MedicationAdministration event status (for example one of active/paused/completed/nullified)\r\n* [MedicationStatement](medicationstatement.html): Return statements that match the given status\r\n* [MedicationDispense](medicationdispense.html): Return dispenses with a specified dispense status\r\n", Type = SearchParamType.Token, Path = new string[] { "MedicationRequest.status", "MedicationAdministration.status", "MedicationStatement.status", "MedicationDispense.status",  }, XPath = "f:MedicationRequest/f:status | f:MedicationAdministration/f:status | f:MedicationStatement/f:status | f:MedicationDispense/f:status" },
                new SearchParamDefinition() { Resource = "MedicationStatement", Name = "category", Description = "Returns statements of this category of medicationstatement", Type = SearchParamType.Token, Path = new string[] { "MedicationStatement.category",  }, XPath = "f:MedicationStatement/f:category" },
                new SearchParamDefinition() { Resource = "MedicationStatement", Name = "context", Description = "Returns statements for a specific context (episode or episode of Care).", Type = SearchParamType.Reference, Path = new string[] { "MedicationStatement.context",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:MedicationStatement/f:context" },
                new SearchParamDefinition() { Resource = "MedicationStatement", Name = "effective", Description = "Date when patient was taking (or not taking) the medication", Type = SearchParamType.Date, Path = new string[] { "MedicationStatement.effectiveDateTime", "MedicationStatement.effectivePeriod",  }, XPath = "f:MedicationStatement/f:effectiveDateTime | f:MedicationStatement/f:effectivePeriod" },
                new SearchParamDefinition() { Resource = "MedicationStatement", Name = "part-of", Description = "Returns statements that are part of another event.", Type = SearchParamType.Reference, Path = new string[] { "MedicationStatement.partOf",  }, Target = new ResourceType[] { ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationStatement, ResourceType.Observation, ResourceType.Procedure }, XPath = "f:MedicationStatement/f:partOf" },
                new SearchParamDefinition() { Resource = "MedicationStatement", Name = "source", Description = "Who or where the information in the statement came from", Type = SearchParamType.Reference, Path = new string[] { "MedicationStatement.informationSource",  }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:MedicationStatement/f:informationSource" },
                new SearchParamDefinition() { Resource = "MedicationStatement", Name = "subject", Description = "The identity of a patient, animal or group to list statements for", Type = SearchParamType.Reference, Path = new string[] { "MedicationStatement.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:MedicationStatement/f:subject" },
                new SearchParamDefinition() { Resource = "MessageDefinition", Name = "category", Description = "The behavior associated with the message", Type = SearchParamType.Token, Path = new string[] { "MessageDefinition.category",  }, XPath = "f:MessageDefinition/f:category" },
                new SearchParamDefinition() { Resource = "MessageDefinition", Name = "date", Description = "The message definition publication date", Type = SearchParamType.Date, Path = new string[] { "MessageDefinition.date",  }, XPath = "f:MessageDefinition/f:date" },
                new SearchParamDefinition() { Resource = "MessageDefinition", Name = "description", Description = "The description of the message definition", Type = SearchParamType.String, Path = new string[] { "MessageDefinition.description",  }, XPath = "f:MessageDefinition/f:description" },
                new SearchParamDefinition() { Resource = "MessageDefinition", Name = "event", Description = "The event that triggers the message", Type = SearchParamType.Token, Path = new string[] { "MessageDefinition.event",  }, XPath = "f:MessageDefinition/f:event" },
                new SearchParamDefinition() { Resource = "MessageDefinition", Name = "focus", Description = "A resource that is a permitted focus of the message", Type = SearchParamType.Token, Path = new string[] { "MessageDefinition.focus.code",  }, XPath = "f:MessageDefinition/f:focus/f:code" },
                new SearchParamDefinition() { Resource = "MessageDefinition", Name = "identifier", Description = "External identifier for the message definition", Type = SearchParamType.Token, Path = new string[] { "MessageDefinition.identifier",  }, XPath = "f:MessageDefinition/f:identifier" },
                new SearchParamDefinition() { Resource = "MessageDefinition", Name = "jurisdiction", Description = "Intended jurisdiction for the message definition", Type = SearchParamType.Token, Path = new string[] { "MessageDefinition.jurisdiction",  }, XPath = "f:MessageDefinition/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "MessageDefinition", Name = "name", Description = "Computationally friendly name of the message definition", Type = SearchParamType.String, Path = new string[] { "MessageDefinition.name",  }, XPath = "f:MessageDefinition/f:name" },
                new SearchParamDefinition() { Resource = "MessageDefinition", Name = "publisher", Description = "Name of the publisher of the message definition", Type = SearchParamType.String, Path = new string[] { "MessageDefinition.publisher",  }, XPath = "f:MessageDefinition/f:publisher" },
                new SearchParamDefinition() { Resource = "MessageDefinition", Name = "status", Description = "The current status of the message definition", Type = SearchParamType.Token, Path = new string[] { "MessageDefinition.status",  }, XPath = "f:MessageDefinition/f:status" },
                new SearchParamDefinition() { Resource = "MessageDefinition", Name = "title", Description = "The human-friendly name of the message definition", Type = SearchParamType.String, Path = new string[] { "MessageDefinition.title",  }, XPath = "f:MessageDefinition/f:title" },
                new SearchParamDefinition() { Resource = "MessageDefinition", Name = "url", Description = "The uri that identifies the message definition", Type = SearchParamType.Uri, Path = new string[] { "MessageDefinition.url",  }, XPath = "f:MessageDefinition/f:url" },
                new SearchParamDefinition() { Resource = "MessageDefinition", Name = "version", Description = "The business version of the message definition", Type = SearchParamType.Token, Path = new string[] { "MessageDefinition.version",  }, XPath = "f:MessageDefinition/f:version" },
                new SearchParamDefinition() { Resource = "MessageHeader", Name = "author", Description = "The source of the decision", Type = SearchParamType.Reference, Path = new string[] { "MessageHeader.author",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:MessageHeader/f:author" },
                new SearchParamDefinition() { Resource = "MessageHeader", Name = "code", Description = "ok | transient-error | fatal-error", Type = SearchParamType.Token, Path = new string[] { "MessageHeader.response.code",  }, XPath = "f:MessageHeader/f:response/f:code" },
                new SearchParamDefinition() { Resource = "MessageHeader", Name = "destination", Description = "Name of system", Type = SearchParamType.String, Path = new string[] { "MessageHeader.destination.name",  }, XPath = "f:MessageHeader/f:destination/f:name" },
                new SearchParamDefinition() { Resource = "MessageHeader", Name = "destination-uri", Description = "Actual destination address or id", Type = SearchParamType.Uri, Path = new string[] { "MessageHeader.destination.endpoint",  }, XPath = "f:MessageHeader/f:destination/f:endpoint" },
                new SearchParamDefinition() { Resource = "MessageHeader", Name = "enterer", Description = "The source of the data entry", Type = SearchParamType.Reference, Path = new string[] { "MessageHeader.enterer",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:MessageHeader/f:enterer" },
                new SearchParamDefinition() { Resource = "MessageHeader", Name = "event", Description = "Code for the event this message represents", Type = SearchParamType.Token, Path = new string[] { "MessageHeader.event",  }, XPath = "f:MessageHeader/f:event" },
                new SearchParamDefinition() { Resource = "MessageHeader", Name = "focus", Description = "The actual content of the message", Type = SearchParamType.Reference, Path = new string[] { "MessageHeader.focus",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:MessageHeader/f:focus" },
                new SearchParamDefinition() { Resource = "MessageHeader", Name = "receiver", Description = "Intended \"real-world\" recipient for the data", Type = SearchParamType.Reference, Path = new string[] { "MessageHeader.receiver",  }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Practitioner }, XPath = "f:MessageHeader/f:receiver" },
                new SearchParamDefinition() { Resource = "MessageHeader", Name = "response-id", Description = "Id of original message", Type = SearchParamType.Token, Path = new string[] { "MessageHeader.response.identifier",  }, XPath = "f:MessageHeader/f:response/f:identifier" },
                new SearchParamDefinition() { Resource = "MessageHeader", Name = "responsible", Description = "Final responsibility for event", Type = SearchParamType.Reference, Path = new string[] { "MessageHeader.responsible",  }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Practitioner }, XPath = "f:MessageHeader/f:responsible" },
                new SearchParamDefinition() { Resource = "MessageHeader", Name = "sender", Description = "Real world sender of the message", Type = SearchParamType.Reference, Path = new string[] { "MessageHeader.sender",  }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Practitioner }, XPath = "f:MessageHeader/f:sender" },
                new SearchParamDefinition() { Resource = "MessageHeader", Name = "source", Description = "Name of system", Type = SearchParamType.String, Path = new string[] { "MessageHeader.source.name",  }, XPath = "f:MessageHeader/f:source/f:name" },
                new SearchParamDefinition() { Resource = "MessageHeader", Name = "source-uri", Description = "Actual message source address or id", Type = SearchParamType.Uri, Path = new string[] { "MessageHeader.source.endpoint",  }, XPath = "f:MessageHeader/f:source/f:endpoint" },
                new SearchParamDefinition() { Resource = "MessageHeader", Name = "target", Description = "Particular delivery destination within the destination", Type = SearchParamType.Reference, Path = new string[] { "MessageHeader.destination.target",  }, Target = new ResourceType[] { ResourceType.Device }, XPath = "f:MessageHeader/f:destination/f:target" },
                new SearchParamDefinition() { Resource = "MessageHeader", Name = "timestamp", Description = "Time that the message was sent", Type = SearchParamType.Date, Path = new string[] { "MessageHeader.timestamp",  }, XPath = "f:MessageHeader/f:timestamp" },
                new SearchParamDefinition() { Resource = "NamingSystem", Name = "contact", Description = "Name of an individual to contact", Type = SearchParamType.String, Path = new string[] { "NamingSystem.contact.name",  }, XPath = "f:NamingSystem/f:contact/f:name" },
                new SearchParamDefinition() { Resource = "NamingSystem", Name = "date", Description = "The naming system publication date", Type = SearchParamType.Date, Path = new string[] { "NamingSystem.date",  }, XPath = "f:NamingSystem/f:date" },
                new SearchParamDefinition() { Resource = "NamingSystem", Name = "description", Description = "The description of the naming system", Type = SearchParamType.String, Path = new string[] { "NamingSystem.description",  }, XPath = "f:NamingSystem/f:description" },
                new SearchParamDefinition() { Resource = "NamingSystem", Name = "id-type", Description = "oid | uuid | uri | other", Type = SearchParamType.Token, Path = new string[] { "NamingSystem.uniqueId.type",  }, XPath = "f:NamingSystem/f:uniqueId/f:type" },
                new SearchParamDefinition() { Resource = "NamingSystem", Name = "jurisdiction", Description = "Intended jurisdiction for the naming system", Type = SearchParamType.Token, Path = new string[] { "NamingSystem.jurisdiction",  }, XPath = "f:NamingSystem/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "NamingSystem", Name = "kind", Description = "codesystem | identifier | root", Type = SearchParamType.Token, Path = new string[] { "NamingSystem.kind",  }, XPath = "f:NamingSystem/f:kind" },
                new SearchParamDefinition() { Resource = "NamingSystem", Name = "name", Description = "Computationally friendly name of the naming system", Type = SearchParamType.String, Path = new string[] { "NamingSystem.name",  }, XPath = "f:NamingSystem/f:name" },
                new SearchParamDefinition() { Resource = "NamingSystem", Name = "period", Description = "When is identifier valid?", Type = SearchParamType.Date, Path = new string[] { "NamingSystem.uniqueId.period",  }, XPath = "f:NamingSystem/f:uniqueId/f:period" },
                new SearchParamDefinition() { Resource = "NamingSystem", Name = "publisher", Description = "Name of the publisher of the naming system", Type = SearchParamType.String, Path = new string[] { "NamingSystem.publisher",  }, XPath = "f:NamingSystem/f:publisher" },
                new SearchParamDefinition() { Resource = "NamingSystem", Name = "replaced-by", Description = "Use this instead", Type = SearchParamType.Reference, Path = new string[] { "NamingSystem.replacedBy",  }, Target = new ResourceType[] { ResourceType.NamingSystem }, XPath = "f:NamingSystem/f:replacedBy" },
                new SearchParamDefinition() { Resource = "NamingSystem", Name = "responsible", Description = "Who maintains system namespace?", Type = SearchParamType.String, Path = new string[] { "NamingSystem.responsible",  }, XPath = "f:NamingSystem/f:responsible" },
                new SearchParamDefinition() { Resource = "NamingSystem", Name = "status", Description = "The current status of the naming system", Type = SearchParamType.Token, Path = new string[] { "NamingSystem.status",  }, XPath = "f:NamingSystem/f:status" },
                new SearchParamDefinition() { Resource = "NamingSystem", Name = "telecom", Description = "Contact details for individual or organization", Type = SearchParamType.Token, Path = new string[] { "NamingSystem.contact.telecom",  }, XPath = "f:NamingSystem/f:contact/f:telecom" },
                new SearchParamDefinition() { Resource = "NamingSystem", Name = "type", Description = "e.g. driver,  provider,  patient, bank etc.", Type = SearchParamType.Token, Path = new string[] { "NamingSystem.type",  }, XPath = "f:NamingSystem/f:type" },
                new SearchParamDefinition() { Resource = "NamingSystem", Name = "value", Description = "The unique identifier", Type = SearchParamType.String, Path = new string[] { "NamingSystem.uniqueId.value",  }, XPath = "f:NamingSystem/f:uniqueId/f:value" },
                new SearchParamDefinition() { Resource = "NutritionOrder", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "NutritionOrder", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "NutritionOrder", Name = "encounter", Description = "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition\r\n", Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.context.encounter", "RiskAssessment.context", "DeviceRequest.context", "Procedure.context", "List.encounter", "VisionPrescription.encounter", "ProcedureRequest.context", "Flag.encounter", "Observation.context", "DiagnosticReport.context", "NutritionOrder.encounter", "Composition.encounter",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:DocumentReference/f:context/f:encounter | f:RiskAssessment/f:context | f:DeviceRequest/f:context | f:Procedure/f:context | f:List/f:encounter | f:VisionPrescription/f:encounter | f:ProcedureRequest/f:context | f:Flag/f:encounter | f:Observation/f:context | f:DiagnosticReport/f:context | f:NutritionOrder/f:encounter | f:Composition/f:encounter" },
                new SearchParamDefinition() { Resource = "NutritionOrder", Name = "additive", Description = "Type of module component to add to the feeding", Type = SearchParamType.Token, Path = new string[] { "NutritionOrder.enteralFormula.additiveType",  }, XPath = "f:NutritionOrder/f:enteralFormula/f:additiveType" },
                new SearchParamDefinition() { Resource = "NutritionOrder", Name = "datetime", Description = "Return nutrition orders requested on this date", Type = SearchParamType.Date, Path = new string[] { "NutritionOrder.dateTime",  }, XPath = "f:NutritionOrder/f:dateTime" },
                new SearchParamDefinition() { Resource = "NutritionOrder", Name = "formula", Description = "Type of enteral or infant formula", Type = SearchParamType.Token, Path = new string[] { "NutritionOrder.enteralFormula.baseFormulaType",  }, XPath = "f:NutritionOrder/f:enteralFormula/f:baseFormulaType" },
                new SearchParamDefinition() { Resource = "NutritionOrder", Name = "oraldiet", Description = "Type of diet that can be consumed orally (i.e., take via the mouth).", Type = SearchParamType.Token, Path = new string[] { "NutritionOrder.oralDiet.type",  }, XPath = "f:NutritionOrder/f:oralDiet/f:type" },
                new SearchParamDefinition() { Resource = "NutritionOrder", Name = "provider", Description = "The identify of the provider who placed the nutrition order", Type = SearchParamType.Reference, Path = new string[] { "NutritionOrder.orderer",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:NutritionOrder/f:orderer" },
                new SearchParamDefinition() { Resource = "NutritionOrder", Name = "status", Description = "Status of the nutrition order.", Type = SearchParamType.Token, Path = new string[] { "NutritionOrder.status",  }, XPath = "f:NutritionOrder/f:status" },
                new SearchParamDefinition() { Resource = "NutritionOrder", Name = "supplement", Description = "Type of supplement product requested", Type = SearchParamType.Token, Path = new string[] { "NutritionOrder.supplement.type",  }, XPath = "f:NutritionOrder/f:supplement/f:type" },
                new SearchParamDefinition() { Resource = "Observation", Name = "code", Description = "Multiple Resources: \r\n\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [List](list.html): What the purpose of this list is\r\n* [ProcedureRequest](procedurerequest.html): What is being requested/ordered\r\n* [Observation](observation.html): The code of the observation type\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report as a whole, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [Condition](condition.html): Code for the condition\r\n", Type = SearchParamType.Token, Path = new string[] { "FamilyMemberHistory.condition.code", "DeviceRequest.codeCodeableConcept", "AllergyIntolerance.code", "AllergyIntolerance.reaction.substance", "Procedure.code", "List.code", "ProcedureRequest.code", "Observation.code", "DiagnosticReport.code", "Condition.code",  }, XPath = "f:FamilyMemberHistory/f:condition/f:code | f:DeviceRequest/f:codeCodeableConcept | f:AllergyIntolerance/f:code | f:AllergyIntolerance/f:reaction/f:substance | f:Procedure/f:code | f:List/f:code | f:ProcedureRequest/f:code | f:Observation/f:code | f:DiagnosticReport/f:code | f:Condition/f:code" },
                new SearchParamDefinition() { Resource = "Observation", Name = "date", Description = "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n", Type = SearchParamType.Date, Path = new string[] { "Consent.dateTime", "SupplyRequest.authoredOn", "RiskAssessment.occurrenceDateTime", "CareTeam.period", "FamilyMemberHistory.date", "Encounter.period", "AllergyIntolerance.assertedDate", "CarePlan.period", "EpisodeOfCare.period", "Procedure.performedDateTime", "Procedure.performedPeriod", "List.date", "Immunization.date", "Flag.period", "Observation.effectiveDateTime", "Observation.effectivePeriod", "DiagnosticReport.effectiveDateTime", "DiagnosticReport.effectivePeriod", "Composition.date", "DetectedIssue.date", "ClinicalImpression.date",  }, XPath = "f:Consent/f:dateTime | f:SupplyRequest/f:authoredOn | f:RiskAssessment/f:occurrenceDateTime | f:CareTeam/f:period | f:FamilyMemberHistory/f:date | f:Encounter/f:period | f:AllergyIntolerance/f:assertedDate | f:CarePlan/f:period | f:EpisodeOfCare/f:period | f:Procedure/f:performedDateTime | f:Procedure/f:performedPeriod | f:List/f:date | f:Immunization/f:date | f:Flag/f:period | f:Observation/f:effectiveDateTime | f:Observation/f:effectivePeriod | f:DiagnosticReport/f:effectiveDateTime | f:DiagnosticReport/f:effectivePeriod | f:Composition/f:date | f:DetectedIssue/f:date | f:ClinicalImpression/f:date" },
                new SearchParamDefinition() { Resource = "Observation", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "Observation", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "Observation", Name = "encounter", Description = "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition\r\n", Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.context.encounter", "RiskAssessment.context", "DeviceRequest.context", "Procedure.context", "List.encounter", "VisionPrescription.encounter", "ProcedureRequest.context", "Flag.encounter", "Observation.context", "DiagnosticReport.context", "NutritionOrder.encounter", "Composition.encounter",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:DocumentReference/f:context/f:encounter | f:RiskAssessment/f:context | f:DeviceRequest/f:context | f:Procedure/f:context | f:List/f:encounter | f:VisionPrescription/f:encounter | f:ProcedureRequest/f:context | f:Flag/f:encounter | f:Observation/f:context | f:DiagnosticReport/f:context | f:NutritionOrder/f:encounter | f:Composition/f:encounter" },
                new SearchParamDefinition() { Resource = "Observation", Name = "based-on", Description = "Reference to the test or procedure request.", Type = SearchParamType.Reference, Path = new string[] { "Observation.basedOn",  }, Target = new ResourceType[] { ResourceType.CarePlan, ResourceType.DeviceRequest, ResourceType.ImmunizationRecommendation, ResourceType.MedicationRequest, ResourceType.NutritionOrder, ResourceType.ProcedureRequest, ResourceType.ReferralRequest }, XPath = "f:Observation/f:basedOn" },
                new SearchParamDefinition() { Resource = "Observation", Name = "category", Description = "The classification of the type of observation", Type = SearchParamType.Token, Path = new string[] { "Observation.category",  }, XPath = "f:Observation/f:category" },
                new SearchParamDefinition() { Resource = "Observation", Name = "code-value-concept", Description = "Code and coded value parameter pair", Type = SearchParamType.Composite, Path = new string[] {  } },
                new SearchParamDefinition() { Resource = "Observation", Name = "code-value-date", Description = "Code and date/time value parameter pair", Type = SearchParamType.Composite, Path = new string[] {  } },
                new SearchParamDefinition() { Resource = "Observation", Name = "code-value-quantity", Description = "Code and quantity value parameter pair", Type = SearchParamType.Composite, Path = new string[] {  } },
                new SearchParamDefinition() { Resource = "Observation", Name = "code-value-string", Description = "Code and string value parameter pair", Type = SearchParamType.Composite, Path = new string[] {  } },
                new SearchParamDefinition() { Resource = "Observation", Name = "combo-code", Description = "The code of the observation type or component type", Type = SearchParamType.Token, Path = new string[] { "Observation.code", "Observation.component.code",  }, XPath = "f:Observation/f:code | f:Observation/f:component/f:code" },
                new SearchParamDefinition() { Resource = "Observation", Name = "combo-code-value-concept", Description = "Code and coded value parameter pair, including in components", Type = SearchParamType.Composite, Path = new string[] {  } },
                new SearchParamDefinition() { Resource = "Observation", Name = "combo-code-value-quantity", Description = "Code and quantity value parameter pair, including in components", Type = SearchParamType.Composite, Path = new string[] {  } },
                new SearchParamDefinition() { Resource = "Observation", Name = "combo-data-absent-reason", Description = "The reason why the expected value in the element Observation.value[x] or Observation.component.value[x] is missing.", Type = SearchParamType.Token, Path = new string[] { "Observation.dataAbsentReason", "Observation.component.dataAbsentReason",  }, XPath = "f:Observation/f:dataAbsentReason | f:Observation/f:component/f:dataAbsentReason" },
                new SearchParamDefinition() { Resource = "Observation", Name = "combo-value-concept", Description = "The value or component value of the observation, if the value is a CodeableConcept", Type = SearchParamType.Token, Path = new string[] { "Observation.valueCodeableConcept", "Observation.component.valueCodeableConcept",  }, XPath = "f:Observation/f:valueCodeableConcept | f:Observation/f:component/f:valueCodeableConcept" },
                new SearchParamDefinition() { Resource = "Observation", Name = "combo-value-quantity", Description = "The value or component value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)", Type = SearchParamType.Quantity, Path = new string[] { "Observation.valueQuantity", "Observation.component.valueQuantity",  }, XPath = "f:Observation/f:valueQuantity | f:Observation/f:component/f:valueQuantity" },
                new SearchParamDefinition() { Resource = "Observation", Name = "component-code", Description = "The component code of the observation type", Type = SearchParamType.Token, Path = new string[] { "Observation.component.code",  }, XPath = "f:Observation/f:component/f:code" },
                new SearchParamDefinition() { Resource = "Observation", Name = "component-code-value-concept", Description = "Component code and component coded value parameter pair", Type = SearchParamType.Composite, Path = new string[] {  } },
                new SearchParamDefinition() { Resource = "Observation", Name = "component-code-value-quantity", Description = "Component code and component quantity value parameter pair", Type = SearchParamType.Composite, Path = new string[] {  } },
                new SearchParamDefinition() { Resource = "Observation", Name = "component-data-absent-reason", Description = "The reason why the expected value in the element Observation.component.value[x] is missing.", Type = SearchParamType.Token, Path = new string[] { "Observation.component.dataAbsentReason",  }, XPath = "f:Observation/f:component/f:dataAbsentReason" },
                new SearchParamDefinition() { Resource = "Observation", Name = "component-value-concept", Description = "The value of the component observation, if the value is a CodeableConcept", Type = SearchParamType.Token, Path = new string[] { "Observation.component.valueCodeableConcept",  }, XPath = "f:Observation/f:component/f:valueCodeableConcept" },
                new SearchParamDefinition() { Resource = "Observation", Name = "component-value-quantity", Description = "The value of the component observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)", Type = SearchParamType.Quantity, Path = new string[] { "Observation.component.valueQuantity",  }, XPath = "f:Observation/f:component/f:valueQuantity" },
                new SearchParamDefinition() { Resource = "Observation", Name = "context", Description = "Healthcare event  (Episode-of-care or Encounter) related to the observation", Type = SearchParamType.Reference, Path = new string[] { "Observation.context",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:Observation/f:context" },
                new SearchParamDefinition() { Resource = "Observation", Name = "data-absent-reason", Description = "The reason why the expected value in the element Observation.value[x] is missing.", Type = SearchParamType.Token, Path = new string[] { "Observation.dataAbsentReason",  }, XPath = "f:Observation/f:dataAbsentReason" },
                new SearchParamDefinition() { Resource = "Observation", Name = "device", Description = "The Device that generated the observation data.", Type = SearchParamType.Reference, Path = new string[] { "Observation.device",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.DeviceMetric }, XPath = "f:Observation/f:device" },
                new SearchParamDefinition() { Resource = "Observation", Name = "method", Description = "The method used for the observation", Type = SearchParamType.Token, Path = new string[] { "Observation.method",  }, XPath = "f:Observation/f:method" },
                new SearchParamDefinition() { Resource = "Observation", Name = "performer", Description = "Who performed the observation", Type = SearchParamType.Reference, Path = new string[] { "Observation.performer",  }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:Observation/f:performer" },
                new SearchParamDefinition() { Resource = "Observation", Name = "related", Description = "Related Observations - search on related-type and related-target together", Type = SearchParamType.Composite, Path = new string[] {  } },
                new SearchParamDefinition() { Resource = "Observation", Name = "related-target", Description = "Resource that is related to this one", Type = SearchParamType.Reference, Path = new string[] { "Observation.related.target",  }, Target = new ResourceType[] { ResourceType.Observation, ResourceType.QuestionnaireResponse, ResourceType.Sequence }, XPath = "f:Observation/f:related/f:target" },
                new SearchParamDefinition() { Resource = "Observation", Name = "related-type", Description = "has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by", Type = SearchParamType.Token, Path = new string[] { "Observation.related.type",  }, XPath = "f:Observation/f:related/f:type" },
                new SearchParamDefinition() { Resource = "Observation", Name = "specimen", Description = "Specimen used for this observation", Type = SearchParamType.Reference, Path = new string[] { "Observation.specimen",  }, Target = new ResourceType[] { ResourceType.Specimen }, XPath = "f:Observation/f:specimen" },
                new SearchParamDefinition() { Resource = "Observation", Name = "status", Description = "The status of the observation", Type = SearchParamType.Token, Path = new string[] { "Observation.status",  }, XPath = "f:Observation/f:status" },
                new SearchParamDefinition() { Resource = "Observation", Name = "subject", Description = "The subject that the observation is about", Type = SearchParamType.Reference, Path = new string[] { "Observation.subject",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Location, ResourceType.Patient }, XPath = "f:Observation/f:subject" },
                new SearchParamDefinition() { Resource = "Observation", Name = "value-concept", Description = "The value of the observation, if the value is a CodeableConcept", Type = SearchParamType.Token, Path = new string[] { "Observation.valueCodeableConcept",  }, XPath = "f:Observation/f:valueCodeableConcept" },
                new SearchParamDefinition() { Resource = "Observation", Name = "value-date", Description = "The value of the observation, if the value is a date or period of time", Type = SearchParamType.Date, Path = new string[] { "Observation.valueDateTime", "Observation.valuePeriod",  }, XPath = "f:Observation/f:valueDateTime | f:Observation/f:valuePeriod" },
                new SearchParamDefinition() { Resource = "Observation", Name = "value-quantity", Description = "The value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)", Type = SearchParamType.Quantity, Path = new string[] { "Observation.valueQuantity",  }, XPath = "f:Observation/f:valueQuantity" },
                new SearchParamDefinition() { Resource = "Observation", Name = "value-string", Description = "The value of the observation, if the value is a string, and also searches in CodeableConcept.text", Type = SearchParamType.String, Path = new string[] { "Observation.valueString",  }, XPath = "f:Observation/f:valueString" },
                new SearchParamDefinition() { Resource = "OperationDefinition", Name = "base", Description = "Marks this as a profile of the base", Type = SearchParamType.Reference, Path = new string[] { "OperationDefinition.base",  }, Target = new ResourceType[] { ResourceType.OperationDefinition }, XPath = "f:OperationDefinition/f:base" },
                new SearchParamDefinition() { Resource = "OperationDefinition", Name = "code", Description = "Name used to invoke the operation", Type = SearchParamType.Token, Path = new string[] { "OperationDefinition.code",  }, XPath = "f:OperationDefinition/f:code" },
                new SearchParamDefinition() { Resource = "OperationDefinition", Name = "date", Description = "The operation definition publication date", Type = SearchParamType.Date, Path = new string[] { "OperationDefinition.date",  }, XPath = "f:OperationDefinition/f:date" },
                new SearchParamDefinition() { Resource = "OperationDefinition", Name = "description", Description = "The description of the operation definition", Type = SearchParamType.String, Path = new string[] { "OperationDefinition.description",  }, XPath = "f:OperationDefinition/f:description" },
                new SearchParamDefinition() { Resource = "OperationDefinition", Name = "instance", Description = "Invoke on an instance?", Type = SearchParamType.Token, Path = new string[] { "OperationDefinition.instance",  }, XPath = "f:OperationDefinition/f:instance" },
                new SearchParamDefinition() { Resource = "OperationDefinition", Name = "jurisdiction", Description = "Intended jurisdiction for the operation definition", Type = SearchParamType.Token, Path = new string[] { "OperationDefinition.jurisdiction",  }, XPath = "f:OperationDefinition/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "OperationDefinition", Name = "kind", Description = "operation | query", Type = SearchParamType.Token, Path = new string[] { "OperationDefinition.kind",  }, XPath = "f:OperationDefinition/f:kind" },
                new SearchParamDefinition() { Resource = "OperationDefinition", Name = "name", Description = "Computationally friendly name of the operation definition", Type = SearchParamType.String, Path = new string[] { "OperationDefinition.name",  }, XPath = "f:OperationDefinition/f:name" },
                new SearchParamDefinition() { Resource = "OperationDefinition", Name = "param-profile", Description = "Profile on the type", Type = SearchParamType.Reference, Path = new string[] { "OperationDefinition.parameter.profile",  }, Target = new ResourceType[] { ResourceType.StructureDefinition }, XPath = "f:OperationDefinition/f:parameter/f:profile" },
                new SearchParamDefinition() { Resource = "OperationDefinition", Name = "publisher", Description = "Name of the publisher of the operation definition", Type = SearchParamType.String, Path = new string[] { "OperationDefinition.publisher",  }, XPath = "f:OperationDefinition/f:publisher" },
                new SearchParamDefinition() { Resource = "OperationDefinition", Name = "status", Description = "The current status of the operation definition", Type = SearchParamType.Token, Path = new string[] { "OperationDefinition.status",  }, XPath = "f:OperationDefinition/f:status" },
                new SearchParamDefinition() { Resource = "OperationDefinition", Name = "system", Description = "Invoke at the system level?", Type = SearchParamType.Token, Path = new string[] { "OperationDefinition.system",  }, XPath = "f:OperationDefinition/f:system" },
                new SearchParamDefinition() { Resource = "OperationDefinition", Name = "type", Description = "Invole at the type level?", Type = SearchParamType.Token, Path = new string[] { "OperationDefinition.type",  }, XPath = "f:OperationDefinition/f:type" },
                new SearchParamDefinition() { Resource = "OperationDefinition", Name = "url", Description = "The uri that identifies the operation definition", Type = SearchParamType.Uri, Path = new string[] { "OperationDefinition.url",  }, XPath = "f:OperationDefinition/f:url" },
                new SearchParamDefinition() { Resource = "OperationDefinition", Name = "version", Description = "The business version of the operation definition", Type = SearchParamType.Token, Path = new string[] { "OperationDefinition.version",  }, XPath = "f:OperationDefinition/f:version" },
                new SearchParamDefinition() { Resource = "Organization", Name = "active", Description = "A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text", Type = SearchParamType.Token, Path = new string[] { "Organization.active",  }, XPath = "f:Organization/f:active" },
                new SearchParamDefinition() { Resource = "Organization", Name = "address", Description = "A (part of the) address of the organization", Type = SearchParamType.String, Path = new string[] { "Organization.address",  }, XPath = "f:Organization/f:address" },
                new SearchParamDefinition() { Resource = "Organization", Name = "address-city", Description = "A city specified in an address", Type = SearchParamType.String, Path = new string[] { "Organization.address.city",  }, XPath = "f:Organization/f:address/f:city" },
                new SearchParamDefinition() { Resource = "Organization", Name = "address-country", Description = "A country specified in an address", Type = SearchParamType.String, Path = new string[] { "Organization.address.country",  }, XPath = "f:Organization/f:address/f:country" },
                new SearchParamDefinition() { Resource = "Organization", Name = "address-postalcode", Description = "A postal code specified in an address", Type = SearchParamType.String, Path = new string[] { "Organization.address.postalCode",  }, XPath = "f:Organization/f:address/f:postalCode" },
                new SearchParamDefinition() { Resource = "Organization", Name = "address-state", Description = "A state specified in an address", Type = SearchParamType.String, Path = new string[] { "Organization.address.state",  }, XPath = "f:Organization/f:address/f:state" },
                new SearchParamDefinition() { Resource = "Organization", Name = "address-use", Description = "A use code specified in an address", Type = SearchParamType.Token, Path = new string[] { "Organization.address.use",  }, XPath = "f:Organization/f:address/f:use" },
                new SearchParamDefinition() { Resource = "Organization", Name = "endpoint", Description = "Technical endpoints providing access to services operated for the organization", Type = SearchParamType.Reference, Path = new string[] { "Organization.endpoint",  }, Target = new ResourceType[] { ResourceType.Endpoint }, XPath = "f:Organization/f:endpoint" },
                new SearchParamDefinition() { Resource = "Organization", Name = "identifier", Description = "Any identifier for the organization (not the accreditation issuer's identifier)", Type = SearchParamType.Token, Path = new string[] { "Organization.identifier",  }, XPath = "f:Organization/f:identifier" },
                new SearchParamDefinition() { Resource = "Organization", Name = "name", Description = "A portion of the organization's name or alias", Type = SearchParamType.String, Path = new string[] { "Organization.name", "Organization.alias",  }, XPath = "f:Organization/f:name | f:Organization/f:alias" },
                new SearchParamDefinition() { Resource = "Organization", Name = "partof", Description = "An organization of which this organization forms a part", Type = SearchParamType.Reference, Path = new string[] { "Organization.partOf",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:Organization/f:partOf" },
                new SearchParamDefinition() { Resource = "Organization", Name = "phonetic", Description = "A portion of the organization's name using some kind of phonetic matching algorithm", Type = SearchParamType.String, Path = new string[] { "Organization.name",  }, XPath = "f:Organization/f:name" },
                new SearchParamDefinition() { Resource = "Organization", Name = "type", Description = "A code for the type of organization", Type = SearchParamType.Token, Path = new string[] { "Organization.type",  }, XPath = "f:Organization/f:type" },
                new SearchParamDefinition() { Resource = "Patient", Name = "active", Description = "Whether the patient record is active", Type = SearchParamType.Token, Path = new string[] { "Patient.active",  }, XPath = "f:Patient/f:active" },
                new SearchParamDefinition() { Resource = "Patient", Name = "address", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address", "Practitioner.address", "Person.address", "Patient.address",  }, XPath = "f:RelatedPerson/f:address | f:Practitioner/f:address | f:Person/f:address | f:Patient/f:address" },
                new SearchParamDefinition() { Resource = "Patient", Name = "address-city", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A city specified in an address\r\n* [Practitioner](practitioner.html): A city specified in an address\r\n* [Person](person.html): A city specified in an address\r\n* [Patient](patient.html): A city specified in an address\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address.city", "Practitioner.address.city", "Person.address.city", "Patient.address.city",  }, XPath = "f:RelatedPerson/f:address/f:city | f:Practitioner/f:address/f:city | f:Person/f:address/f:city | f:Patient/f:address/f:city" },
                new SearchParamDefinition() { Resource = "Patient", Name = "address-country", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A country specified in an address\r\n* [Practitioner](practitioner.html): A country specified in an address\r\n* [Person](person.html): A country specified in an address\r\n* [Patient](patient.html): A country specified in an address\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address.country", "Practitioner.address.country", "Person.address.country", "Patient.address.country",  }, XPath = "f:RelatedPerson/f:address/f:country | f:Practitioner/f:address/f:country | f:Person/f:address/f:country | f:Patient/f:address/f:country" },
                new SearchParamDefinition() { Resource = "Patient", Name = "address-postalcode", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A postal code specified in an address\r\n* [Practitioner](practitioner.html): A postalCode specified in an address\r\n* [Person](person.html): A postal code specified in an address\r\n* [Patient](patient.html): A postalCode specified in an address\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address.postalCode", "Practitioner.address.postalCode", "Person.address.postalCode", "Patient.address.postalCode",  }, XPath = "f:RelatedPerson/f:address/f:postalCode | f:Practitioner/f:address/f:postalCode | f:Person/f:address/f:postalCode | f:Patient/f:address/f:postalCode" },
                new SearchParamDefinition() { Resource = "Patient", Name = "address-state", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A state specified in an address\r\n* [Practitioner](practitioner.html): A state specified in an address\r\n* [Person](person.html): A state specified in an address\r\n* [Patient](patient.html): A state specified in an address\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address.state", "Practitioner.address.state", "Person.address.state", "Patient.address.state",  }, XPath = "f:RelatedPerson/f:address/f:state | f:Practitioner/f:address/f:state | f:Person/f:address/f:state | f:Patient/f:address/f:state" },
                new SearchParamDefinition() { Resource = "Patient", Name = "address-use", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A use code specified in an address\r\n* [Practitioner](practitioner.html): A use code specified in an address\r\n* [Person](person.html): A use code specified in an address\r\n* [Patient](patient.html): A use code specified in an address\r\n", Type = SearchParamType.Token, Path = new string[] { "RelatedPerson.address.use", "Practitioner.address.use", "Person.address.use", "Patient.address.use",  }, XPath = "f:RelatedPerson/f:address/f:use | f:Practitioner/f:address/f:use | f:Person/f:address/f:use | f:Patient/f:address/f:use" },
                new SearchParamDefinition() { Resource = "Patient", Name = "animal-breed", Description = "The breed for animal patients", Type = SearchParamType.Token, Path = new string[] { "Patient.animal.breed",  }, XPath = "f:Patient/f:animal/f:breed" },
                new SearchParamDefinition() { Resource = "Patient", Name = "animal-species", Description = "The species for animal patients", Type = SearchParamType.Token, Path = new string[] { "Patient.animal.species",  }, XPath = "f:Patient/f:animal/f:species" },
                new SearchParamDefinition() { Resource = "Patient", Name = "birthdate", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): The Related Person's date of birth\r\n* [Person](person.html): The person's date of birth\r\n* [Patient](patient.html): The patient's date of birth\r\n", Type = SearchParamType.Date, Path = new string[] { "RelatedPerson.birthDate", "Person.birthDate", "Patient.birthDate",  }, XPath = "f:RelatedPerson/f:birthDate | f:Person/f:birthDate | f:Patient/f:birthDate" },
                new SearchParamDefinition() { Resource = "Patient", Name = "death-date", Description = "The date of death has been provided and satisfies this search value", Type = SearchParamType.Date, Path = new string[] { "Patient.deceasedDateTime",  }, XPath = "f:Patient/f:deceasedDateTime" },
                new SearchParamDefinition() { Resource = "Patient", Name = "deceased", Description = "This patient has been marked as deceased, or as a death date entered", Type = SearchParamType.Token, Path = new string[] { "Patient.deceasedBoolean", "Patient.deceasedDateTime",  }, XPath = "f:Patient/f:deceasedBoolean | f:Patient/f:deceasedDateTime" },
                new SearchParamDefinition() { Resource = "Patient", Name = "email", Description = "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): A value in an email contact\r\n* [RelatedPerson](relatedperson.html): A value in an email contact\r\n* [Practitioner](practitioner.html): A value in an email contact\r\n* [Person](person.html): A value in an email contact\r\n* [Patient](patient.html): A value in an email contact\r\n", Type = SearchParamType.Token, Path = new string[] { "PractitionerRole.telecom[system.@value='email']", "RelatedPerson.telecom[system.@value='email']", "Practitioner.telecom[system.@value='email']", "Person.telecom[system.@value='email']", "Patient.telecom[system.@value='email']",  }, XPath = "f:PractitionerRole/f:telecom[system/@value='email'] | f:RelatedPerson/f:telecom[system/@value='email'] | f:Practitioner/f:telecom[system/@value='email'] | f:Person/f:telecom[system/@value='email'] | f:Patient/f:telecom[system/@value='email']" },
                new SearchParamDefinition() { Resource = "Patient", Name = "family", Description = "Multiple Resources: \r\n\r\n* [Practitioner](practitioner.html): A portion of the family name\r\n* [Patient](patient.html): A portion of the family name of the patient\r\n", Type = SearchParamType.String, Path = new string[] { "Practitioner.name.family", "Patient.name.family",  }, XPath = "f:Practitioner/f:name/f:family | f:Patient/f:name/f:family" },
                new SearchParamDefinition() { Resource = "Patient", Name = "gender", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): Gender of the related person\r\n* [Practitioner](practitioner.html): Gender of the practitioner\r\n* [Person](person.html): The gender of the person\r\n* [Patient](patient.html): Gender of the patient\r\n", Type = SearchParamType.Token, Path = new string[] { "RelatedPerson.gender", "Practitioner.gender", "Person.gender", "Patient.gender",  }, XPath = "f:RelatedPerson/f:gender | f:Practitioner/f:gender | f:Person/f:gender | f:Patient/f:gender" },
                new SearchParamDefinition() { Resource = "Patient", Name = "general-practitioner", Description = "Patient's nominated general practitioner, not the organization that manages the record", Type = SearchParamType.Reference, Path = new string[] { "Patient.generalPractitioner",  }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Practitioner }, XPath = "f:Patient/f:generalPractitioner" },
                new SearchParamDefinition() { Resource = "Patient", Name = "given", Description = "Multiple Resources: \r\n\r\n* [Practitioner](practitioner.html): A portion of the given name\r\n* [Patient](patient.html): A portion of the given name of the patient\r\n", Type = SearchParamType.String, Path = new string[] { "Practitioner.name.given", "Patient.name.given",  }, XPath = "f:Practitioner/f:name/f:given | f:Patient/f:name/f:given" },
                new SearchParamDefinition() { Resource = "Patient", Name = "identifier", Description = "A patient identifier", Type = SearchParamType.Token, Path = new string[] { "Patient.identifier",  }, XPath = "f:Patient/f:identifier" },
                new SearchParamDefinition() { Resource = "Patient", Name = "language", Description = "Language code (irrespective of use value)", Type = SearchParamType.Token, Path = new string[] { "Patient.communication.language",  }, XPath = "f:Patient/f:communication/f:language" },
                new SearchParamDefinition() { Resource = "Patient", Name = "link", Description = "All patients linked to the given patient", Type = SearchParamType.Reference, Path = new string[] { "Patient.link.other",  }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.RelatedPerson }, XPath = "f:Patient/f:link/f:other" },
                new SearchParamDefinition() { Resource = "Patient", Name = "name", Description = "A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text", Type = SearchParamType.String, Path = new string[] { "Patient.name",  }, XPath = "f:Patient/f:name" },
                new SearchParamDefinition() { Resource = "Patient", Name = "organization", Description = "The organization at which this person is a patient", Type = SearchParamType.Reference, Path = new string[] { "Patient.managingOrganization",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:Patient/f:managingOrganization" },
                new SearchParamDefinition() { Resource = "Patient", Name = "phone", Description = "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): A value in a phone contact\r\n* [RelatedPerson](relatedperson.html): A value in a phone contact\r\n* [Practitioner](practitioner.html): A value in a phone contact\r\n* [Person](person.html): A value in a phone contact\r\n* [Patient](patient.html): A value in a phone contact\r\n", Type = SearchParamType.Token, Path = new string[] { "PractitionerRole.telecom[system.@value='phone']", "RelatedPerson.telecom[system.@value='phone']", "Practitioner.telecom[system.@value='phone']", "Person.telecom[system.@value='phone']", "Patient.telecom[system.@value='phone']",  }, XPath = "f:PractitionerRole/f:telecom[system/@value='phone'] | f:RelatedPerson/f:telecom[system/@value='phone'] | f:Practitioner/f:telecom[system/@value='phone'] | f:Person/f:telecom[system/@value='phone'] | f:Patient/f:telecom[system/@value='phone']" },
                new SearchParamDefinition() { Resource = "Patient", Name = "phonetic", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm\r\n* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm\r\n* [Person](person.html): A portion of name using some kind of phonetic matching algorithm\r\n* [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.name", "Practitioner.name", "Person.name", "Patient.name",  }, XPath = "f:RelatedPerson/f:name | f:Practitioner/f:name | f:Person/f:name | f:Patient/f:name" },
                new SearchParamDefinition() { Resource = "Patient", Name = "telecom", Description = "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): The value in any kind of contact\r\n* [RelatedPerson](relatedperson.html): The value in any kind of contact\r\n* [Practitioner](practitioner.html): The value in any kind of contact\r\n* [Person](person.html): The value in any kind of contact\r\n* [Patient](patient.html): The value in any kind of telecom details of the patient\r\n", Type = SearchParamType.Token, Path = new string[] { "PractitionerRole.telecom", "RelatedPerson.telecom", "Practitioner.telecom", "Person.telecom", "Patient.telecom",  }, XPath = "f:PractitionerRole/f:telecom | f:RelatedPerson/f:telecom | f:Practitioner/f:telecom | f:Person/f:telecom | f:Patient/f:telecom" },
                new SearchParamDefinition() { Resource = "PaymentNotice", Name = "created", Description = "Creation date fro the notice", Type = SearchParamType.Date, Path = new string[] { "PaymentNotice.created",  }, XPath = "f:PaymentNotice/f:created" },
                new SearchParamDefinition() { Resource = "PaymentNotice", Name = "identifier", Description = "The business identifier of the notice", Type = SearchParamType.Token, Path = new string[] { "PaymentNotice.identifier",  }, XPath = "f:PaymentNotice/f:identifier" },
                new SearchParamDefinition() { Resource = "PaymentNotice", Name = "organization", Description = "The organization who generated this resource", Type = SearchParamType.Reference, Path = new string[] { "PaymentNotice.organization",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:PaymentNotice/f:organization" },
                new SearchParamDefinition() { Resource = "PaymentNotice", Name = "payment-status", Description = "The type of payment notice", Type = SearchParamType.Token, Path = new string[] { "PaymentNotice.paymentStatus",  }, XPath = "f:PaymentNotice/f:paymentStatus" },
                new SearchParamDefinition() { Resource = "PaymentNotice", Name = "provider", Description = "The reference to the provider", Type = SearchParamType.Reference, Path = new string[] { "PaymentNotice.provider",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:PaymentNotice/f:provider" },
                new SearchParamDefinition() { Resource = "PaymentNotice", Name = "request", Description = "The Claim", Type = SearchParamType.Reference, Path = new string[] { "PaymentNotice.request",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:PaymentNotice/f:request" },
                new SearchParamDefinition() { Resource = "PaymentNotice", Name = "response", Description = "The ClaimResponse", Type = SearchParamType.Reference, Path = new string[] { "PaymentNotice.response",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:PaymentNotice/f:response" },
                new SearchParamDefinition() { Resource = "PaymentNotice", Name = "statusdate", Description = "The date of the payment action", Type = SearchParamType.Date, Path = new string[] { "PaymentNotice.statusDate",  }, XPath = "f:PaymentNotice/f:statusDate" },
                new SearchParamDefinition() { Resource = "PaymentReconciliation", Name = "created", Description = "The creation date", Type = SearchParamType.Date, Path = new string[] { "PaymentReconciliation.created",  }, XPath = "f:PaymentReconciliation/f:created" },
                new SearchParamDefinition() { Resource = "PaymentReconciliation", Name = "disposition", Description = "The contents of the disposition message", Type = SearchParamType.String, Path = new string[] { "PaymentReconciliation.disposition",  }, XPath = "f:PaymentReconciliation/f:disposition" },
                new SearchParamDefinition() { Resource = "PaymentReconciliation", Name = "identifier", Description = "The business identifier of the Explanation of Benefit", Type = SearchParamType.Token, Path = new string[] { "PaymentReconciliation.identifier",  }, XPath = "f:PaymentReconciliation/f:identifier" },
                new SearchParamDefinition() { Resource = "PaymentReconciliation", Name = "organization", Description = "The organization who generated this resource", Type = SearchParamType.Reference, Path = new string[] { "PaymentReconciliation.organization",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:PaymentReconciliation/f:organization" },
                new SearchParamDefinition() { Resource = "PaymentReconciliation", Name = "outcome", Description = "The processing outcome", Type = SearchParamType.Token, Path = new string[] { "PaymentReconciliation.outcome",  }, XPath = "f:PaymentReconciliation/f:outcome" },
                new SearchParamDefinition() { Resource = "PaymentReconciliation", Name = "request", Description = "The reference to the claim", Type = SearchParamType.Reference, Path = new string[] { "PaymentReconciliation.request",  }, Target = new ResourceType[] { ResourceType.ProcessRequest }, XPath = "f:PaymentReconciliation/f:request" },
                new SearchParamDefinition() { Resource = "PaymentReconciliation", Name = "request-organization", Description = "The organization who generated this resource", Type = SearchParamType.Reference, Path = new string[] { "PaymentReconciliation.requestOrganization",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:PaymentReconciliation/f:requestOrganization" },
                new SearchParamDefinition() { Resource = "PaymentReconciliation", Name = "request-provider", Description = "The reference to the provider who sumbitted the claim", Type = SearchParamType.Reference, Path = new string[] { "PaymentReconciliation.requestProvider",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:PaymentReconciliation/f:requestProvider" },
                new SearchParamDefinition() { Resource = "Person", Name = "address", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address", "Practitioner.address", "Person.address", "Patient.address",  }, XPath = "f:RelatedPerson/f:address | f:Practitioner/f:address | f:Person/f:address | f:Patient/f:address" },
                new SearchParamDefinition() { Resource = "Person", Name = "address-city", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A city specified in an address\r\n* [Practitioner](practitioner.html): A city specified in an address\r\n* [Person](person.html): A city specified in an address\r\n* [Patient](patient.html): A city specified in an address\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address.city", "Practitioner.address.city", "Person.address.city", "Patient.address.city",  }, XPath = "f:RelatedPerson/f:address/f:city | f:Practitioner/f:address/f:city | f:Person/f:address/f:city | f:Patient/f:address/f:city" },
                new SearchParamDefinition() { Resource = "Person", Name = "address-country", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A country specified in an address\r\n* [Practitioner](practitioner.html): A country specified in an address\r\n* [Person](person.html): A country specified in an address\r\n* [Patient](patient.html): A country specified in an address\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address.country", "Practitioner.address.country", "Person.address.country", "Patient.address.country",  }, XPath = "f:RelatedPerson/f:address/f:country | f:Practitioner/f:address/f:country | f:Person/f:address/f:country | f:Patient/f:address/f:country" },
                new SearchParamDefinition() { Resource = "Person", Name = "address-postalcode", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A postal code specified in an address\r\n* [Practitioner](practitioner.html): A postalCode specified in an address\r\n* [Person](person.html): A postal code specified in an address\r\n* [Patient](patient.html): A postalCode specified in an address\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address.postalCode", "Practitioner.address.postalCode", "Person.address.postalCode", "Patient.address.postalCode",  }, XPath = "f:RelatedPerson/f:address/f:postalCode | f:Practitioner/f:address/f:postalCode | f:Person/f:address/f:postalCode | f:Patient/f:address/f:postalCode" },
                new SearchParamDefinition() { Resource = "Person", Name = "address-state", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A state specified in an address\r\n* [Practitioner](practitioner.html): A state specified in an address\r\n* [Person](person.html): A state specified in an address\r\n* [Patient](patient.html): A state specified in an address\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address.state", "Practitioner.address.state", "Person.address.state", "Patient.address.state",  }, XPath = "f:RelatedPerson/f:address/f:state | f:Practitioner/f:address/f:state | f:Person/f:address/f:state | f:Patient/f:address/f:state" },
                new SearchParamDefinition() { Resource = "Person", Name = "address-use", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A use code specified in an address\r\n* [Practitioner](practitioner.html): A use code specified in an address\r\n* [Person](person.html): A use code specified in an address\r\n* [Patient](patient.html): A use code specified in an address\r\n", Type = SearchParamType.Token, Path = new string[] { "RelatedPerson.address.use", "Practitioner.address.use", "Person.address.use", "Patient.address.use",  }, XPath = "f:RelatedPerson/f:address/f:use | f:Practitioner/f:address/f:use | f:Person/f:address/f:use | f:Patient/f:address/f:use" },
                new SearchParamDefinition() { Resource = "Person", Name = "birthdate", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): The Related Person's date of birth\r\n* [Person](person.html): The person's date of birth\r\n* [Patient](patient.html): The patient's date of birth\r\n", Type = SearchParamType.Date, Path = new string[] { "RelatedPerson.birthDate", "Person.birthDate", "Patient.birthDate",  }, XPath = "f:RelatedPerson/f:birthDate | f:Person/f:birthDate | f:Patient/f:birthDate" },
                new SearchParamDefinition() { Resource = "Person", Name = "email", Description = "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): A value in an email contact\r\n* [RelatedPerson](relatedperson.html): A value in an email contact\r\n* [Practitioner](practitioner.html): A value in an email contact\r\n* [Person](person.html): A value in an email contact\r\n* [Patient](patient.html): A value in an email contact\r\n", Type = SearchParamType.Token, Path = new string[] { "PractitionerRole.telecom[system.@value='email']", "RelatedPerson.telecom[system.@value='email']", "Practitioner.telecom[system.@value='email']", "Person.telecom[system.@value='email']", "Patient.telecom[system.@value='email']",  }, XPath = "f:PractitionerRole/f:telecom[system/@value='email'] | f:RelatedPerson/f:telecom[system/@value='email'] | f:Practitioner/f:telecom[system/@value='email'] | f:Person/f:telecom[system/@value='email'] | f:Patient/f:telecom[system/@value='email']" },
                new SearchParamDefinition() { Resource = "Person", Name = "gender", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): Gender of the related person\r\n* [Practitioner](practitioner.html): Gender of the practitioner\r\n* [Person](person.html): The gender of the person\r\n* [Patient](patient.html): Gender of the patient\r\n", Type = SearchParamType.Token, Path = new string[] { "RelatedPerson.gender", "Practitioner.gender", "Person.gender", "Patient.gender",  }, XPath = "f:RelatedPerson/f:gender | f:Practitioner/f:gender | f:Person/f:gender | f:Patient/f:gender" },
                new SearchParamDefinition() { Resource = "Person", Name = "phone", Description = "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): A value in a phone contact\r\n* [RelatedPerson](relatedperson.html): A value in a phone contact\r\n* [Practitioner](practitioner.html): A value in a phone contact\r\n* [Person](person.html): A value in a phone contact\r\n* [Patient](patient.html): A value in a phone contact\r\n", Type = SearchParamType.Token, Path = new string[] { "PractitionerRole.telecom[system.@value='phone']", "RelatedPerson.telecom[system.@value='phone']", "Practitioner.telecom[system.@value='phone']", "Person.telecom[system.@value='phone']", "Patient.telecom[system.@value='phone']",  }, XPath = "f:PractitionerRole/f:telecom[system/@value='phone'] | f:RelatedPerson/f:telecom[system/@value='phone'] | f:Practitioner/f:telecom[system/@value='phone'] | f:Person/f:telecom[system/@value='phone'] | f:Patient/f:telecom[system/@value='phone']" },
                new SearchParamDefinition() { Resource = "Person", Name = "phonetic", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm\r\n* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm\r\n* [Person](person.html): A portion of name using some kind of phonetic matching algorithm\r\n* [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.name", "Practitioner.name", "Person.name", "Patient.name",  }, XPath = "f:RelatedPerson/f:name | f:Practitioner/f:name | f:Person/f:name | f:Patient/f:name" },
                new SearchParamDefinition() { Resource = "Person", Name = "telecom", Description = "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): The value in any kind of contact\r\n* [RelatedPerson](relatedperson.html): The value in any kind of contact\r\n* [Practitioner](practitioner.html): The value in any kind of contact\r\n* [Person](person.html): The value in any kind of contact\r\n* [Patient](patient.html): The value in any kind of telecom details of the patient\r\n", Type = SearchParamType.Token, Path = new string[] { "PractitionerRole.telecom", "RelatedPerson.telecom", "Practitioner.telecom", "Person.telecom", "Patient.telecom",  }, XPath = "f:PractitionerRole/f:telecom | f:RelatedPerson/f:telecom | f:Practitioner/f:telecom | f:Person/f:telecom | f:Patient/f:telecom" },
                new SearchParamDefinition() { Resource = "Person", Name = "identifier", Description = "A person Identifier", Type = SearchParamType.Token, Path = new string[] { "Person.identifier",  }, XPath = "f:Person/f:identifier" },
                new SearchParamDefinition() { Resource = "Person", Name = "link", Description = "Any link has this Patient, Person, RelatedPerson or Practitioner reference", Type = SearchParamType.Reference, Path = new string[] { "Person.link.target",  }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.Person, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:Person/f:link/f:target" },
                new SearchParamDefinition() { Resource = "Person", Name = "name", Description = "A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text", Type = SearchParamType.String, Path = new string[] { "Person.name",  }, XPath = "f:Person/f:name" },
                new SearchParamDefinition() { Resource = "Person", Name = "organization", Description = "The organization at which this person record is being managed", Type = SearchParamType.Reference, Path = new string[] { "Person.managingOrganization",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:Person/f:managingOrganization" },
                new SearchParamDefinition() { Resource = "Person", Name = "patient", Description = "The Person links to this Patient", Type = SearchParamType.Reference, Path = new string[] { "Person.link.target",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:Person/f:link/f:target" },
                new SearchParamDefinition() { Resource = "Person", Name = "practitioner", Description = "The Person links to this Practitioner", Type = SearchParamType.Reference, Path = new string[] { "Person.link.target",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:Person/f:link/f:target" },
                new SearchParamDefinition() { Resource = "Person", Name = "relatedperson", Description = "The Person links to this RelatedPerson", Type = SearchParamType.Reference, Path = new string[] { "Person.link.target",  }, Target = new ResourceType[] { ResourceType.RelatedPerson }, XPath = "f:Person/f:link/f:target" },
                new SearchParamDefinition() { Resource = "PlanDefinition", Name = "composed-of", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "PlanDefinition.relatedArtifact[type.@value='composed-of'].resource",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:PlanDefinition/f:relatedArtifact[f:type/@value='composed-of']/f:resource" },
                new SearchParamDefinition() { Resource = "PlanDefinition", Name = "date", Description = "The plan definition publication date", Type = SearchParamType.Date, Path = new string[] { "PlanDefinition.date",  }, XPath = "f:PlanDefinition/f:date" },
                new SearchParamDefinition() { Resource = "PlanDefinition", Name = "depends-on", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "PlanDefinition.relatedArtifact[type.@value='depends-on'].resource", "PlanDefinition.library",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:PlanDefinition/f:relatedArtifact[f:type/@value='depends-on']/f:resource | f:PlanDefinition/f:library" },
                new SearchParamDefinition() { Resource = "PlanDefinition", Name = "derived-from", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "PlanDefinition.relatedArtifact[type.@value='derived-from'].resource",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:PlanDefinition/f:relatedArtifact[f:type/@value='derived-from']/f:resource" },
                new SearchParamDefinition() { Resource = "PlanDefinition", Name = "description", Description = "The description of the plan definition", Type = SearchParamType.String, Path = new string[] { "PlanDefinition.description",  }, XPath = "f:PlanDefinition/f:description" },
                new SearchParamDefinition() { Resource = "PlanDefinition", Name = "effective", Description = "The time during which the plan definition is intended to be in use", Type = SearchParamType.Date, Path = new string[] { "PlanDefinition.effectivePeriod",  }, XPath = "f:PlanDefinition/f:effectivePeriod" },
                new SearchParamDefinition() { Resource = "PlanDefinition", Name = "identifier", Description = "External identifier for the plan definition", Type = SearchParamType.Token, Path = new string[] { "PlanDefinition.identifier",  }, XPath = "f:PlanDefinition/f:identifier" },
                new SearchParamDefinition() { Resource = "PlanDefinition", Name = "jurisdiction", Description = "Intended jurisdiction for the plan definition", Type = SearchParamType.Token, Path = new string[] { "PlanDefinition.jurisdiction",  }, XPath = "f:PlanDefinition/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "PlanDefinition", Name = "name", Description = "Computationally friendly name of the plan definition", Type = SearchParamType.String, Path = new string[] { "PlanDefinition.name",  }, XPath = "f:PlanDefinition/f:name" },
                new SearchParamDefinition() { Resource = "PlanDefinition", Name = "predecessor", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "PlanDefinition.relatedArtifact[type.@value='predecessor'].resource",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:PlanDefinition/f:relatedArtifact[f:type/@value='predecessor']/f:resource" },
                new SearchParamDefinition() { Resource = "PlanDefinition", Name = "publisher", Description = "Name of the publisher of the plan definition", Type = SearchParamType.String, Path = new string[] { "PlanDefinition.publisher",  }, XPath = "f:PlanDefinition/f:publisher" },
                new SearchParamDefinition() { Resource = "PlanDefinition", Name = "status", Description = "The current status of the plan definition", Type = SearchParamType.Token, Path = new string[] { "PlanDefinition.status",  }, XPath = "f:PlanDefinition/f:status" },
                new SearchParamDefinition() { Resource = "PlanDefinition", Name = "successor", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "PlanDefinition.relatedArtifact[type.@value='successor'].resource",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:PlanDefinition/f:relatedArtifact[f:type/@value='successor']/f:resource" },
                new SearchParamDefinition() { Resource = "PlanDefinition", Name = "title", Description = "The human-friendly name of the plan definition", Type = SearchParamType.String, Path = new string[] { "PlanDefinition.title",  }, XPath = "f:PlanDefinition/f:title" },
                new SearchParamDefinition() { Resource = "PlanDefinition", Name = "topic", Description = "Topics associated with the module", Type = SearchParamType.Token, Path = new string[] { "PlanDefinition.topic",  }, XPath = "f:PlanDefinition/f:topic" },
                new SearchParamDefinition() { Resource = "PlanDefinition", Name = "url", Description = "The uri that identifies the plan definition", Type = SearchParamType.Uri, Path = new string[] { "PlanDefinition.url",  }, XPath = "f:PlanDefinition/f:url" },
                new SearchParamDefinition() { Resource = "PlanDefinition", Name = "version", Description = "The business version of the plan definition", Type = SearchParamType.Token, Path = new string[] { "PlanDefinition.version",  }, XPath = "f:PlanDefinition/f:version" },
                new SearchParamDefinition() { Resource = "Practitioner", Name = "address", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address", "Practitioner.address", "Person.address", "Patient.address",  }, XPath = "f:RelatedPerson/f:address | f:Practitioner/f:address | f:Person/f:address | f:Patient/f:address" },
                new SearchParamDefinition() { Resource = "Practitioner", Name = "address-city", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A city specified in an address\r\n* [Practitioner](practitioner.html): A city specified in an address\r\n* [Person](person.html): A city specified in an address\r\n* [Patient](patient.html): A city specified in an address\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address.city", "Practitioner.address.city", "Person.address.city", "Patient.address.city",  }, XPath = "f:RelatedPerson/f:address/f:city | f:Practitioner/f:address/f:city | f:Person/f:address/f:city | f:Patient/f:address/f:city" },
                new SearchParamDefinition() { Resource = "Practitioner", Name = "address-country", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A country specified in an address\r\n* [Practitioner](practitioner.html): A country specified in an address\r\n* [Person](person.html): A country specified in an address\r\n* [Patient](patient.html): A country specified in an address\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address.country", "Practitioner.address.country", "Person.address.country", "Patient.address.country",  }, XPath = "f:RelatedPerson/f:address/f:country | f:Practitioner/f:address/f:country | f:Person/f:address/f:country | f:Patient/f:address/f:country" },
                new SearchParamDefinition() { Resource = "Practitioner", Name = "address-postalcode", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A postal code specified in an address\r\n* [Practitioner](practitioner.html): A postalCode specified in an address\r\n* [Person](person.html): A postal code specified in an address\r\n* [Patient](patient.html): A postalCode specified in an address\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address.postalCode", "Practitioner.address.postalCode", "Person.address.postalCode", "Patient.address.postalCode",  }, XPath = "f:RelatedPerson/f:address/f:postalCode | f:Practitioner/f:address/f:postalCode | f:Person/f:address/f:postalCode | f:Patient/f:address/f:postalCode" },
                new SearchParamDefinition() { Resource = "Practitioner", Name = "address-state", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A state specified in an address\r\n* [Practitioner](practitioner.html): A state specified in an address\r\n* [Person](person.html): A state specified in an address\r\n* [Patient](patient.html): A state specified in an address\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address.state", "Practitioner.address.state", "Person.address.state", "Patient.address.state",  }, XPath = "f:RelatedPerson/f:address/f:state | f:Practitioner/f:address/f:state | f:Person/f:address/f:state | f:Patient/f:address/f:state" },
                new SearchParamDefinition() { Resource = "Practitioner", Name = "address-use", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A use code specified in an address\r\n* [Practitioner](practitioner.html): A use code specified in an address\r\n* [Person](person.html): A use code specified in an address\r\n* [Patient](patient.html): A use code specified in an address\r\n", Type = SearchParamType.Token, Path = new string[] { "RelatedPerson.address.use", "Practitioner.address.use", "Person.address.use", "Patient.address.use",  }, XPath = "f:RelatedPerson/f:address/f:use | f:Practitioner/f:address/f:use | f:Person/f:address/f:use | f:Patient/f:address/f:use" },
                new SearchParamDefinition() { Resource = "Practitioner", Name = "email", Description = "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): A value in an email contact\r\n* [RelatedPerson](relatedperson.html): A value in an email contact\r\n* [Practitioner](practitioner.html): A value in an email contact\r\n* [Person](person.html): A value in an email contact\r\n* [Patient](patient.html): A value in an email contact\r\n", Type = SearchParamType.Token, Path = new string[] { "PractitionerRole.telecom[system.@value='email']", "RelatedPerson.telecom[system.@value='email']", "Practitioner.telecom[system.@value='email']", "Person.telecom[system.@value='email']", "Patient.telecom[system.@value='email']",  }, XPath = "f:PractitionerRole/f:telecom[system/@value='email'] | f:RelatedPerson/f:telecom[system/@value='email'] | f:Practitioner/f:telecom[system/@value='email'] | f:Person/f:telecom[system/@value='email'] | f:Patient/f:telecom[system/@value='email']" },
                new SearchParamDefinition() { Resource = "Practitioner", Name = "family", Description = "Multiple Resources: \r\n\r\n* [Practitioner](practitioner.html): A portion of the family name\r\n* [Patient](patient.html): A portion of the family name of the patient\r\n", Type = SearchParamType.String, Path = new string[] { "Practitioner.name.family", "Patient.name.family",  }, XPath = "f:Practitioner/f:name/f:family | f:Patient/f:name/f:family" },
                new SearchParamDefinition() { Resource = "Practitioner", Name = "gender", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): Gender of the related person\r\n* [Practitioner](practitioner.html): Gender of the practitioner\r\n* [Person](person.html): The gender of the person\r\n* [Patient](patient.html): Gender of the patient\r\n", Type = SearchParamType.Token, Path = new string[] { "RelatedPerson.gender", "Practitioner.gender", "Person.gender", "Patient.gender",  }, XPath = "f:RelatedPerson/f:gender | f:Practitioner/f:gender | f:Person/f:gender | f:Patient/f:gender" },
                new SearchParamDefinition() { Resource = "Practitioner", Name = "given", Description = "Multiple Resources: \r\n\r\n* [Practitioner](practitioner.html): A portion of the given name\r\n* [Patient](patient.html): A portion of the given name of the patient\r\n", Type = SearchParamType.String, Path = new string[] { "Practitioner.name.given", "Patient.name.given",  }, XPath = "f:Practitioner/f:name/f:given | f:Patient/f:name/f:given" },
                new SearchParamDefinition() { Resource = "Practitioner", Name = "phone", Description = "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): A value in a phone contact\r\n* [RelatedPerson](relatedperson.html): A value in a phone contact\r\n* [Practitioner](practitioner.html): A value in a phone contact\r\n* [Person](person.html): A value in a phone contact\r\n* [Patient](patient.html): A value in a phone contact\r\n", Type = SearchParamType.Token, Path = new string[] { "PractitionerRole.telecom[system.@value='phone']", "RelatedPerson.telecom[system.@value='phone']", "Practitioner.telecom[system.@value='phone']", "Person.telecom[system.@value='phone']", "Patient.telecom[system.@value='phone']",  }, XPath = "f:PractitionerRole/f:telecom[system/@value='phone'] | f:RelatedPerson/f:telecom[system/@value='phone'] | f:Practitioner/f:telecom[system/@value='phone'] | f:Person/f:telecom[system/@value='phone'] | f:Patient/f:telecom[system/@value='phone']" },
                new SearchParamDefinition() { Resource = "Practitioner", Name = "phonetic", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm\r\n* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm\r\n* [Person](person.html): A portion of name using some kind of phonetic matching algorithm\r\n* [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.name", "Practitioner.name", "Person.name", "Patient.name",  }, XPath = "f:RelatedPerson/f:name | f:Practitioner/f:name | f:Person/f:name | f:Patient/f:name" },
                new SearchParamDefinition() { Resource = "Practitioner", Name = "telecom", Description = "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): The value in any kind of contact\r\n* [RelatedPerson](relatedperson.html): The value in any kind of contact\r\n* [Practitioner](practitioner.html): The value in any kind of contact\r\n* [Person](person.html): The value in any kind of contact\r\n* [Patient](patient.html): The value in any kind of telecom details of the patient\r\n", Type = SearchParamType.Token, Path = new string[] { "PractitionerRole.telecom", "RelatedPerson.telecom", "Practitioner.telecom", "Person.telecom", "Patient.telecom",  }, XPath = "f:PractitionerRole/f:telecom | f:RelatedPerson/f:telecom | f:Practitioner/f:telecom | f:Person/f:telecom | f:Patient/f:telecom" },
                new SearchParamDefinition() { Resource = "Practitioner", Name = "active", Description = "Whether the practitioner record is active", Type = SearchParamType.Token, Path = new string[] { "Practitioner.active",  }, XPath = "f:Practitioner/f:active" },
                new SearchParamDefinition() { Resource = "Practitioner", Name = "communication", Description = "One of the languages that the practitioner can communicate with", Type = SearchParamType.Token, Path = new string[] { "Practitioner.communication",  }, XPath = "f:Practitioner/f:communication" },
                new SearchParamDefinition() { Resource = "Practitioner", Name = "identifier", Description = "A practitioner's Identifier", Type = SearchParamType.Token, Path = new string[] { "Practitioner.identifier",  }, XPath = "f:Practitioner/f:identifier" },
                new SearchParamDefinition() { Resource = "Practitioner", Name = "name", Description = "A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text", Type = SearchParamType.String, Path = new string[] { "Practitioner.name",  }, XPath = "f:Practitioner/f:name" },
                new SearchParamDefinition() { Resource = "PractitionerRole", Name = "email", Description = "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): A value in an email contact\r\n* [RelatedPerson](relatedperson.html): A value in an email contact\r\n* [Practitioner](practitioner.html): A value in an email contact\r\n* [Person](person.html): A value in an email contact\r\n* [Patient](patient.html): A value in an email contact\r\n", Type = SearchParamType.Token, Path = new string[] { "PractitionerRole.telecom[system.@value='email']", "RelatedPerson.telecom[system.@value='email']", "Practitioner.telecom[system.@value='email']", "Person.telecom[system.@value='email']", "Patient.telecom[system.@value='email']",  }, XPath = "f:PractitionerRole/f:telecom[system/@value='email'] | f:RelatedPerson/f:telecom[system/@value='email'] | f:Practitioner/f:telecom[system/@value='email'] | f:Person/f:telecom[system/@value='email'] | f:Patient/f:telecom[system/@value='email']" },
                new SearchParamDefinition() { Resource = "PractitionerRole", Name = "phone", Description = "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): A value in a phone contact\r\n* [RelatedPerson](relatedperson.html): A value in a phone contact\r\n* [Practitioner](practitioner.html): A value in a phone contact\r\n* [Person](person.html): A value in a phone contact\r\n* [Patient](patient.html): A value in a phone contact\r\n", Type = SearchParamType.Token, Path = new string[] { "PractitionerRole.telecom[system.@value='phone']", "RelatedPerson.telecom[system.@value='phone']", "Practitioner.telecom[system.@value='phone']", "Person.telecom[system.@value='phone']", "Patient.telecom[system.@value='phone']",  }, XPath = "f:PractitionerRole/f:telecom[system/@value='phone'] | f:RelatedPerson/f:telecom[system/@value='phone'] | f:Practitioner/f:telecom[system/@value='phone'] | f:Person/f:telecom[system/@value='phone'] | f:Patient/f:telecom[system/@value='phone']" },
                new SearchParamDefinition() { Resource = "PractitionerRole", Name = "telecom", Description = "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): The value in any kind of contact\r\n* [RelatedPerson](relatedperson.html): The value in any kind of contact\r\n* [Practitioner](practitioner.html): The value in any kind of contact\r\n* [Person](person.html): The value in any kind of contact\r\n* [Patient](patient.html): The value in any kind of telecom details of the patient\r\n", Type = SearchParamType.Token, Path = new string[] { "PractitionerRole.telecom", "RelatedPerson.telecom", "Practitioner.telecom", "Person.telecom", "Patient.telecom",  }, XPath = "f:PractitionerRole/f:telecom | f:RelatedPerson/f:telecom | f:Practitioner/f:telecom | f:Person/f:telecom | f:Patient/f:telecom" },
                new SearchParamDefinition() { Resource = "PractitionerRole", Name = "active", Description = "Whether this practitioner's record is in active use", Type = SearchParamType.Token, Path = new string[] { "PractitionerRole.active",  }, XPath = "f:PractitionerRole/f:active" },
                new SearchParamDefinition() { Resource = "PractitionerRole", Name = "date", Description = "The period during which the practitioner is authorized to perform in these role(s)", Type = SearchParamType.Date, Path = new string[] { "PractitionerRole.period",  }, XPath = "f:PractitionerRole/f:period" },
                new SearchParamDefinition() { Resource = "PractitionerRole", Name = "endpoint", Description = "Technical endpoints providing access to services operated for the practitioner with this role", Type = SearchParamType.Reference, Path = new string[] { "PractitionerRole.endpoint",  }, Target = new ResourceType[] { ResourceType.Endpoint }, XPath = "f:PractitionerRole/f:endpoint" },
                new SearchParamDefinition() { Resource = "PractitionerRole", Name = "identifier", Description = "A practitioner's Identifier", Type = SearchParamType.Token, Path = new string[] { "PractitionerRole.identifier",  }, XPath = "f:PractitionerRole/f:identifier" },
                new SearchParamDefinition() { Resource = "PractitionerRole", Name = "location", Description = "One of the locations at which this practitioner provides care", Type = SearchParamType.Reference, Path = new string[] { "PractitionerRole.location",  }, Target = new ResourceType[] { ResourceType.Location }, XPath = "f:PractitionerRole/f:location" },
                new SearchParamDefinition() { Resource = "PractitionerRole", Name = "organization", Description = "The identity of the organization the practitioner represents / acts on behalf of", Type = SearchParamType.Reference, Path = new string[] { "PractitionerRole.organization",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:PractitionerRole/f:organization" },
                new SearchParamDefinition() { Resource = "PractitionerRole", Name = "practitioner", Description = "Practitioner that is able to provide the defined services for the organation", Type = SearchParamType.Reference, Path = new string[] { "PractitionerRole.practitioner",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:PractitionerRole/f:practitioner" },
                new SearchParamDefinition() { Resource = "PractitionerRole", Name = "role", Description = "The practitioner can perform this role at for the organization", Type = SearchParamType.Token, Path = new string[] { "PractitionerRole.code",  }, XPath = "f:PractitionerRole/f:code" },
                new SearchParamDefinition() { Resource = "PractitionerRole", Name = "service", Description = "The list of healthcare services that this worker provides for this role's Organization/Location(s)", Type = SearchParamType.Reference, Path = new string[] { "PractitionerRole.healthcareService",  }, Target = new ResourceType[] { ResourceType.HealthcareService }, XPath = "f:PractitionerRole/f:healthcareService" },
                new SearchParamDefinition() { Resource = "PractitionerRole", Name = "specialty", Description = "The practitioner has this specialty at an organization", Type = SearchParamType.Token, Path = new string[] { "PractitionerRole.specialty",  }, XPath = "f:PractitionerRole/f:specialty" },
                new SearchParamDefinition() { Resource = "Procedure", Name = "code", Description = "Multiple Resources: \r\n\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [List](list.html): What the purpose of this list is\r\n* [ProcedureRequest](procedurerequest.html): What is being requested/ordered\r\n* [Observation](observation.html): The code of the observation type\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report as a whole, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [Condition](condition.html): Code for the condition\r\n", Type = SearchParamType.Token, Path = new string[] { "FamilyMemberHistory.condition.code", "DeviceRequest.codeCodeableConcept", "AllergyIntolerance.code", "AllergyIntolerance.reaction.substance", "Procedure.code", "List.code", "ProcedureRequest.code", "Observation.code", "DiagnosticReport.code", "Condition.code",  }, XPath = "f:FamilyMemberHistory/f:condition/f:code | f:DeviceRequest/f:codeCodeableConcept | f:AllergyIntolerance/f:code | f:AllergyIntolerance/f:reaction/f:substance | f:Procedure/f:code | f:List/f:code | f:ProcedureRequest/f:code | f:Observation/f:code | f:DiagnosticReport/f:code | f:Condition/f:code" },
                new SearchParamDefinition() { Resource = "Procedure", Name = "date", Description = "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n", Type = SearchParamType.Date, Path = new string[] { "Consent.dateTime", "SupplyRequest.authoredOn", "RiskAssessment.occurrenceDateTime", "CareTeam.period", "FamilyMemberHistory.date", "Encounter.period", "AllergyIntolerance.assertedDate", "CarePlan.period", "EpisodeOfCare.period", "Procedure.performedDateTime", "Procedure.performedPeriod", "List.date", "Immunization.date", "Flag.period", "Observation.effectiveDateTime", "Observation.effectivePeriod", "DiagnosticReport.effectiveDateTime", "DiagnosticReport.effectivePeriod", "Composition.date", "DetectedIssue.date", "ClinicalImpression.date",  }, XPath = "f:Consent/f:dateTime | f:SupplyRequest/f:authoredOn | f:RiskAssessment/f:occurrenceDateTime | f:CareTeam/f:period | f:FamilyMemberHistory/f:date | f:Encounter/f:period | f:AllergyIntolerance/f:assertedDate | f:CarePlan/f:period | f:EpisodeOfCare/f:period | f:Procedure/f:performedDateTime | f:Procedure/f:performedPeriod | f:List/f:date | f:Immunization/f:date | f:Flag/f:period | f:Observation/f:effectiveDateTime | f:Observation/f:effectivePeriod | f:DiagnosticReport/f:effectiveDateTime | f:DiagnosticReport/f:effectivePeriod | f:Composition/f:date | f:DetectedIssue/f:date | f:ClinicalImpression/f:date" },
                new SearchParamDefinition() { Resource = "Procedure", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "Procedure", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "Procedure", Name = "encounter", Description = "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition\r\n", Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.context.encounter", "RiskAssessment.context", "DeviceRequest.context", "Procedure.context", "List.encounter", "VisionPrescription.encounter", "ProcedureRequest.context", "Flag.encounter", "Observation.context", "DiagnosticReport.context", "NutritionOrder.encounter", "Composition.encounter",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:DocumentReference/f:context/f:encounter | f:RiskAssessment/f:context | f:DeviceRequest/f:context | f:Procedure/f:context | f:List/f:encounter | f:VisionPrescription/f:encounter | f:ProcedureRequest/f:context | f:Flag/f:encounter | f:Observation/f:context | f:DiagnosticReport/f:context | f:NutritionOrder/f:encounter | f:Composition/f:encounter" },
                new SearchParamDefinition() { Resource = "Procedure", Name = "based-on", Description = "A request for this procedure", Type = SearchParamType.Reference, Path = new string[] { "Procedure.basedOn",  }, Target = new ResourceType[] { ResourceType.CarePlan, ResourceType.ProcedureRequest, ResourceType.ReferralRequest }, XPath = "f:Procedure/f:basedOn" },
                new SearchParamDefinition() { Resource = "Procedure", Name = "category", Description = "Classification of the procedure", Type = SearchParamType.Token, Path = new string[] { "Procedure.category",  }, XPath = "f:Procedure/f:category" },
                new SearchParamDefinition() { Resource = "Procedure", Name = "context", Description = "Encounter or episode associated with the procedure", Type = SearchParamType.Reference, Path = new string[] { "Procedure.context",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:Procedure/f:context" },
                new SearchParamDefinition() { Resource = "Procedure", Name = "definition", Description = "Instantiates protocol or definition", Type = SearchParamType.Reference, Path = new string[] { "Procedure.definition",  }, Target = new ResourceType[] { ResourceType.ActivityDefinition, ResourceType.HealthcareService, ResourceType.PlanDefinition }, XPath = "f:Procedure/f:definition" },
                new SearchParamDefinition() { Resource = "Procedure", Name = "location", Description = "Where the procedure happened", Type = SearchParamType.Reference, Path = new string[] { "Procedure.location",  }, Target = new ResourceType[] { ResourceType.Location }, XPath = "f:Procedure/f:location" },
                new SearchParamDefinition() { Resource = "Procedure", Name = "part-of", Description = "Part of referenced event", Type = SearchParamType.Reference, Path = new string[] { "Procedure.partOf",  }, Target = new ResourceType[] { ResourceType.MedicationAdministration, ResourceType.Observation, ResourceType.Procedure }, XPath = "f:Procedure/f:partOf" },
                new SearchParamDefinition() { Resource = "Procedure", Name = "performer", Description = "The reference to the practitioner", Type = SearchParamType.Reference, Path = new string[] { "Procedure.performer.actor",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:Procedure/f:performer/f:actor" },
                new SearchParamDefinition() { Resource = "Procedure", Name = "status", Description = "preparation | in-progress | suspended | aborted | completed | entered-in-error | unknown", Type = SearchParamType.Token, Path = new string[] { "Procedure.status",  }, XPath = "f:Procedure/f:status" },
                new SearchParamDefinition() { Resource = "Procedure", Name = "subject", Description = "Search by subject", Type = SearchParamType.Reference, Path = new string[] { "Procedure.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:Procedure/f:subject" },
                new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "code", Description = "Multiple Resources: \r\n\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [List](list.html): What the purpose of this list is\r\n* [ProcedureRequest](procedurerequest.html): What is being requested/ordered\r\n* [Observation](observation.html): The code of the observation type\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report as a whole, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [Condition](condition.html): Code for the condition\r\n", Type = SearchParamType.Token, Path = new string[] { "FamilyMemberHistory.condition.code", "DeviceRequest.codeCodeableConcept", "AllergyIntolerance.code", "AllergyIntolerance.reaction.substance", "Procedure.code", "List.code", "ProcedureRequest.code", "Observation.code", "DiagnosticReport.code", "Condition.code",  }, XPath = "f:FamilyMemberHistory/f:condition/f:code | f:DeviceRequest/f:codeCodeableConcept | f:AllergyIntolerance/f:code | f:AllergyIntolerance/f:reaction/f:substance | f:Procedure/f:code | f:List/f:code | f:ProcedureRequest/f:code | f:Observation/f:code | f:DiagnosticReport/f:code | f:Condition/f:code" },
                new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "encounter", Description = "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition\r\n", Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.context.encounter", "RiskAssessment.context", "DeviceRequest.context", "Procedure.context", "List.encounter", "VisionPrescription.encounter", "ProcedureRequest.context", "Flag.encounter", "Observation.context", "DiagnosticReport.context", "NutritionOrder.encounter", "Composition.encounter",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:DocumentReference/f:context/f:encounter | f:RiskAssessment/f:context | f:DeviceRequest/f:context | f:Procedure/f:context | f:List/f:encounter | f:VisionPrescription/f:encounter | f:ProcedureRequest/f:context | f:Flag/f:encounter | f:Observation/f:context | f:DiagnosticReport/f:context | f:NutritionOrder/f:encounter | f:Composition/f:encounter" },
                new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "authored", Description = "Date request signed", Type = SearchParamType.Date, Path = new string[] { "ProcedureRequest.authoredOn",  }, XPath = "f:ProcedureRequest/f:authoredOn" },
                new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "based-on", Description = "What request fulfills", Type = SearchParamType.Reference, Path = new string[] { "ProcedureRequest.basedOn",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:ProcedureRequest/f:basedOn" },
                new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "body-site", Description = "Where procedure is going to be done", Type = SearchParamType.Token, Path = new string[] { "ProcedureRequest.bodySite",  }, XPath = "f:ProcedureRequest/f:bodySite" },
                new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "context", Description = "Encounter or Episode during which request was created", Type = SearchParamType.Reference, Path = new string[] { "ProcedureRequest.context",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:ProcedureRequest/f:context" },
                new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "definition", Description = "Protocol or definition", Type = SearchParamType.Reference, Path = new string[] { "ProcedureRequest.definition",  }, Target = new ResourceType[] { ResourceType.ActivityDefinition, ResourceType.PlanDefinition }, XPath = "f:ProcedureRequest/f:definition" },
                new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "intent", Description = "proposal | plan | order +", Type = SearchParamType.Token, Path = new string[] { "ProcedureRequest.intent",  }, XPath = "f:ProcedureRequest/f:intent" },
                new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "occurrence", Description = "When procedure should occur", Type = SearchParamType.Date, Path = new string[] { "ProcedureRequest.occurrenceDateTime", "ProcedureRequest.occurrencePeriod", "ProcedureRequest.occurrenceTiming",  }, XPath = "f:ProcedureRequest/f:occurrenceDateTime | f:ProcedureRequest/f:occurrencePeriod | f:ProcedureRequest/f:occurrenceTiming" },
                new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "performer", Description = "Requested perfomer", Type = SearchParamType.Reference, Path = new string[] { "ProcedureRequest.performer",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.HealthcareService, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:ProcedureRequest/f:performer" },
                new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "performer-type", Description = "Performer role", Type = SearchParamType.Token, Path = new string[] { "ProcedureRequest.performerType",  }, XPath = "f:ProcedureRequest/f:performerType" },
                new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "priority", Description = "routine | urgent | asap | stat", Type = SearchParamType.Token, Path = new string[] { "ProcedureRequest.priority",  }, XPath = "f:ProcedureRequest/f:priority" },
                new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "replaces", Description = "What request replaces", Type = SearchParamType.Reference, Path = new string[] { "ProcedureRequest.replaces",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:ProcedureRequest/f:replaces" },
                new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "requester", Description = "Individual making the request", Type = SearchParamType.Reference, Path = new string[] { "ProcedureRequest.requester.agent",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Practitioner }, XPath = "f:ProcedureRequest/f:requester/f:agent" },
                new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "requisition", Description = "Composite Request ID", Type = SearchParamType.Token, Path = new string[] { "ProcedureRequest.requisition",  }, XPath = "f:ProcedureRequest/f:requisition" },
                new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "specimen", Description = "Specimen to be tested", Type = SearchParamType.Reference, Path = new string[] { "ProcedureRequest.specimen",  }, Target = new ResourceType[] { ResourceType.Specimen }, XPath = "f:ProcedureRequest/f:specimen" },
                new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "status", Description = "draft | active | suspended | completed | entered-in-error | cancelled", Type = SearchParamType.Token, Path = new string[] { "ProcedureRequest.status",  }, XPath = "f:ProcedureRequest/f:status" },
                new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "subject", Description = "Search by subject", Type = SearchParamType.Reference, Path = new string[] { "ProcedureRequest.subject",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Location, ResourceType.Patient }, XPath = "f:ProcedureRequest/f:subject" },
                new SearchParamDefinition() { Resource = "ProcessRequest", Name = "action", Description = "The action requested by this resource", Type = SearchParamType.Token, Path = new string[] { "ProcessRequest.action",  }, XPath = "f:ProcessRequest/f:action" },
                new SearchParamDefinition() { Resource = "ProcessRequest", Name = "identifier", Description = "The business identifier of the ProcessRequest", Type = SearchParamType.Token, Path = new string[] { "ProcessRequest.identifier",  }, XPath = "f:ProcessRequest/f:identifier" },
                new SearchParamDefinition() { Resource = "ProcessRequest", Name = "organization", Description = "The organization who generated this request", Type = SearchParamType.Reference, Path = new string[] { "ProcessRequest.organization",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:ProcessRequest/f:organization" },
                new SearchParamDefinition() { Resource = "ProcessRequest", Name = "provider", Description = "The provider who regenerated this request", Type = SearchParamType.Reference, Path = new string[] { "ProcessRequest.provider",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:ProcessRequest/f:provider" },
                new SearchParamDefinition() { Resource = "ProcessResponse", Name = "identifier", Description = "The business identifier of the Explanation of Benefit", Type = SearchParamType.Token, Path = new string[] { "ProcessResponse.identifier",  }, XPath = "f:ProcessResponse/f:identifier" },
                new SearchParamDefinition() { Resource = "ProcessResponse", Name = "organization", Description = "The organization who generated this resource", Type = SearchParamType.Reference, Path = new string[] { "ProcessResponse.organization",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:ProcessResponse/f:organization" },
                new SearchParamDefinition() { Resource = "ProcessResponse", Name = "request", Description = "The reference to the claim", Type = SearchParamType.Reference, Path = new string[] { "ProcessResponse.request",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:ProcessResponse/f:request" },
                new SearchParamDefinition() { Resource = "ProcessResponse", Name = "request-organization", Description = "The Organization who is responsible the request transaction", Type = SearchParamType.Reference, Path = new string[] { "ProcessResponse.requestOrganization",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:ProcessResponse/f:requestOrganization" },
                new SearchParamDefinition() { Resource = "ProcessResponse", Name = "request-provider", Description = "The Provider who is responsible the request transaction", Type = SearchParamType.Reference, Path = new string[] { "ProcessResponse.requestProvider",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:ProcessResponse/f:requestProvider" },
                new SearchParamDefinition() { Resource = "Provenance", Name = "agent", Description = "Who participated", Type = SearchParamType.Reference, Path = new string[] { "Provenance.agent.whoUri", "Provenance.agent.whoReference",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:Provenance/f:agent/f:whoUri | f:Provenance/f:agent/f:whoReference" },
                new SearchParamDefinition() { Resource = "Provenance", Name = "agent-role", Description = "What the agents role was", Type = SearchParamType.Token, Path = new string[] { "Provenance.agent.role",  }, XPath = "f:Provenance/f:agent/f:role" },
                new SearchParamDefinition() { Resource = "Provenance", Name = "end", Description = "End time with inclusive boundary, if not ongoing", Type = SearchParamType.Date, Path = new string[] { "Provenance.period.end",  }, XPath = "f:Provenance/f:period/f:end" },
                new SearchParamDefinition() { Resource = "Provenance", Name = "entity-id", Description = "Identity of entity", Type = SearchParamType.Token, Path = new string[] { "Provenance.entity.whatIdentifier",  }, XPath = "f:Provenance/f:entity/f:whatIdentifier" },
                new SearchParamDefinition() { Resource = "Provenance", Name = "entity-ref", Description = "Identity of entity", Type = SearchParamType.Reference, Path = new string[] { "Provenance.entity.whatReference",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Provenance/f:entity/f:whatReference" },
                new SearchParamDefinition() { Resource = "Provenance", Name = "location", Description = "Where the activity occurred, if relevant", Type = SearchParamType.Reference, Path = new string[] { "Provenance.location",  }, Target = new ResourceType[] { ResourceType.Location }, XPath = "f:Provenance/f:location" },
                new SearchParamDefinition() { Resource = "Provenance", Name = "patient", Description = "Target Reference(s) (usually version specific)", Type = SearchParamType.Reference, Path = new string[] { "Provenance.target",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:Provenance/f:target" },
                new SearchParamDefinition() { Resource = "Provenance", Name = "recorded", Description = "When the activity was recorded / updated", Type = SearchParamType.Date, Path = new string[] { "Provenance.recorded",  }, XPath = "f:Provenance/f:recorded" },
                new SearchParamDefinition() { Resource = "Provenance", Name = "signature-type", Description = "Indication of the reason the entity signed the object(s)", Type = SearchParamType.Token, Path = new string[] { "Provenance.signature.type",  }, XPath = "f:Provenance/f:signature/f:type" },
                new SearchParamDefinition() { Resource = "Provenance", Name = "start", Description = "Starting time with inclusive boundary", Type = SearchParamType.Date, Path = new string[] { "Provenance.period.start",  }, XPath = "f:Provenance/f:period/f:start" },
                new SearchParamDefinition() { Resource = "Provenance", Name = "target", Description = "Target Reference(s) (usually version specific)", Type = SearchParamType.Reference, Path = new string[] { "Provenance.target",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Provenance/f:target" },
                new SearchParamDefinition() { Resource = "Questionnaire", Name = "code", Description = "A code that corresponds to one of its items in the questionnaire", Type = SearchParamType.Token, Path = new string[] { "Questionnaire.item.code",  }, XPath = "f:Questionnaire/f:item/f:code" },
                new SearchParamDefinition() { Resource = "Questionnaire", Name = "date", Description = "The questionnaire publication date", Type = SearchParamType.Date, Path = new string[] { "Questionnaire.date",  }, XPath = "f:Questionnaire/f:date" },
                new SearchParamDefinition() { Resource = "Questionnaire", Name = "description", Description = "The description of the questionnaire", Type = SearchParamType.String, Path = new string[] { "Questionnaire.description",  }, XPath = "f:Questionnaire/f:description" },
                new SearchParamDefinition() { Resource = "Questionnaire", Name = "effective", Description = "The time during which the questionnaire is intended to be in use", Type = SearchParamType.Date, Path = new string[] { "Questionnaire.effectivePeriod",  }, XPath = "f:Questionnaire/f:effectivePeriod" },
                new SearchParamDefinition() { Resource = "Questionnaire", Name = "identifier", Description = "External identifier for the questionnaire", Type = SearchParamType.Token, Path = new string[] { "Questionnaire.identifier",  }, XPath = "f:Questionnaire/f:identifier" },
                new SearchParamDefinition() { Resource = "Questionnaire", Name = "jurisdiction", Description = "Intended jurisdiction for the questionnaire", Type = SearchParamType.Token, Path = new string[] { "Questionnaire.jurisdiction",  }, XPath = "f:Questionnaire/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "Questionnaire", Name = "name", Description = "Computationally friendly name of the questionnaire", Type = SearchParamType.String, Path = new string[] { "Questionnaire.name",  }, XPath = "f:Questionnaire/f:name" },
                new SearchParamDefinition() { Resource = "Questionnaire", Name = "publisher", Description = "Name of the publisher of the questionnaire", Type = SearchParamType.String, Path = new string[] { "Questionnaire.publisher",  }, XPath = "f:Questionnaire/f:publisher" },
                new SearchParamDefinition() { Resource = "Questionnaire", Name = "status", Description = "The current status of the questionnaire", Type = SearchParamType.Token, Path = new string[] { "Questionnaire.status",  }, XPath = "f:Questionnaire/f:status" },
                new SearchParamDefinition() { Resource = "Questionnaire", Name = "title", Description = "The human-friendly name of the questionnaire", Type = SearchParamType.String, Path = new string[] { "Questionnaire.title",  }, XPath = "f:Questionnaire/f:title" },
                new SearchParamDefinition() { Resource = "Questionnaire", Name = "url", Description = "The uri that identifies the questionnaire", Type = SearchParamType.Uri, Path = new string[] { "Questionnaire.url",  }, XPath = "f:Questionnaire/f:url" },
                new SearchParamDefinition() { Resource = "Questionnaire", Name = "version", Description = "The business version of the questionnaire", Type = SearchParamType.Token, Path = new string[] { "Questionnaire.version",  }, XPath = "f:Questionnaire/f:version" },
                new SearchParamDefinition() { Resource = "QuestionnaireResponse", Name = "author", Description = "The author of the questionnaire response", Type = SearchParamType.Reference, Path = new string[] { "QuestionnaireResponse.author",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:QuestionnaireResponse/f:author" },
                new SearchParamDefinition() { Resource = "QuestionnaireResponse", Name = "authored", Description = "When the questionnaire response was last changed", Type = SearchParamType.Date, Path = new string[] { "QuestionnaireResponse.authored",  }, XPath = "f:QuestionnaireResponse/f:authored" },
                new SearchParamDefinition() { Resource = "QuestionnaireResponse", Name = "based-on", Description = "Plan/proposal/order fulfilled by this questionnaire response", Type = SearchParamType.Reference, Path = new string[] { "QuestionnaireResponse.basedOn",  }, Target = new ResourceType[] { ResourceType.CarePlan, ResourceType.ProcedureRequest, ResourceType.ReferralRequest }, XPath = "f:QuestionnaireResponse/f:basedOn" },
                new SearchParamDefinition() { Resource = "QuestionnaireResponse", Name = "context", Description = "Encounter or episode associated with the questionnaire response", Type = SearchParamType.Reference, Path = new string[] { "QuestionnaireResponse.context",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:QuestionnaireResponse/f:context" },
                new SearchParamDefinition() { Resource = "QuestionnaireResponse", Name = "identifier", Description = "The unique identifier for the questionnaire response", Type = SearchParamType.Token, Path = new string[] { "QuestionnaireResponse.identifier",  }, XPath = "f:QuestionnaireResponse/f:identifier" },
                new SearchParamDefinition() { Resource = "QuestionnaireResponse", Name = "parent", Description = "Procedure or observation this questionnaire response was performed as a part of", Type = SearchParamType.Reference, Path = new string[] { "QuestionnaireResponse.parent",  }, Target = new ResourceType[] { ResourceType.Observation, ResourceType.Procedure }, XPath = "f:QuestionnaireResponse/f:parent" },
                new SearchParamDefinition() { Resource = "QuestionnaireResponse", Name = "patient", Description = "The patient that is the subject of the questionnaire response", Type = SearchParamType.Reference, Path = new string[] { "QuestionnaireResponse.subject",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:QuestionnaireResponse/f:subject" },
                new SearchParamDefinition() { Resource = "QuestionnaireResponse", Name = "questionnaire", Description = "The questionnaire the answers are provided for", Type = SearchParamType.Reference, Path = new string[] { "QuestionnaireResponse.questionnaire",  }, Target = new ResourceType[] { ResourceType.Questionnaire }, XPath = "f:QuestionnaireResponse/f:questionnaire" },
                new SearchParamDefinition() { Resource = "QuestionnaireResponse", Name = "source", Description = "The individual providing the information reflected in the questionnaire respose", Type = SearchParamType.Reference, Path = new string[] { "QuestionnaireResponse.source",  }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:QuestionnaireResponse/f:source" },
                new SearchParamDefinition() { Resource = "QuestionnaireResponse", Name = "status", Description = "The status of the questionnaire response", Type = SearchParamType.Token, Path = new string[] { "QuestionnaireResponse.status",  }, XPath = "f:QuestionnaireResponse/f:status" },
                new SearchParamDefinition() { Resource = "QuestionnaireResponse", Name = "subject", Description = "The subject of the questionnaire response", Type = SearchParamType.Reference, Path = new string[] { "QuestionnaireResponse.subject",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:QuestionnaireResponse/f:subject" },
                new SearchParamDefinition() { Resource = "ReferralRequest", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "ReferralRequest", Name = "type", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): The type of the referral\r\n* [DocumentManifest](documentmanifest.html): Kind of document set\r\n* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html): Specific type of encounter\r\n* [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)\r\n* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management\r\n* [Composition](composition.html): Kind of composition (LOINC if possible)\r\n", Type = SearchParamType.Token, Path = new string[] { "ReferralRequest.type", "DocumentManifest.type", "DocumentReference.type", "Encounter.type", "AllergyIntolerance.type", "EpisodeOfCare.type", "Composition.type",  }, XPath = "f:ReferralRequest/f:type | f:DocumentManifest/f:type | f:DocumentReference/f:type | f:Encounter/f:type | f:AllergyIntolerance/f:type | f:EpisodeOfCare/f:type | f:Composition/f:type" },
                new SearchParamDefinition() { Resource = "ReferralRequest", Name = "authored-on", Description = "Creation or activation date", Type = SearchParamType.Date, Path = new string[] { "ReferralRequest.authoredOn",  }, XPath = "f:ReferralRequest/f:authoredOn" },
                new SearchParamDefinition() { Resource = "ReferralRequest", Name = "based-on", Description = "Request being fulfilled", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.basedOn",  }, Target = new ResourceType[] { ResourceType.CarePlan, ResourceType.ProcedureRequest, ResourceType.ReferralRequest }, XPath = "f:ReferralRequest/f:basedOn" },
                new SearchParamDefinition() { Resource = "ReferralRequest", Name = "context", Description = "Part of encounter or episode of care", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.context",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:ReferralRequest/f:context" },
                new SearchParamDefinition() { Resource = "ReferralRequest", Name = "definition", Description = "Instantiates protocol or definition", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.definition",  }, Target = new ResourceType[] { ResourceType.ActivityDefinition, ResourceType.PlanDefinition }, XPath = "f:ReferralRequest/f:definition" },
                new SearchParamDefinition() { Resource = "ReferralRequest", Name = "encounter", Description = "Originating encounter", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.context",  }, Target = new ResourceType[] { ResourceType.Encounter }, XPath = "f:ReferralRequest/f:context" },
                new SearchParamDefinition() { Resource = "ReferralRequest", Name = "group-identifier", Description = "Part of common request", Type = SearchParamType.Token, Path = new string[] { "ReferralRequest.groupIdentifier",  }, XPath = "f:ReferralRequest/f:groupIdentifier" },
                new SearchParamDefinition() { Resource = "ReferralRequest", Name = "identifier", Description = "Business identifier", Type = SearchParamType.Token, Path = new string[] { "ReferralRequest.identifier",  }, XPath = "f:ReferralRequest/f:identifier" },
                new SearchParamDefinition() { Resource = "ReferralRequest", Name = "intent", Description = "Proposal, plan or order", Type = SearchParamType.Token, Path = new string[] { "ReferralRequest.intent",  }, XPath = "f:ReferralRequest/f:intent" },
                new SearchParamDefinition() { Resource = "ReferralRequest", Name = "occurrence-date", Description = "When the service(s) requested in the referral should occur", Type = SearchParamType.Date, Path = new string[] { "ReferralRequest.occurrenceDateTime", "ReferralRequest.occurrencePeriod",  }, XPath = "f:ReferralRequest/f:occurrenceDateTime | f:ReferralRequest/f:occurrencePeriod" },
                new SearchParamDefinition() { Resource = "ReferralRequest", Name = "priority", Description = "The priority assigned to the referral", Type = SearchParamType.Token, Path = new string[] { "ReferralRequest.priority",  }, XPath = "f:ReferralRequest/f:priority" },
                new SearchParamDefinition() { Resource = "ReferralRequest", Name = "recipient", Description = "The person that the referral was sent to", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.recipient",  }, Target = new ResourceType[] { ResourceType.HealthcareService, ResourceType.Organization, ResourceType.Practitioner }, XPath = "f:ReferralRequest/f:recipient" },
                new SearchParamDefinition() { Resource = "ReferralRequest", Name = "replaces", Description = "Request(s) replaced by this request", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.replaces",  }, Target = new ResourceType[] { ResourceType.ReferralRequest }, XPath = "f:ReferralRequest/f:replaces" },
                new SearchParamDefinition() { Resource = "ReferralRequest", Name = "requester", Description = "Individual making the request", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.requester.agent",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:ReferralRequest/f:requester/f:agent" },
                new SearchParamDefinition() { Resource = "ReferralRequest", Name = "service", Description = "Actions requested as part of the referral", Type = SearchParamType.Token, Path = new string[] { "ReferralRequest.serviceRequested",  }, XPath = "f:ReferralRequest/f:serviceRequested" },
                new SearchParamDefinition() { Resource = "ReferralRequest", Name = "specialty", Description = "The specialty that the referral is for", Type = SearchParamType.Token, Path = new string[] { "ReferralRequest.specialty",  }, XPath = "f:ReferralRequest/f:specialty" },
                new SearchParamDefinition() { Resource = "ReferralRequest", Name = "status", Description = "The status of the referral", Type = SearchParamType.Token, Path = new string[] { "ReferralRequest.status",  }, XPath = "f:ReferralRequest/f:status" },
                new SearchParamDefinition() { Resource = "ReferralRequest", Name = "subject", Description = "Patient referred to care or transfer", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject" },
                new SearchParamDefinition() { Resource = "RelatedPerson", Name = "address", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address", "Practitioner.address", "Person.address", "Patient.address",  }, XPath = "f:RelatedPerson/f:address | f:Practitioner/f:address | f:Person/f:address | f:Patient/f:address" },
                new SearchParamDefinition() { Resource = "RelatedPerson", Name = "address-city", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A city specified in an address\r\n* [Practitioner](practitioner.html): A city specified in an address\r\n* [Person](person.html): A city specified in an address\r\n* [Patient](patient.html): A city specified in an address\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address.city", "Practitioner.address.city", "Person.address.city", "Patient.address.city",  }, XPath = "f:RelatedPerson/f:address/f:city | f:Practitioner/f:address/f:city | f:Person/f:address/f:city | f:Patient/f:address/f:city" },
                new SearchParamDefinition() { Resource = "RelatedPerson", Name = "address-country", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A country specified in an address\r\n* [Practitioner](practitioner.html): A country specified in an address\r\n* [Person](person.html): A country specified in an address\r\n* [Patient](patient.html): A country specified in an address\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address.country", "Practitioner.address.country", "Person.address.country", "Patient.address.country",  }, XPath = "f:RelatedPerson/f:address/f:country | f:Practitioner/f:address/f:country | f:Person/f:address/f:country | f:Patient/f:address/f:country" },
                new SearchParamDefinition() { Resource = "RelatedPerson", Name = "address-postalcode", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A postal code specified in an address\r\n* [Practitioner](practitioner.html): A postalCode specified in an address\r\n* [Person](person.html): A postal code specified in an address\r\n* [Patient](patient.html): A postalCode specified in an address\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address.postalCode", "Practitioner.address.postalCode", "Person.address.postalCode", "Patient.address.postalCode",  }, XPath = "f:RelatedPerson/f:address/f:postalCode | f:Practitioner/f:address/f:postalCode | f:Person/f:address/f:postalCode | f:Patient/f:address/f:postalCode" },
                new SearchParamDefinition() { Resource = "RelatedPerson", Name = "address-state", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A state specified in an address\r\n* [Practitioner](practitioner.html): A state specified in an address\r\n* [Person](person.html): A state specified in an address\r\n* [Patient](patient.html): A state specified in an address\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address.state", "Practitioner.address.state", "Person.address.state", "Patient.address.state",  }, XPath = "f:RelatedPerson/f:address/f:state | f:Practitioner/f:address/f:state | f:Person/f:address/f:state | f:Patient/f:address/f:state" },
                new SearchParamDefinition() { Resource = "RelatedPerson", Name = "address-use", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A use code specified in an address\r\n* [Practitioner](practitioner.html): A use code specified in an address\r\n* [Person](person.html): A use code specified in an address\r\n* [Patient](patient.html): A use code specified in an address\r\n", Type = SearchParamType.Token, Path = new string[] { "RelatedPerson.address.use", "Practitioner.address.use", "Person.address.use", "Patient.address.use",  }, XPath = "f:RelatedPerson/f:address/f:use | f:Practitioner/f:address/f:use | f:Person/f:address/f:use | f:Patient/f:address/f:use" },
                new SearchParamDefinition() { Resource = "RelatedPerson", Name = "birthdate", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): The Related Person's date of birth\r\n* [Person](person.html): The person's date of birth\r\n* [Patient](patient.html): The patient's date of birth\r\n", Type = SearchParamType.Date, Path = new string[] { "RelatedPerson.birthDate", "Person.birthDate", "Patient.birthDate",  }, XPath = "f:RelatedPerson/f:birthDate | f:Person/f:birthDate | f:Patient/f:birthDate" },
                new SearchParamDefinition() { Resource = "RelatedPerson", Name = "email", Description = "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): A value in an email contact\r\n* [RelatedPerson](relatedperson.html): A value in an email contact\r\n* [Practitioner](practitioner.html): A value in an email contact\r\n* [Person](person.html): A value in an email contact\r\n* [Patient](patient.html): A value in an email contact\r\n", Type = SearchParamType.Token, Path = new string[] { "PractitionerRole.telecom[system.@value='email']", "RelatedPerson.telecom[system.@value='email']", "Practitioner.telecom[system.@value='email']", "Person.telecom[system.@value='email']", "Patient.telecom[system.@value='email']",  }, XPath = "f:PractitionerRole/f:telecom[system/@value='email'] | f:RelatedPerson/f:telecom[system/@value='email'] | f:Practitioner/f:telecom[system/@value='email'] | f:Person/f:telecom[system/@value='email'] | f:Patient/f:telecom[system/@value='email']" },
                new SearchParamDefinition() { Resource = "RelatedPerson", Name = "gender", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): Gender of the related person\r\n* [Practitioner](practitioner.html): Gender of the practitioner\r\n* [Person](person.html): The gender of the person\r\n* [Patient](patient.html): Gender of the patient\r\n", Type = SearchParamType.Token, Path = new string[] { "RelatedPerson.gender", "Practitioner.gender", "Person.gender", "Patient.gender",  }, XPath = "f:RelatedPerson/f:gender | f:Practitioner/f:gender | f:Person/f:gender | f:Patient/f:gender" },
                new SearchParamDefinition() { Resource = "RelatedPerson", Name = "phone", Description = "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): A value in a phone contact\r\n* [RelatedPerson](relatedperson.html): A value in a phone contact\r\n* [Practitioner](practitioner.html): A value in a phone contact\r\n* [Person](person.html): A value in a phone contact\r\n* [Patient](patient.html): A value in a phone contact\r\n", Type = SearchParamType.Token, Path = new string[] { "PractitionerRole.telecom[system.@value='phone']", "RelatedPerson.telecom[system.@value='phone']", "Practitioner.telecom[system.@value='phone']", "Person.telecom[system.@value='phone']", "Patient.telecom[system.@value='phone']",  }, XPath = "f:PractitionerRole/f:telecom[system/@value='phone'] | f:RelatedPerson/f:telecom[system/@value='phone'] | f:Practitioner/f:telecom[system/@value='phone'] | f:Person/f:telecom[system/@value='phone'] | f:Patient/f:telecom[system/@value='phone']" },
                new SearchParamDefinition() { Resource = "RelatedPerson", Name = "phonetic", Description = "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm\r\n* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm\r\n* [Person](person.html): A portion of name using some kind of phonetic matching algorithm\r\n* [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm\r\n", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.name", "Practitioner.name", "Person.name", "Patient.name",  }, XPath = "f:RelatedPerson/f:name | f:Practitioner/f:name | f:Person/f:name | f:Patient/f:name" },
                new SearchParamDefinition() { Resource = "RelatedPerson", Name = "telecom", Description = "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): The value in any kind of contact\r\n* [RelatedPerson](relatedperson.html): The value in any kind of contact\r\n* [Practitioner](practitioner.html): The value in any kind of contact\r\n* [Person](person.html): The value in any kind of contact\r\n* [Patient](patient.html): The value in any kind of telecom details of the patient\r\n", Type = SearchParamType.Token, Path = new string[] { "PractitionerRole.telecom", "RelatedPerson.telecom", "Practitioner.telecom", "Person.telecom", "Patient.telecom",  }, XPath = "f:PractitionerRole/f:telecom | f:RelatedPerson/f:telecom | f:Practitioner/f:telecom | f:Person/f:telecom | f:Patient/f:telecom" },
                new SearchParamDefinition() { Resource = "RelatedPerson", Name = "active", Description = "Indicates if the related person record is active", Type = SearchParamType.Token, Path = new string[] { "RelatedPerson.active",  }, XPath = "f:RelatedPerson/f:active" },
                new SearchParamDefinition() { Resource = "RelatedPerson", Name = "identifier", Description = "An Identifier of the RelatedPerson", Type = SearchParamType.Token, Path = new string[] { "RelatedPerson.identifier",  }, XPath = "f:RelatedPerson/f:identifier" },
                new SearchParamDefinition() { Resource = "RelatedPerson", Name = "name", Description = "A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text", Type = SearchParamType.String, Path = new string[] { "RelatedPerson.name",  }, XPath = "f:RelatedPerson/f:name" },
                new SearchParamDefinition() { Resource = "RelatedPerson", Name = "patient", Description = "The patient this related person is related to", Type = SearchParamType.Reference, Path = new string[] { "RelatedPerson.patient",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:RelatedPerson/f:patient" },
                new SearchParamDefinition() { Resource = "RequestGroup", Name = "author", Description = "The author of the request group", Type = SearchParamType.Reference, Path = new string[] { "RequestGroup.author",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Practitioner }, XPath = "f:RequestGroup/f:author" },
                new SearchParamDefinition() { Resource = "RequestGroup", Name = "authored", Description = "The date the request group was authored", Type = SearchParamType.Date, Path = new string[] { "RequestGroup.authoredOn",  }, XPath = "f:RequestGroup/f:authoredOn" },
                new SearchParamDefinition() { Resource = "RequestGroup", Name = "context", Description = "The context the request group applies to", Type = SearchParamType.Reference, Path = new string[] { "RequestGroup.context",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:RequestGroup/f:context" },
                new SearchParamDefinition() { Resource = "RequestGroup", Name = "definition", Description = "The definition from which the request group is realized", Type = SearchParamType.Reference, Path = new string[] { "RequestGroup.definition",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:RequestGroup/f:definition" },
                new SearchParamDefinition() { Resource = "RequestGroup", Name = "encounter", Description = "The encounter the request group applies to", Type = SearchParamType.Reference, Path = new string[] { "RequestGroup.context",  }, Target = new ResourceType[] { ResourceType.Encounter }, XPath = "f:RequestGroup/f:context" },
                new SearchParamDefinition() { Resource = "RequestGroup", Name = "group-identifier", Description = "The group identifier for the request group", Type = SearchParamType.Token, Path = new string[] { "RequestGroup.groupIdentifier",  }, XPath = "f:RequestGroup/f:groupIdentifier" },
                new SearchParamDefinition() { Resource = "RequestGroup", Name = "identifier", Description = "External identifiers for the request group", Type = SearchParamType.Token, Path = new string[] { "RequestGroup.identifier",  }, XPath = "f:RequestGroup/f:identifier" },
                new SearchParamDefinition() { Resource = "RequestGroup", Name = "intent", Description = "The intent of the request group", Type = SearchParamType.Token, Path = new string[] { "RequestGroup.intent",  }, XPath = "f:RequestGroup/f:intent" },
                new SearchParamDefinition() { Resource = "RequestGroup", Name = "participant", Description = "The participant in the requests in the group", Type = SearchParamType.Reference, Path = new string[] { "RequestGroup.action.participant",  }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.Person, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:RequestGroup/f:action/f:participant" },
                new SearchParamDefinition() { Resource = "RequestGroup", Name = "patient", Description = "The identity of a patient to search for request groups", Type = SearchParamType.Reference, Path = new string[] { "RequestGroup.subject",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:RequestGroup/f:subject" },
                new SearchParamDefinition() { Resource = "RequestGroup", Name = "priority", Description = "The priority of the request group", Type = SearchParamType.Token, Path = new string[] { "RequestGroup.priority",  }, XPath = "f:RequestGroup/f:priority" },
                new SearchParamDefinition() { Resource = "RequestGroup", Name = "status", Description = "The status of the request group", Type = SearchParamType.Token, Path = new string[] { "RequestGroup.status",  }, XPath = "f:RequestGroup/f:status" },
                new SearchParamDefinition() { Resource = "RequestGroup", Name = "subject", Description = "The subject that the request group is about", Type = SearchParamType.Reference, Path = new string[] { "RequestGroup.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:RequestGroup/f:subject" },
                new SearchParamDefinition() { Resource = "ResearchStudy", Name = "category", Description = "Classifications for the study", Type = SearchParamType.Token, Path = new string[] { "ResearchStudy.category",  }, XPath = "f:ResearchStudy/f:category" },
                new SearchParamDefinition() { Resource = "ResearchStudy", Name = "date", Description = "When the study began and ended", Type = SearchParamType.Date, Path = new string[] { "ResearchStudy.period",  }, XPath = "f:ResearchStudy/f:period" },
                new SearchParamDefinition() { Resource = "ResearchStudy", Name = "focus", Description = "Drugs, devices, conditions, etc. under study", Type = SearchParamType.Token, Path = new string[] { "ResearchStudy.focus",  }, XPath = "f:ResearchStudy/f:focus" },
                new SearchParamDefinition() { Resource = "ResearchStudy", Name = "identifier", Description = "Business Identifier for study", Type = SearchParamType.Token, Path = new string[] { "ResearchStudy.identifier",  }, XPath = "f:ResearchStudy/f:identifier" },
                new SearchParamDefinition() { Resource = "ResearchStudy", Name = "jurisdiction", Description = "Geographic region(s) for study", Type = SearchParamType.Token, Path = new string[] { "ResearchStudy.jurisdiction",  }, XPath = "f:ResearchStudy/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "ResearchStudy", Name = "keyword", Description = "Used to search for the study", Type = SearchParamType.Token, Path = new string[] { "ResearchStudy.keyword",  }, XPath = "f:ResearchStudy/f:keyword" },
                new SearchParamDefinition() { Resource = "ResearchStudy", Name = "partof", Description = "Part of larger study", Type = SearchParamType.Reference, Path = new string[] { "ResearchStudy.partOf",  }, Target = new ResourceType[] { ResourceType.ResearchStudy }, XPath = "f:ResearchStudy/f:partOf" },
                new SearchParamDefinition() { Resource = "ResearchStudy", Name = "principalinvestigator", Description = "The individual responsible for the study", Type = SearchParamType.Reference, Path = new string[] { "ResearchStudy.principalInvestigator",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:ResearchStudy/f:principalInvestigator" },
                new SearchParamDefinition() { Resource = "ResearchStudy", Name = "protocol", Description = "Steps followed in executing study", Type = SearchParamType.Reference, Path = new string[] { "ResearchStudy.protocol",  }, Target = new ResourceType[] { ResourceType.PlanDefinition }, XPath = "f:ResearchStudy/f:protocol" },
                new SearchParamDefinition() { Resource = "ResearchStudy", Name = "site", Description = "Location involved in study execution", Type = SearchParamType.Reference, Path = new string[] { "ResearchStudy.site",  }, Target = new ResourceType[] { ResourceType.Location }, XPath = "f:ResearchStudy/f:site" },
                new SearchParamDefinition() { Resource = "ResearchStudy", Name = "sponsor", Description = "Organization responsible for the study", Type = SearchParamType.Reference, Path = new string[] { "ResearchStudy.sponsor",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:ResearchStudy/f:sponsor" },
                new SearchParamDefinition() { Resource = "ResearchStudy", Name = "status", Description = "draft | in-progress | suspended | stopped | completed | entered-in-error", Type = SearchParamType.Token, Path = new string[] { "ResearchStudy.status",  }, XPath = "f:ResearchStudy/f:status" },
                new SearchParamDefinition() { Resource = "ResearchStudy", Name = "title", Description = "Name for this study", Type = SearchParamType.String, Path = new string[] { "ResearchStudy.title",  }, XPath = "f:ResearchStudy/f:title" },
                new SearchParamDefinition() { Resource = "ResearchSubject", Name = "date", Description = "Start and end of participation", Type = SearchParamType.Date, Path = new string[] { "ResearchSubject.period",  }, XPath = "f:ResearchSubject/f:period" },
                new SearchParamDefinition() { Resource = "ResearchSubject", Name = "identifier", Description = "Business Identifier for research subject", Type = SearchParamType.Token, Path = new string[] { "ResearchSubject.identifier",  }, XPath = "f:ResearchSubject/f:identifier" },
                new SearchParamDefinition() { Resource = "ResearchSubject", Name = "individual", Description = "Who is part of study", Type = SearchParamType.Reference, Path = new string[] { "ResearchSubject.individual",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:ResearchSubject/f:individual" },
                new SearchParamDefinition() { Resource = "ResearchSubject", Name = "patient", Description = "Who is part of study", Type = SearchParamType.Reference, Path = new string[] { "ResearchSubject.individual",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:ResearchSubject/f:individual" },
                new SearchParamDefinition() { Resource = "ResearchSubject", Name = "status", Description = "candidate | enrolled | active | suspended | withdrawn | completed", Type = SearchParamType.Token, Path = new string[] { "ResearchSubject.status",  }, XPath = "f:ResearchSubject/f:status" },
                new SearchParamDefinition() { Resource = "RiskAssessment", Name = "date", Description = "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n", Type = SearchParamType.Date, Path = new string[] { "Consent.dateTime", "SupplyRequest.authoredOn", "RiskAssessment.occurrenceDateTime", "CareTeam.period", "FamilyMemberHistory.date", "Encounter.period", "AllergyIntolerance.assertedDate", "CarePlan.period", "EpisodeOfCare.period", "Procedure.performedDateTime", "Procedure.performedPeriod", "List.date", "Immunization.date", "Flag.period", "Observation.effectiveDateTime", "Observation.effectivePeriod", "DiagnosticReport.effectiveDateTime", "DiagnosticReport.effectivePeriod", "Composition.date", "DetectedIssue.date", "ClinicalImpression.date",  }, XPath = "f:Consent/f:dateTime | f:SupplyRequest/f:authoredOn | f:RiskAssessment/f:occurrenceDateTime | f:CareTeam/f:period | f:FamilyMemberHistory/f:date | f:Encounter/f:period | f:AllergyIntolerance/f:assertedDate | f:CarePlan/f:period | f:EpisodeOfCare/f:period | f:Procedure/f:performedDateTime | f:Procedure/f:performedPeriod | f:List/f:date | f:Immunization/f:date | f:Flag/f:period | f:Observation/f:effectiveDateTime | f:Observation/f:effectivePeriod | f:DiagnosticReport/f:effectiveDateTime | f:DiagnosticReport/f:effectivePeriod | f:Composition/f:date | f:DetectedIssue/f:date | f:ClinicalImpression/f:date" },
                new SearchParamDefinition() { Resource = "RiskAssessment", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "RiskAssessment", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "RiskAssessment", Name = "encounter", Description = "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition\r\n", Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.context.encounter", "RiskAssessment.context", "DeviceRequest.context", "Procedure.context", "List.encounter", "VisionPrescription.encounter", "ProcedureRequest.context", "Flag.encounter", "Observation.context", "DiagnosticReport.context", "NutritionOrder.encounter", "Composition.encounter",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:DocumentReference/f:context/f:encounter | f:RiskAssessment/f:context | f:DeviceRequest/f:context | f:Procedure/f:context | f:List/f:encounter | f:VisionPrescription/f:encounter | f:ProcedureRequest/f:context | f:Flag/f:encounter | f:Observation/f:context | f:DiagnosticReport/f:context | f:NutritionOrder/f:encounter | f:Composition/f:encounter" },
                new SearchParamDefinition() { Resource = "RiskAssessment", Name = "condition", Description = "Condition assessed", Type = SearchParamType.Reference, Path = new string[] { "RiskAssessment.condition",  }, Target = new ResourceType[] { ResourceType.Condition }, XPath = "f:RiskAssessment/f:condition" },
                new SearchParamDefinition() { Resource = "RiskAssessment", Name = "method", Description = "Evaluation mechanism", Type = SearchParamType.Token, Path = new string[] { "RiskAssessment.method",  }, XPath = "f:RiskAssessment/f:method" },
                new SearchParamDefinition() { Resource = "RiskAssessment", Name = "performer", Description = "Who did assessment?", Type = SearchParamType.Reference, Path = new string[] { "RiskAssessment.performer",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Practitioner }, XPath = "f:RiskAssessment/f:performer" },
                new SearchParamDefinition() { Resource = "RiskAssessment", Name = "probability", Description = "Likelihood of specified outcome", Type = SearchParamType.Number, Path = new string[] { "RiskAssessment.prediction.probabilityDecimal", "RiskAssessment.prediction.probabilityRange",  }, XPath = "f:RiskAssessment/f:prediction/f:probabilityDecimal | f:RiskAssessment/f:prediction/f:probabilityRange" },
                new SearchParamDefinition() { Resource = "RiskAssessment", Name = "risk", Description = "Likelihood of specified outcome as a qualitative value", Type = SearchParamType.Token, Path = new string[] { "RiskAssessment.prediction.qualitativeRisk",  }, XPath = "f:RiskAssessment/f:prediction/f:qualitativeRisk" },
                new SearchParamDefinition() { Resource = "RiskAssessment", Name = "subject", Description = "Who/what does assessment apply to?", Type = SearchParamType.Reference, Path = new string[] { "RiskAssessment.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:RiskAssessment/f:subject" },
                new SearchParamDefinition() { Resource = "Schedule", Name = "active", Description = "Is the schedule in active use", Type = SearchParamType.Token, Path = new string[] { "Schedule.active",  }, XPath = "f:Schedule/f:active" },
                new SearchParamDefinition() { Resource = "Schedule", Name = "actor", Description = "The individual(HealthcareService, Practitioner, Location, ...) to find a Schedule for", Type = SearchParamType.Reference, Path = new string[] { "Schedule.actor",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.HealthcareService, ResourceType.Location, ResourceType.Patient, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.RelatedPerson }, XPath = "f:Schedule/f:actor" },
                new SearchParamDefinition() { Resource = "Schedule", Name = "date", Description = "Search for Schedule resources that have a period that contains this date specified", Type = SearchParamType.Date, Path = new string[] { "Schedule.planningHorizon",  }, XPath = "f:Schedule/f:planningHorizon" },
                new SearchParamDefinition() { Resource = "Schedule", Name = "identifier", Description = "A Schedule Identifier", Type = SearchParamType.Token, Path = new string[] { "Schedule.identifier",  }, XPath = "f:Schedule/f:identifier" },
                new SearchParamDefinition() { Resource = "Schedule", Name = "type", Description = "The type of appointments that can be booked into associated slot(s)", Type = SearchParamType.Token, Path = new string[] { "Schedule.serviceType",  }, XPath = "f:Schedule/f:serviceType" },
                new SearchParamDefinition() { Resource = "SearchParameter", Name = "base", Description = "The resource type(s) this search parameter applies to", Type = SearchParamType.Token, Path = new string[] { "SearchParameter.base",  }, XPath = "f:SearchParameter/f:base" },
                new SearchParamDefinition() { Resource = "SearchParameter", Name = "code", Description = "Code used in URL", Type = SearchParamType.Token, Path = new string[] { "SearchParameter.code",  }, XPath = "f:SearchParameter/f:code" },
                new SearchParamDefinition() { Resource = "SearchParameter", Name = "component", Description = "Defines how the part works", Type = SearchParamType.Reference, Path = new string[] { "SearchParameter.component.definition",  }, Target = new ResourceType[] { ResourceType.SearchParameter }, XPath = "f:SearchParameter/f:component/f:definition" },
                new SearchParamDefinition() { Resource = "SearchParameter", Name = "date", Description = "The search parameter publication date", Type = SearchParamType.Date, Path = new string[] { "SearchParameter.date",  }, XPath = "f:SearchParameter/f:date" },
                new SearchParamDefinition() { Resource = "SearchParameter", Name = "derived-from", Description = "Original Definition for the search parameter", Type = SearchParamType.Uri, Path = new string[] { "SearchParameter.derivedFrom",  }, XPath = "f:SearchParameter/f:derivedFrom" },
                new SearchParamDefinition() { Resource = "SearchParameter", Name = "description", Description = "The description of the search parameter", Type = SearchParamType.String, Path = new string[] { "SearchParameter.description",  }, XPath = "f:SearchParameter/f:description" },
                new SearchParamDefinition() { Resource = "SearchParameter", Name = "jurisdiction", Description = "Intended jurisdiction for the search parameter", Type = SearchParamType.Token, Path = new string[] { "SearchParameter.jurisdiction",  }, XPath = "f:SearchParameter/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "SearchParameter", Name = "name", Description = "Computationally friendly name of the search parameter", Type = SearchParamType.String, Path = new string[] { "SearchParameter.name",  }, XPath = "f:SearchParameter/f:name" },
                new SearchParamDefinition() { Resource = "SearchParameter", Name = "publisher", Description = "Name of the publisher of the search parameter", Type = SearchParamType.String, Path = new string[] { "SearchParameter.publisher",  }, XPath = "f:SearchParameter/f:publisher" },
                new SearchParamDefinition() { Resource = "SearchParameter", Name = "status", Description = "The current status of the search parameter", Type = SearchParamType.Token, Path = new string[] { "SearchParameter.status",  }, XPath = "f:SearchParameter/f:status" },
                new SearchParamDefinition() { Resource = "SearchParameter", Name = "target", Description = "Types of resource (if a resource reference)", Type = SearchParamType.Token, Path = new string[] { "SearchParameter.target",  }, XPath = "f:SearchParameter/f:target" },
                new SearchParamDefinition() { Resource = "SearchParameter", Name = "type", Description = "number | date | string | token | reference | composite | quantity | uri", Type = SearchParamType.Token, Path = new string[] { "SearchParameter.type",  }, XPath = "f:SearchParameter/f:type" },
                new SearchParamDefinition() { Resource = "SearchParameter", Name = "url", Description = "The uri that identifies the search parameter", Type = SearchParamType.Uri, Path = new string[] { "SearchParameter.url",  }, XPath = "f:SearchParameter/f:url" },
                new SearchParamDefinition() { Resource = "SearchParameter", Name = "version", Description = "The business version of the search parameter", Type = SearchParamType.Token, Path = new string[] { "SearchParameter.version",  }, XPath = "f:SearchParameter/f:version" },
                new SearchParamDefinition() { Resource = "Sequence", Name = "chromosome", Description = "Chromosome number of the reference sequence", Type = SearchParamType.Token, Path = new string[] { "Sequence.referenceSeq.chromosome",  }, XPath = "f:Sequence/f:referenceSeq/f:chromosome" },
                new SearchParamDefinition() { Resource = "Sequence", Name = "coordinate", Description = "Search parameter for region of the reference DNA sequence string. This will refer to part of a locus or part of a gene where search region will be represented in 1-based system. Since the coordinateSystem can either be 0-based or 1-based, this search query will include the result of both coordinateSystem that contains the equivalent segment of the gene or whole genome sequence. For example, a search for sequence can be represented as `coordinate=1$lt345$gt123`, this means it will search for the Sequence resource on chromosome 1 and with position >123 and <345, where in 1-based system resource, all strings within region 1:124-344 will be revealed, while in 0-based system resource, all strings within region 1:123-344 will be revealed. You may want to check detail about 0-based v.s. 1-based above.", Type = SearchParamType.Composite, Path = new string[] {  } },
                new SearchParamDefinition() { Resource = "Sequence", Name = "end", Description = "End position (0-based exclusive, which menas the acid at this position will not be included, 1-based inclusive, which means the acid at this position will be included) of the reference sequence.", Type = SearchParamType.Number, Path = new string[] { "Sequence.referenceSeq.windowEnd",  }, XPath = "f:Sequence/f:referenceSeq/f:windowEnd" },
                new SearchParamDefinition() { Resource = "Sequence", Name = "identifier", Description = "The unique identity for a particular sequence", Type = SearchParamType.Token, Path = new string[] { "Sequence.identifier",  }, XPath = "f:Sequence/f:identifier" },
                new SearchParamDefinition() { Resource = "Sequence", Name = "patient", Description = "The subject that the observation is about", Type = SearchParamType.Reference, Path = new string[] { "Sequence.patient",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:Sequence/f:patient" },
                new SearchParamDefinition() { Resource = "Sequence", Name = "start", Description = "Start position (0-based inclusive, 1-based inclusive, that means the nucleic acid or amino acid at this position will be included) of the reference sequence.", Type = SearchParamType.Number, Path = new string[] { "Sequence.referenceSeq.windowStart",  }, XPath = "f:Sequence/f:referenceSeq/f:windowStart" },
                new SearchParamDefinition() { Resource = "Sequence", Name = "type", Description = "Amino Acid Sequence/ DNA Sequence / RNA Sequence", Type = SearchParamType.Token, Path = new string[] { "Sequence.type",  }, XPath = "f:Sequence/f:type" },
                new SearchParamDefinition() { Resource = "ServiceDefinition", Name = "composed-of", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "ServiceDefinition.relatedArtifact[type.@value='composed-of'].resource",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:ServiceDefinition/f:relatedArtifact[f:type/@value='composed-of']/f:resource" },
                new SearchParamDefinition() { Resource = "ServiceDefinition", Name = "date", Description = "The service definition publication date", Type = SearchParamType.Date, Path = new string[] { "ServiceDefinition.date",  }, XPath = "f:ServiceDefinition/f:date" },
                new SearchParamDefinition() { Resource = "ServiceDefinition", Name = "depends-on", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "ServiceDefinition.relatedArtifact[type.@value='depends-on'].resource",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:ServiceDefinition/f:relatedArtifact[f:type/@value='depends-on']/f:resource" },
                new SearchParamDefinition() { Resource = "ServiceDefinition", Name = "derived-from", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "ServiceDefinition.relatedArtifact[type.@value='derived-from'].resource",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:ServiceDefinition/f:relatedArtifact[f:type/@value='derived-from']/f:resource" },
                new SearchParamDefinition() { Resource = "ServiceDefinition", Name = "description", Description = "The description of the service definition", Type = SearchParamType.String, Path = new string[] { "ServiceDefinition.description",  }, XPath = "f:ServiceDefinition/f:description" },
                new SearchParamDefinition() { Resource = "ServiceDefinition", Name = "effective", Description = "The time during which the service definition is intended to be in use", Type = SearchParamType.Date, Path = new string[] { "ServiceDefinition.effectivePeriod",  }, XPath = "f:ServiceDefinition/f:effectivePeriod" },
                new SearchParamDefinition() { Resource = "ServiceDefinition", Name = "identifier", Description = "External identifier for the service definition", Type = SearchParamType.Token, Path = new string[] { "ServiceDefinition.identifier",  }, XPath = "f:ServiceDefinition/f:identifier" },
                new SearchParamDefinition() { Resource = "ServiceDefinition", Name = "jurisdiction", Description = "Intended jurisdiction for the service definition", Type = SearchParamType.Token, Path = new string[] { "ServiceDefinition.jurisdiction",  }, XPath = "f:ServiceDefinition/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "ServiceDefinition", Name = "name", Description = "Computationally friendly name of the service definition", Type = SearchParamType.String, Path = new string[] { "ServiceDefinition.name",  }, XPath = "f:ServiceDefinition/f:name" },
                new SearchParamDefinition() { Resource = "ServiceDefinition", Name = "predecessor", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "ServiceDefinition.relatedArtifact[type.@value='predecessor'].resource",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:ServiceDefinition/f:relatedArtifact[f:type/@value='predecessor']/f:resource" },
                new SearchParamDefinition() { Resource = "ServiceDefinition", Name = "publisher", Description = "Name of the publisher of the service definition", Type = SearchParamType.String, Path = new string[] { "ServiceDefinition.publisher",  }, XPath = "f:ServiceDefinition/f:publisher" },
                new SearchParamDefinition() { Resource = "ServiceDefinition", Name = "status", Description = "The current status of the service definition", Type = SearchParamType.Token, Path = new string[] { "ServiceDefinition.status",  }, XPath = "f:ServiceDefinition/f:status" },
                new SearchParamDefinition() { Resource = "ServiceDefinition", Name = "successor", Description = "What resource is being referenced", Type = SearchParamType.Reference, Path = new string[] { "ServiceDefinition.relatedArtifact[type.@value='successor'].resource",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:ServiceDefinition/f:relatedArtifact[f:type/@value='successor']/f:resource" },
                new SearchParamDefinition() { Resource = "ServiceDefinition", Name = "title", Description = "The human-friendly name of the service definition", Type = SearchParamType.String, Path = new string[] { "ServiceDefinition.title",  }, XPath = "f:ServiceDefinition/f:title" },
                new SearchParamDefinition() { Resource = "ServiceDefinition", Name = "topic", Description = "Topics associated with the module", Type = SearchParamType.Token, Path = new string[] { "ServiceDefinition.topic",  }, XPath = "f:ServiceDefinition/f:topic" },
                new SearchParamDefinition() { Resource = "ServiceDefinition", Name = "url", Description = "The uri that identifies the service definition", Type = SearchParamType.Uri, Path = new string[] { "ServiceDefinition.url",  }, XPath = "f:ServiceDefinition/f:url" },
                new SearchParamDefinition() { Resource = "ServiceDefinition", Name = "version", Description = "The business version of the service definition", Type = SearchParamType.Token, Path = new string[] { "ServiceDefinition.version",  }, XPath = "f:ServiceDefinition/f:version" },
                new SearchParamDefinition() { Resource = "Slot", Name = "identifier", Description = "A Slot Identifier", Type = SearchParamType.Token, Path = new string[] { "Slot.identifier",  }, XPath = "f:Slot/f:identifier" },
                new SearchParamDefinition() { Resource = "Slot", Name = "schedule", Description = "The Schedule Resource that we are seeking a slot within", Type = SearchParamType.Reference, Path = new string[] { "Slot.schedule",  }, Target = new ResourceType[] { ResourceType.Schedule }, XPath = "f:Slot/f:schedule" },
                new SearchParamDefinition() { Resource = "Slot", Name = "slot-type", Description = "The type of appointments that can be booked into the slot", Type = SearchParamType.Token, Path = new string[] { "Slot.serviceType",  }, XPath = "f:Slot/f:serviceType" },
                new SearchParamDefinition() { Resource = "Slot", Name = "start", Description = "Appointment date/time.", Type = SearchParamType.Date, Path = new string[] { "Slot.start",  }, XPath = "f:Slot/f:start" },
                new SearchParamDefinition() { Resource = "Slot", Name = "status", Description = "The free/busy status of the appointment", Type = SearchParamType.Token, Path = new string[] { "Slot.status",  }, XPath = "f:Slot/f:status" },
                new SearchParamDefinition() { Resource = "Specimen", Name = "accession", Description = "The accession number associated with the specimen", Type = SearchParamType.Token, Path = new string[] { "Specimen.accessionIdentifier",  }, XPath = "f:Specimen/f:accessionIdentifier" },
                new SearchParamDefinition() { Resource = "Specimen", Name = "bodysite", Description = "The code for the body site from where the specimen originated", Type = SearchParamType.Token, Path = new string[] { "Specimen.collection.bodySite",  }, XPath = "f:Specimen/f:collection/f:bodySite" },
                new SearchParamDefinition() { Resource = "Specimen", Name = "collected", Description = "The date the specimen was collected", Type = SearchParamType.Date, Path = new string[] { "Specimen.collection.collectedDateTime", "Specimen.collection.collectedPeriod",  }, XPath = "f:Specimen/f:collection/f:collectedDateTime | f:Specimen/f:collection/f:collectedPeriod" },
                new SearchParamDefinition() { Resource = "Specimen", Name = "collector", Description = "Who collected the specimen", Type = SearchParamType.Reference, Path = new string[] { "Specimen.collection.collector",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:Specimen/f:collection/f:collector" },
                new SearchParamDefinition() { Resource = "Specimen", Name = "container", Description = "The kind of specimen container", Type = SearchParamType.Token, Path = new string[] { "Specimen.container.type",  }, XPath = "f:Specimen/f:container/f:type" },
                new SearchParamDefinition() { Resource = "Specimen", Name = "container-id", Description = "The unique identifier associated with the specimen container", Type = SearchParamType.Token, Path = new string[] { "Specimen.container.identifier",  }, XPath = "f:Specimen/f:container/f:identifier" },
                new SearchParamDefinition() { Resource = "Specimen", Name = "identifier", Description = "The unique identifier associated with the specimen", Type = SearchParamType.Token, Path = new string[] { "Specimen.identifier",  }, XPath = "f:Specimen/f:identifier" },
                new SearchParamDefinition() { Resource = "Specimen", Name = "parent", Description = "The parent of the specimen", Type = SearchParamType.Reference, Path = new string[] { "Specimen.parent",  }, Target = new ResourceType[] { ResourceType.Specimen }, XPath = "f:Specimen/f:parent" },
                new SearchParamDefinition() { Resource = "Specimen", Name = "patient", Description = "The patient the specimen comes from", Type = SearchParamType.Reference, Path = new string[] { "Specimen.subject",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:Specimen/f:subject" },
                new SearchParamDefinition() { Resource = "Specimen", Name = "status", Description = "available | unavailable | unsatisfactory | entered-in-error", Type = SearchParamType.Token, Path = new string[] { "Specimen.status",  }, XPath = "f:Specimen/f:status" },
                new SearchParamDefinition() { Resource = "Specimen", Name = "subject", Description = "The subject of the specimen", Type = SearchParamType.Reference, Path = new string[] { "Specimen.subject",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Patient, ResourceType.Substance }, XPath = "f:Specimen/f:subject" },
                new SearchParamDefinition() { Resource = "Specimen", Name = "type", Description = "The specimen type", Type = SearchParamType.Token, Path = new string[] { "Specimen.type",  }, XPath = "f:Specimen/f:type" },
                new SearchParamDefinition() { Resource = "StructureDefinition", Name = "abstract", Description = "Whether the structure is abstract", Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.abstract",  }, XPath = "f:StructureDefinition/f:abstract" },
                new SearchParamDefinition() { Resource = "StructureDefinition", Name = "base", Description = "Definition that this type is constrained/specialized from", Type = SearchParamType.Uri, Path = new string[] { "StructureDefinition.baseDefinition",  }, XPath = "f:StructureDefinition/f:baseDefinition" },
                new SearchParamDefinition() { Resource = "StructureDefinition", Name = "base-path", Description = "Path that identifies the base element", Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.snapshot.element.base.path", "StructureDefinition.differential.element.base.path",  }, XPath = "f:StructureDefinition/f:snapshot/f:element/f:base/f:path | f:StructureDefinition/f:differential/f:element/f:base/f:path" },
                new SearchParamDefinition() { Resource = "StructureDefinition", Name = "context-type", Description = "resource | datatype | extension", Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.contextType",  }, XPath = "f:StructureDefinition/f:contextType" },
                new SearchParamDefinition() { Resource = "StructureDefinition", Name = "date", Description = "The structure definition publication date", Type = SearchParamType.Date, Path = new string[] { "StructureDefinition.date",  }, XPath = "f:StructureDefinition/f:date" },
                new SearchParamDefinition() { Resource = "StructureDefinition", Name = "derivation", Description = "specialization | constraint - How relates to base definition", Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.derivation",  }, XPath = "f:StructureDefinition/f:derivation" },
                new SearchParamDefinition() { Resource = "StructureDefinition", Name = "description", Description = "The description of the structure definition", Type = SearchParamType.String, Path = new string[] { "StructureDefinition.description",  }, XPath = "f:StructureDefinition/f:description" },
                new SearchParamDefinition() { Resource = "StructureDefinition", Name = "experimental", Description = "For testing purposes, not real usage", Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.experimental",  }, XPath = "f:StructureDefinition/f:experimental" },
                new SearchParamDefinition() { Resource = "StructureDefinition", Name = "ext-context", Description = "Where the extension can be used in instances", Type = SearchParamType.String, Path = new string[] { "StructureDefinition.context",  }, XPath = "f:StructureDefinition/f:context" },
                new SearchParamDefinition() { Resource = "StructureDefinition", Name = "identifier", Description = "External identifier for the structure definition", Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.identifier",  }, XPath = "f:StructureDefinition/f:identifier" },
                new SearchParamDefinition() { Resource = "StructureDefinition", Name = "jurisdiction", Description = "Intended jurisdiction for the structure definition", Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.jurisdiction",  }, XPath = "f:StructureDefinition/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "StructureDefinition", Name = "keyword", Description = "A code for the profile", Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.keyword",  }, XPath = "f:StructureDefinition/f:keyword" },
                new SearchParamDefinition() { Resource = "StructureDefinition", Name = "kind", Description = "primitive-type | complex-type | resource | logical", Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.kind",  }, XPath = "f:StructureDefinition/f:kind" },
                new SearchParamDefinition() { Resource = "StructureDefinition", Name = "name", Description = "Computationally friendly name of the structure definition", Type = SearchParamType.String, Path = new string[] { "StructureDefinition.name",  }, XPath = "f:StructureDefinition/f:name" },
                new SearchParamDefinition() { Resource = "StructureDefinition", Name = "path", Description = "A path that is constrained in the profile", Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.snapshot.element.path", "StructureDefinition.differential.element.path",  }, XPath = "f:StructureDefinition/f:snapshot/f:element/f:path | f:StructureDefinition/f:differential/f:element/f:path" },
                new SearchParamDefinition() { Resource = "StructureDefinition", Name = "publisher", Description = "Name of the publisher of the structure definition", Type = SearchParamType.String, Path = new string[] { "StructureDefinition.publisher",  }, XPath = "f:StructureDefinition/f:publisher" },
                new SearchParamDefinition() { Resource = "StructureDefinition", Name = "status", Description = "The current status of the structure definition", Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.status",  }, XPath = "f:StructureDefinition/f:status" },
                new SearchParamDefinition() { Resource = "StructureDefinition", Name = "title", Description = "The human-friendly name of the structure definition", Type = SearchParamType.String, Path = new string[] { "StructureDefinition.title",  }, XPath = "f:StructureDefinition/f:title" },
                new SearchParamDefinition() { Resource = "StructureDefinition", Name = "type", Description = "Type defined or constrained by this structure", Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.type",  }, XPath = "f:StructureDefinition/f:type" },
                new SearchParamDefinition() { Resource = "StructureDefinition", Name = "url", Description = "The uri that identifies the structure definition", Type = SearchParamType.Uri, Path = new string[] { "StructureDefinition.url",  }, XPath = "f:StructureDefinition/f:url" },
                new SearchParamDefinition() { Resource = "StructureDefinition", Name = "valueset", Description = "A vocabulary binding reference", Type = SearchParamType.Reference, Path = new string[] { "StructureDefinition.snapshot.element.binding.valueSetUri", "StructureDefinition.snapshot.element.binding.valueSetReference",  }, Target = new ResourceType[] { ResourceType.ValueSet }, XPath = "f:StructureDefinition/f:snapshot/f:element/f:binding/f:valueSetUri | f:StructureDefinition/f:snapshot/f:element/f:binding/f:valueSetReference" },
                new SearchParamDefinition() { Resource = "StructureDefinition", Name = "version", Description = "The business version of the structure definition", Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.version",  }, XPath = "f:StructureDefinition/f:version" },
                new SearchParamDefinition() { Resource = "StructureMap", Name = "date", Description = "The structure map publication date", Type = SearchParamType.Date, Path = new string[] { "StructureMap.date",  }, XPath = "f:StructureMap/f:date" },
                new SearchParamDefinition() { Resource = "StructureMap", Name = "description", Description = "The description of the structure map", Type = SearchParamType.String, Path = new string[] { "StructureMap.description",  }, XPath = "f:StructureMap/f:description" },
                new SearchParamDefinition() { Resource = "StructureMap", Name = "identifier", Description = "External identifier for the structure map", Type = SearchParamType.Token, Path = new string[] { "StructureMap.identifier",  }, XPath = "f:StructureMap/f:identifier" },
                new SearchParamDefinition() { Resource = "StructureMap", Name = "jurisdiction", Description = "Intended jurisdiction for the structure map", Type = SearchParamType.Token, Path = new string[] { "StructureMap.jurisdiction",  }, XPath = "f:StructureMap/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "StructureMap", Name = "name", Description = "Computationally friendly name of the structure map", Type = SearchParamType.String, Path = new string[] { "StructureMap.name",  }, XPath = "f:StructureMap/f:name" },
                new SearchParamDefinition() { Resource = "StructureMap", Name = "publisher", Description = "Name of the publisher of the structure map", Type = SearchParamType.String, Path = new string[] { "StructureMap.publisher",  }, XPath = "f:StructureMap/f:publisher" },
                new SearchParamDefinition() { Resource = "StructureMap", Name = "status", Description = "The current status of the structure map", Type = SearchParamType.Token, Path = new string[] { "StructureMap.status",  }, XPath = "f:StructureMap/f:status" },
                new SearchParamDefinition() { Resource = "StructureMap", Name = "title", Description = "The human-friendly name of the structure map", Type = SearchParamType.String, Path = new string[] { "StructureMap.title",  }, XPath = "f:StructureMap/f:title" },
                new SearchParamDefinition() { Resource = "StructureMap", Name = "url", Description = "The uri that identifies the structure map", Type = SearchParamType.Uri, Path = new string[] { "StructureMap.url",  }, XPath = "f:StructureMap/f:url" },
                new SearchParamDefinition() { Resource = "StructureMap", Name = "version", Description = "The business version of the structure map", Type = SearchParamType.Token, Path = new string[] { "StructureMap.version",  }, XPath = "f:StructureMap/f:version" },
                new SearchParamDefinition() { Resource = "Subscription", Name = "add-tag", Description = "A tag to be added to the resource matching the criteria", Type = SearchParamType.Token, Path = new string[] { "Subscription.tag",  }, XPath = "f:Subscription/f:tag" },
                new SearchParamDefinition() { Resource = "Subscription", Name = "contact", Description = "Contact details for the subscription", Type = SearchParamType.Token, Path = new string[] { "Subscription.contact",  }, XPath = "f:Subscription/f:contact" },
                new SearchParamDefinition() { Resource = "Subscription", Name = "criteria", Description = "The search rules used to determine when to send a notification", Type = SearchParamType.String, Path = new string[] { "Subscription.criteria",  }, XPath = "f:Subscription/f:criteria" },
                new SearchParamDefinition() { Resource = "Subscription", Name = "payload", Description = "The mime-type of the notification payload", Type = SearchParamType.String, Path = new string[] { "Subscription.channel.payload",  }, XPath = "f:Subscription/f:channel/f:payload" },
                new SearchParamDefinition() { Resource = "Subscription", Name = "status", Description = "The current state of the subscription", Type = SearchParamType.Token, Path = new string[] { "Subscription.status",  }, XPath = "f:Subscription/f:status" },
                new SearchParamDefinition() { Resource = "Subscription", Name = "type", Description = "The type of channel for the sent notifications", Type = SearchParamType.Token, Path = new string[] { "Subscription.channel.type",  }, XPath = "f:Subscription/f:channel/f:type" },
                new SearchParamDefinition() { Resource = "Subscription", Name = "url", Description = "The uri that will receive the notifications", Type = SearchParamType.Uri, Path = new string[] { "Subscription.channel.endpoint",  }, XPath = "f:Subscription/f:channel/f:endpoint" },
                new SearchParamDefinition() { Resource = "Substance", Name = "category", Description = "The category of the substance", Type = SearchParamType.Token, Path = new string[] { "Substance.category",  }, XPath = "f:Substance/f:category" },
                new SearchParamDefinition() { Resource = "Substance", Name = "code", Description = "The code of the substance or ingredient", Type = SearchParamType.Token, Path = new string[] { "Substance.code", "Substance.ingredient.substanceCodeableConcept",  }, XPath = "f:Substance/f:code | f:Substance/f:ingredient/f:substanceCodeableConcept" },
                new SearchParamDefinition() { Resource = "Substance", Name = "container-identifier", Description = "Identifier of the package/container", Type = SearchParamType.Token, Path = new string[] { "Substance.instance.identifier",  }, XPath = "f:Substance/f:instance/f:identifier" },
                new SearchParamDefinition() { Resource = "Substance", Name = "expiry", Description = "Expiry date of package or container of substance", Type = SearchParamType.Date, Path = new string[] { "Substance.instance.expiry",  }, XPath = "f:Substance/f:instance/f:expiry" },
                new SearchParamDefinition() { Resource = "Substance", Name = "identifier", Description = "Unique identifier for the substance", Type = SearchParamType.Token, Path = new string[] { "Substance.identifier",  }, XPath = "f:Substance/f:identifier" },
                new SearchParamDefinition() { Resource = "Substance", Name = "quantity", Description = "Amount of substance in the package", Type = SearchParamType.Quantity, Path = new string[] { "Substance.instance.quantity",  }, XPath = "f:Substance/f:instance/f:quantity" },
                new SearchParamDefinition() { Resource = "Substance", Name = "status", Description = "active | inactive | entered-in-error", Type = SearchParamType.Token, Path = new string[] { "Substance.status",  }, XPath = "f:Substance/f:status" },
                new SearchParamDefinition() { Resource = "Substance", Name = "substance-reference", Description = "A component of the substance", Type = SearchParamType.Reference, Path = new string[] { "Substance.ingredient.substanceReference",  }, Target = new ResourceType[] { ResourceType.Substance }, XPath = "f:Substance/f:ingredient/f:substanceReference" },
                new SearchParamDefinition() { Resource = "SupplyDelivery", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "SupplyDelivery", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "SupplyDelivery", Name = "receiver", Description = "Who collected the Supply", Type = SearchParamType.Reference, Path = new string[] { "SupplyDelivery.receiver",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:SupplyDelivery/f:receiver" },
                new SearchParamDefinition() { Resource = "SupplyDelivery", Name = "status", Description = "in-progress | completed | abandoned | entered-in-error", Type = SearchParamType.Token, Path = new string[] { "SupplyDelivery.status",  }, XPath = "f:SupplyDelivery/f:status" },
                new SearchParamDefinition() { Resource = "SupplyDelivery", Name = "supplier", Description = "Dispenser", Type = SearchParamType.Reference, Path = new string[] { "SupplyDelivery.supplier",  }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Practitioner }, XPath = "f:SupplyDelivery/f:supplier" },
                new SearchParamDefinition() { Resource = "SupplyRequest", Name = "date", Description = "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented\r\n", Type = SearchParamType.Date, Path = new string[] { "Consent.dateTime", "SupplyRequest.authoredOn", "RiskAssessment.occurrenceDateTime", "CareTeam.period", "FamilyMemberHistory.date", "Encounter.period", "AllergyIntolerance.assertedDate", "CarePlan.period", "EpisodeOfCare.period", "Procedure.performedDateTime", "Procedure.performedPeriod", "List.date", "Immunization.date", "Flag.period", "Observation.effectiveDateTime", "Observation.effectivePeriod", "DiagnosticReport.effectiveDateTime", "DiagnosticReport.effectivePeriod", "Composition.date", "DetectedIssue.date", "ClinicalImpression.date",  }, XPath = "f:Consent/f:dateTime | f:SupplyRequest/f:authoredOn | f:RiskAssessment/f:occurrenceDateTime | f:CareTeam/f:period | f:FamilyMemberHistory/f:date | f:Encounter/f:period | f:AllergyIntolerance/f:assertedDate | f:CarePlan/f:period | f:EpisodeOfCare/f:period | f:Procedure/f:performedDateTime | f:Procedure/f:performedPeriod | f:List/f:date | f:Immunization/f:date | f:Flag/f:period | f:Observation/f:effectiveDateTime | f:Observation/f:effectivePeriod | f:DiagnosticReport/f:effectiveDateTime | f:DiagnosticReport/f:effectivePeriod | f:Composition/f:date | f:DetectedIssue/f:date | f:ClinicalImpression/f:date" },
                new SearchParamDefinition() { Resource = "SupplyRequest", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "SupplyRequest", Name = "category", Description = "The kind of supply (central, non-stock, etc.)", Type = SearchParamType.Token, Path = new string[] { "SupplyRequest.category",  }, XPath = "f:SupplyRequest/f:category" },
                new SearchParamDefinition() { Resource = "SupplyRequest", Name = "requester", Description = "Individual making the request", Type = SearchParamType.Reference, Path = new string[] { "SupplyRequest.requester.agent",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:SupplyRequest/f:requester/f:agent" },
                new SearchParamDefinition() { Resource = "SupplyRequest", Name = "status", Description = "draft | active | suspended +", Type = SearchParamType.Token, Path = new string[] { "SupplyRequest.status",  }, XPath = "f:SupplyRequest/f:status" },
                new SearchParamDefinition() { Resource = "SupplyRequest", Name = "supplier", Description = "Who is intended to fulfill the request", Type = SearchParamType.Reference, Path = new string[] { "SupplyRequest.supplier",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:SupplyRequest/f:supplier" },
                new SearchParamDefinition() { Resource = "Task", Name = "authored-on", Description = "Search by creation date", Type = SearchParamType.Date, Path = new string[] { "Task.authoredOn",  }, XPath = "f:Task/f:authoredOn" },
                new SearchParamDefinition() { Resource = "Task", Name = "based-on", Description = "Search by requests this task is based on", Type = SearchParamType.Reference, Path = new string[] { "Task.basedOn",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Task/f:basedOn" },
                new SearchParamDefinition() { Resource = "Task", Name = "business-status", Description = "Search by business status", Type = SearchParamType.Token, Path = new string[] { "Task.businessStatus",  }, XPath = "f:Task/f:businessStatus" },
                new SearchParamDefinition() { Resource = "Task", Name = "code", Description = "Search by task code", Type = SearchParamType.Token, Path = new string[] { "Task.code",  }, XPath = "f:Task/f:code" },
                new SearchParamDefinition() { Resource = "Task", Name = "context", Description = "Search by encounter or episode", Type = SearchParamType.Reference, Path = new string[] { "Task.context",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:Task/f:context" },
                new SearchParamDefinition() { Resource = "Task", Name = "focus", Description = "Search by task focus", Type = SearchParamType.Reference, Path = new string[] { "Task.focus",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Task/f:focus" },
                new SearchParamDefinition() { Resource = "Task", Name = "group-identifier", Description = "Search by group identifier", Type = SearchParamType.Token, Path = new string[] { "Task.groupIdentifier",  }, XPath = "f:Task/f:groupIdentifier" },
                new SearchParamDefinition() { Resource = "Task", Name = "identifier", Description = "Search for a task instance by its business identifier", Type = SearchParamType.Token, Path = new string[] { "Task.identifier",  }, XPath = "f:Task/f:identifier" },
                new SearchParamDefinition() { Resource = "Task", Name = "intent", Description = "Search by task intent", Type = SearchParamType.Token, Path = new string[] { "Task.intent",  }, XPath = "f:Task/f:intent" },
                new SearchParamDefinition() { Resource = "Task", Name = "modified", Description = "Search by last modification date", Type = SearchParamType.Date, Path = new string[] { "Task.lastModified",  }, XPath = "f:Task/f:lastModified" },
                new SearchParamDefinition() { Resource = "Task", Name = "organization", Description = "Search by responsible organization", Type = SearchParamType.Reference, Path = new string[] { "Task.requester.onBehalfOf",  }, Target = new ResourceType[] { ResourceType.Organization }, XPath = "f:Task/f:requester/f:onBehalfOf" },
                new SearchParamDefinition() { Resource = "Task", Name = "owner", Description = "Search by task owner", Type = SearchParamType.Reference, Path = new string[] { "Task.owner",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:Task/f:owner" },
                new SearchParamDefinition() { Resource = "Task", Name = "part-of", Description = "Search by task this task is part of", Type = SearchParamType.Reference, Path = new string[] { "Task.partOf",  }, Target = new ResourceType[] { ResourceType.Task }, XPath = "f:Task/f:partOf" },
                new SearchParamDefinition() { Resource = "Task", Name = "patient", Description = "Search by patient", Type = SearchParamType.Reference, Path = new string[] { "Task.for",  }, Target = new ResourceType[] { ResourceType.Patient }, XPath = "f:Task/f:for" },
                new SearchParamDefinition() { Resource = "Task", Name = "performer", Description = "Search by recommended type of performer (e.g., Requester, Performer, Scheduler).", Type = SearchParamType.Token, Path = new string[] { "Task.performerType",  }, XPath = "f:Task/f:performerType" },
                new SearchParamDefinition() { Resource = "Task", Name = "period", Description = "Search by period Task is/was underway", Type = SearchParamType.Date, Path = new string[] { "Task.executionPeriod",  }, XPath = "f:Task/f:executionPeriod" },
                new SearchParamDefinition() { Resource = "Task", Name = "priority", Description = "Search by task priority", Type = SearchParamType.Token, Path = new string[] { "Task.priority",  }, XPath = "f:Task/f:priority" },
                new SearchParamDefinition() { Resource = "Task", Name = "requester", Description = "Search by task requester", Type = SearchParamType.Reference, Path = new string[] { "Task.requester.agent",  }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson }, XPath = "f:Task/f:requester/f:agent" },
                new SearchParamDefinition() { Resource = "Task", Name = "status", Description = "Search by task status", Type = SearchParamType.Token, Path = new string[] { "Task.status",  }, XPath = "f:Task/f:status" },
                new SearchParamDefinition() { Resource = "Task", Name = "subject", Description = "Search by subject", Type = SearchParamType.Reference, Path = new string[] { "Task.for",  }, Target = new ResourceType[] { ResourceType.Account, ResourceType.ActivityDefinition, ResourceType.AdverseEvent, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CapabilityStatement, ResourceType.CarePlan, ResourceType.CareTeam, ResourceType.ChargeItem, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.CodeSystem, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.CompartmentDefinition, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Consent, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.Endpoint, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExpansionProfile, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.GraphDefinition, ResourceType.Group, ResourceType.GuidanceResponse, ResourceType.HealthcareService, ResourceType.ImagingManifest, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.Library, ResourceType.Linkage, ResourceType.List, ResourceType.Location, ResourceType.Measure, ResourceType.MeasureReport, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationRequest, ResourceType.MedicationStatement, ResourceType.MessageDefinition, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.PlanDefinition, ResourceType.Practitioner, ResourceType.PractitionerRole, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RequestGroup, ResourceType.ResearchStudy, ResourceType.ResearchSubject, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Sequence, ResourceType.ServiceDefinition, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.StructureMap, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.Task, ResourceType.TestReport, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription }, XPath = "f:Task/f:for" },
                new SearchParamDefinition() { Resource = "TestReport", Name = "identifier", Description = "An external identifier for the test report", Type = SearchParamType.Token, Path = new string[] { "TestReport.identifier",  }, XPath = "f:TestReport/f:identifier" },
                new SearchParamDefinition() { Resource = "TestReport", Name = "issued", Description = "The test report generation date", Type = SearchParamType.Date, Path = new string[] { "TestReport.issued",  }, XPath = "f:TestReport/f:issued" },
                new SearchParamDefinition() { Resource = "TestReport", Name = "participant", Description = "The reference to a participant in the test execution", Type = SearchParamType.Uri, Path = new string[] { "TestReport.participant.uri",  }, XPath = "f:TestReport/f:participant/f:uri" },
                new SearchParamDefinition() { Resource = "TestReport", Name = "result", Description = "The result disposition of the test execution", Type = SearchParamType.Token, Path = new string[] { "TestReport.result",  }, XPath = "f:TestReport/f:result" },
                new SearchParamDefinition() { Resource = "TestReport", Name = "tester", Description = "The name of the testing organization", Type = SearchParamType.String, Path = new string[] { "TestReport.tester",  }, XPath = "f:TestReport/f:tester" },
                new SearchParamDefinition() { Resource = "TestReport", Name = "testscript", Description = "The test script executed to produce this report", Type = SearchParamType.Reference, Path = new string[] { "TestReport.testScript",  }, Target = new ResourceType[] { ResourceType.TestScript }, XPath = "f:TestReport/f:testScript" },
                new SearchParamDefinition() { Resource = "TestScript", Name = "date", Description = "The test script publication date", Type = SearchParamType.Date, Path = new string[] { "TestScript.date",  }, XPath = "f:TestScript/f:date" },
                new SearchParamDefinition() { Resource = "TestScript", Name = "description", Description = "The description of the test script", Type = SearchParamType.String, Path = new string[] { "TestScript.description",  }, XPath = "f:TestScript/f:description" },
                new SearchParamDefinition() { Resource = "TestScript", Name = "identifier", Description = "External identifier for the test script", Type = SearchParamType.Token, Path = new string[] { "TestScript.identifier",  }, XPath = "f:TestScript/f:identifier" },
                new SearchParamDefinition() { Resource = "TestScript", Name = "jurisdiction", Description = "Intended jurisdiction for the test script", Type = SearchParamType.Token, Path = new string[] { "TestScript.jurisdiction",  }, XPath = "f:TestScript/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "TestScript", Name = "name", Description = "Computationally friendly name of the test script", Type = SearchParamType.String, Path = new string[] { "TestScript.name",  }, XPath = "f:TestScript/f:name" },
                new SearchParamDefinition() { Resource = "TestScript", Name = "publisher", Description = "Name of the publisher of the test script", Type = SearchParamType.String, Path = new string[] { "TestScript.publisher",  }, XPath = "f:TestScript/f:publisher" },
                new SearchParamDefinition() { Resource = "TestScript", Name = "status", Description = "The current status of the test script", Type = SearchParamType.Token, Path = new string[] { "TestScript.status",  }, XPath = "f:TestScript/f:status" },
                new SearchParamDefinition() { Resource = "TestScript", Name = "testscript-capability", Description = "TestScript required and validated capability", Type = SearchParamType.String, Path = new string[] { "TestScript.metadata.capability.description",  }, XPath = "f:TestScript/f:metadata/f:capability/f:description" },
                new SearchParamDefinition() { Resource = "TestScript", Name = "title", Description = "The human-friendly name of the test script", Type = SearchParamType.String, Path = new string[] { "TestScript.title",  }, XPath = "f:TestScript/f:title" },
                new SearchParamDefinition() { Resource = "TestScript", Name = "url", Description = "The uri that identifies the test script", Type = SearchParamType.Uri, Path = new string[] { "TestScript.url",  }, XPath = "f:TestScript/f:url" },
                new SearchParamDefinition() { Resource = "TestScript", Name = "version", Description = "The business version of the test script", Type = SearchParamType.Token, Path = new string[] { "TestScript.version",  }, XPath = "f:TestScript/f:version" },
                new SearchParamDefinition() { Resource = "ValueSet", Name = "date", Description = "The value set publication date", Type = SearchParamType.Date, Path = new string[] { "ValueSet.date",  }, XPath = "f:ValueSet/f:date" },
                new SearchParamDefinition() { Resource = "ValueSet", Name = "description", Description = "The description of the value set", Type = SearchParamType.String, Path = new string[] { "ValueSet.description",  }, XPath = "f:ValueSet/f:description" },
                new SearchParamDefinition() { Resource = "ValueSet", Name = "expansion", Description = "Uniquely identifies this expansion", Type = SearchParamType.Uri, Path = new string[] { "ValueSet.expansion.identifier",  }, XPath = "f:ValueSet/f:expansion/f:identifier" },
                new SearchParamDefinition() { Resource = "ValueSet", Name = "identifier", Description = "External identifier for the value set", Type = SearchParamType.Token, Path = new string[] { "ValueSet.identifier",  }, XPath = "f:ValueSet/f:identifier" },
                new SearchParamDefinition() { Resource = "ValueSet", Name = "jurisdiction", Description = "Intended jurisdiction for the value set", Type = SearchParamType.Token, Path = new string[] { "ValueSet.jurisdiction",  }, XPath = "f:ValueSet/f:jurisdiction" },
                new SearchParamDefinition() { Resource = "ValueSet", Name = "name", Description = "Computationally friendly name of the value set", Type = SearchParamType.String, Path = new string[] { "ValueSet.name",  }, XPath = "f:ValueSet/f:name" },
                new SearchParamDefinition() { Resource = "ValueSet", Name = "publisher", Description = "Name of the publisher of the value set", Type = SearchParamType.String, Path = new string[] { "ValueSet.publisher",  }, XPath = "f:ValueSet/f:publisher" },
                new SearchParamDefinition() { Resource = "ValueSet", Name = "reference", Description = "A code system included or excluded in the value set or an imported value set", Type = SearchParamType.Uri, Path = new string[] { "ValueSet.compose.include.system",  }, XPath = "f:ValueSet/f:compose/f:include/f:system" },
                new SearchParamDefinition() { Resource = "ValueSet", Name = "status", Description = "The current status of the value set", Type = SearchParamType.Token, Path = new string[] { "ValueSet.status",  }, XPath = "f:ValueSet/f:status" },
                new SearchParamDefinition() { Resource = "ValueSet", Name = "title", Description = "The human-friendly name of the value set", Type = SearchParamType.String, Path = new string[] { "ValueSet.title",  }, XPath = "f:ValueSet/f:title" },
                new SearchParamDefinition() { Resource = "ValueSet", Name = "url", Description = "The uri that identifies the value set", Type = SearchParamType.Uri, Path = new string[] { "ValueSet.url",  }, XPath = "f:ValueSet/f:url" },
                new SearchParamDefinition() { Resource = "ValueSet", Name = "version", Description = "The business version of the value set", Type = SearchParamType.Token, Path = new string[] { "ValueSet.version",  }, XPath = "f:ValueSet/f:version" },
                new SearchParamDefinition() { Resource = "VisionPrescription", Name = "identifier", Description = "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n", Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", "DocumentManifest.identifier", "Goal.identifier", "Consent.identifier", "DocumentReference.masterIdentifier", "DocumentReference.identifier", "SupplyRequest.identifier", "RiskAssessment.identifier", "CareTeam.identifier", "ImagingStudy.identifier", "FamilyMemberHistory.identifier", "Encounter.identifier", "DeviceRequest.identifier", "AllergyIntolerance.identifier", "CarePlan.identifier", "EpisodeOfCare.identifier", "Procedure.identifier", "List.identifier", "Immunization.identifier", "VisionPrescription.identifier", "ProcedureRequest.identifier", "Observation.identifier", "DiagnosticReport.identifier", "NutritionOrder.identifier", "Condition.identifier", "Composition.identifier", "DetectedIssue.identifier", "SupplyDelivery.identifier",  }, XPath = "f:DocumentManifest/f:masterIdentifier | f:DocumentManifest/f:identifier | f:Goal/f:identifier | f:Consent/f:identifier | f:DocumentReference/f:masterIdentifier | f:DocumentReference/f:identifier | f:SupplyRequest/f:identifier | f:RiskAssessment/f:identifier | f:CareTeam/f:identifier | f:ImagingStudy/f:identifier | f:FamilyMemberHistory/f:identifier | f:Encounter/f:identifier | f:DeviceRequest/f:identifier | f:AllergyIntolerance/f:identifier | f:CarePlan/f:identifier | f:EpisodeOfCare/f:identifier | f:Procedure/f:identifier | f:List/f:identifier | f:Immunization/f:identifier | f:VisionPrescription/f:identifier | f:ProcedureRequest/f:identifier | f:Observation/f:identifier | f:DiagnosticReport/f:identifier | f:NutritionOrder/f:identifier | f:Condition/f:identifier | f:Composition/f:identifier | f:DetectedIssue/f:identifier | f:SupplyDelivery/f:identifier" },
                new SearchParamDefinition() { Resource = "VisionPrescription", Name = "patient", Description = "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n", Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.subject", "DocumentManifest.subject", "Goal.subject", "Consent.patient", "DocumentReference.subject", "ImagingManifest.patient", "RiskAssessment.subject", "CareTeam.subject", "ImagingStudy.patient", "FamilyMemberHistory.patient", "Encounter.subject", "DeviceUseStatement.subject", "DeviceRequest.subject", "AllergyIntolerance.patient", "CarePlan.subject", "EpisodeOfCare.patient", "Procedure.subject", "List.subject", "Immunization.patient", "VisionPrescription.patient", "ProcedureRequest.subject", "Flag.subject", "Observation.subject", "DiagnosticReport.subject", "NutritionOrder.patient", "Condition.subject", "Composition.subject", "DetectedIssue.patient", "SupplyDelivery.patient", "ClinicalImpression.subject",  }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient }, XPath = "f:ReferralRequest/f:subject | f:DocumentManifest/f:subject | f:Goal/f:subject | f:Consent/f:patient | f:DocumentReference/f:subject | f:ImagingManifest/f:patient | f:RiskAssessment/f:subject | f:CareTeam/f:subject | f:ImagingStudy/f:patient | f:FamilyMemberHistory/f:patient | f:Encounter/f:subject | f:DeviceUseStatement/f:subject | f:DeviceRequest/f:subject | f:AllergyIntolerance/f:patient | f:CarePlan/f:subject | f:EpisodeOfCare/f:patient | f:Procedure/f:subject | f:List/f:subject | f:Immunization/f:patient | f:VisionPrescription/f:patient | f:ProcedureRequest/f:subject | f:Flag/f:subject | f:Observation/f:subject | f:DiagnosticReport/f:subject | f:NutritionOrder/f:patient | f:Condition/f:subject | f:Composition/f:subject | f:DetectedIssue/f:patient | f:SupplyDelivery/f:patient | f:ClinicalImpression/f:subject" },
                new SearchParamDefinition() { Resource = "VisionPrescription", Name = "encounter", Description = "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition\r\n", Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.context.encounter", "RiskAssessment.context", "DeviceRequest.context", "Procedure.context", "List.encounter", "VisionPrescription.encounter", "ProcedureRequest.context", "Flag.encounter", "Observation.context", "DiagnosticReport.context", "NutritionOrder.encounter", "Composition.encounter",  }, Target = new ResourceType[] { ResourceType.Encounter, ResourceType.EpisodeOfCare }, XPath = "f:DocumentReference/f:context/f:encounter | f:RiskAssessment/f:context | f:DeviceRequest/f:context | f:Procedure/f:context | f:List/f:encounter | f:VisionPrescription/f:encounter | f:ProcedureRequest/f:context | f:Flag/f:encounter | f:Observation/f:context | f:DiagnosticReport/f:context | f:NutritionOrder/f:encounter | f:Composition/f:encounter" },
                new SearchParamDefinition() { Resource = "VisionPrescription", Name = "datewritten", Description = "Return prescriptions written on this date", Type = SearchParamType.Date, Path = new string[] { "VisionPrescription.dateWritten",  }, XPath = "f:VisionPrescription/f:dateWritten" },
                new SearchParamDefinition() { Resource = "VisionPrescription", Name = "prescriber", Description = "Who authorizes the vision product", Type = SearchParamType.Reference, Path = new string[] { "VisionPrescription.prescriber",  }, Target = new ResourceType[] { ResourceType.Practitioner }, XPath = "f:VisionPrescription/f:prescriber" },
            };
    }

}
