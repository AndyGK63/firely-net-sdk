// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Text.Json.Serialization;
using Hl7.Fhir.Model;
using Hl7.Fhir.Serialization;

/*
  Copyright (c) 2011+, HL7, Inc.
  All rights reserved.
  
  Redistribution and use in source and binary forms, with or without modification, 
  are permitted provided that the following conditions are met:
  
   * Redistributions of source code must retain the above copyright notice, this 
     list of conditions and the following disclaimer.
   * Redistributions in binary form must reproduce the above copyright notice, 
     this list of conditions and the following disclaimer in the documentation 
     and/or other materials provided with the distribution.
   * Neither the name of HL7 nor the names of its contributors may be used to 
     endorse or promote products derived from this software without specific 
     prior written permission.
  
  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
  POSSIBILITY OF SUCH DAMAGE.
  
*/

namespace Hl7.Fhir.Serialization.Poco
{
  /// <summary>
  /// JSON Serialization Extensions for ExampleScenario
  /// </summary>
  public static class ExampleScenarioSerializationExtensions
  {
    /// <summary>
    /// Serialize a FHIR ExampleScenario into JSON
    /// </summary>
    public static void SerializeJson(this Hl7.Fhir.Model.ExampleScenario current, Utf8JsonWriter writer, JsonSerializerOptions options, bool includeStartObject = true)
    {
      if (includeStartObject) { writer.WriteStartObject(); }
      writer.WriteString("resourceType","ExampleScenario");
      // Complex: ExampleScenario, Export: ExampleScenario, Base: DomainResource (DomainResource)
      ((Hl7.Fhir.Model.DomainResource)current).SerializeJson(writer, options, false);

      JsonStreamUtilities.SerializePrimitiveProperty("url",current.UrlElement,writer,options);

      JsonStreamUtilities.SerializeComplexProperty("identifier", current.Identifier, writer, options);

      JsonStreamUtilities.SerializePrimitiveProperty("version",current.VersionElement,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("name",current.NameElement,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("status",current.StatusElement,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("experimental",current.ExperimentalElement,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("date",current.DateElement,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("publisher",current.PublisherElement,writer,options);

      JsonStreamUtilities.SerializeComplexProperty("contact", current.Contact, writer, options);

      JsonStreamUtilities.SerializeComplexProperty("useContext", current.UseContext, writer, options);

      JsonStreamUtilities.SerializeComplexProperty("jurisdiction", current.Jurisdiction, writer, options);

      JsonStreamUtilities.SerializePrimitiveProperty("copyright",current.Copyright,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("purpose",current.Purpose,writer,options);

      JsonStreamUtilities.SerializeComplexProperty("actor", current.Actor, writer, options);

      JsonStreamUtilities.SerializeComplexProperty("instance", current.Instance, writer, options);

      JsonStreamUtilities.SerializeComplexProperty("process", current.Process, writer, options);

      JsonStreamUtilities.SerializePrimitiveProperty("workflow",current.WorkflowElement,writer,options);

      if (includeStartObject) { writer.WriteEndObject(); }
    }

    /// <summary>
    /// Deserialize JSON into a FHIR ExampleScenario
    /// </summary>
    public static void DeserializeJson(this Hl7.Fhir.Model.ExampleScenario current, ref Utf8JsonReader reader, JsonSerializerOptions options)
    {
      string propertyName;

      while (reader.Read())
      {
        if (reader.TokenType == JsonTokenType.EndObject)
        {
          return;
        }

        if (reader.TokenType == JsonTokenType.PropertyName)
        {
          propertyName = reader.GetString();
          if (Hl7.Fhir.Serialization.FhirSerializerOptions.Debug) { Console.WriteLine($"ExampleScenario >>> ExampleScenario.{propertyName}, depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}"); }
          reader.Read();
          current.DeserializeJsonProperty(ref reader, options, propertyName);
        }
      }

      throw new JsonException($"ExampleScenario: invalid state! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
    }

    /// <summary>
    /// Deserialize JSON into a FHIR ExampleScenario
    /// </summary>
    public static void DeserializeJsonProperty(this Hl7.Fhir.Model.ExampleScenario current, ref Utf8JsonReader reader, JsonSerializerOptions options, string propertyName)
    {
      switch (propertyName)
      {
        case "url":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.UrlElement = new FhirUri();
            reader.Skip();
          }
          else
          {
            current.UrlElement = new FhirUri(reader.GetString());
          }
          break;

        case "_url":
          if (current.UrlElement == null) { current.UrlElement = new FhirUri(); }
          ((Hl7.Fhir.Model.Element)current.UrlElement).DeserializeJson(ref reader, options);
          break;

        case "identifier":
          if ((reader.TokenType != JsonTokenType.StartArray) || (!reader.Read()))
          {
            throw new JsonException($"ExampleScenario error reading 'identifier' expected StartArray, found {reader.TokenType}! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
          }

          current.Identifier = new List<Identifier>();

          while (reader.TokenType != JsonTokenType.EndArray)
          {
            Hl7.Fhir.Model.Identifier v_Identifier = new Hl7.Fhir.Model.Identifier();
            v_Identifier.DeserializeJson(ref reader, options);
            current.Identifier.Add(v_Identifier);

            if (!reader.Read())
            {
              throw new JsonException($"ExampleScenario error reading 'identifier' array, read failed! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
            }
            if (reader.TokenType == JsonTokenType.EndObject) { reader.Read(); }
          }

          if (current.Identifier.Count == 0)
          {
            current.Identifier = null;
          }
          break;

        case "version":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.VersionElement = new FhirString();
            reader.Skip();
          }
          else
          {
            current.VersionElement = new FhirString(reader.GetString());
          }
          break;

        case "_version":
          if (current.VersionElement == null) { current.VersionElement = new FhirString(); }
          ((Hl7.Fhir.Model.Element)current.VersionElement).DeserializeJson(ref reader, options);
          break;

        case "name":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.NameElement = new FhirString();
            reader.Skip();
          }
          else
          {
            current.NameElement = new FhirString(reader.GetString());
          }
          break;

        case "_name":
          if (current.NameElement == null) { current.NameElement = new FhirString(); }
          ((Hl7.Fhir.Model.Element)current.NameElement).DeserializeJson(ref reader, options);
          break;

        case "status":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.StatusElement = new Code<Hl7.Fhir.Model.PublicationStatus>();
            reader.Skip();
          }
          else
          {
            current.StatusElement = new Code<Hl7.Fhir.Model.PublicationStatus>(Hl7.Fhir.Utility.EnumUtility.ParseLiteral<Hl7.Fhir.Model.PublicationStatus>(reader.GetString()));
          }
          break;

        case "_status":
          if (current.StatusElement == null) { current.StatusElement = new Code<Hl7.Fhir.Model.PublicationStatus>(); }
          ((Hl7.Fhir.Model.Element)current.StatusElement).DeserializeJson(ref reader, options);
          break;

        case "experimental":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.ExperimentalElement = new FhirBoolean();
            reader.Skip();
          }
          else
          {
            current.ExperimentalElement = new FhirBoolean(reader.GetBoolean());
          }
          break;

        case "_experimental":
          if (current.ExperimentalElement == null) { current.ExperimentalElement = new FhirBoolean(); }
          ((Hl7.Fhir.Model.Element)current.ExperimentalElement).DeserializeJson(ref reader, options);
          break;

        case "date":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.DateElement = new FhirDateTime();
            reader.Skip();
          }
          else
          {
            current.DateElement = new FhirDateTime(reader.GetString());
          }
          break;

        case "_date":
          if (current.DateElement == null) { current.DateElement = new FhirDateTime(); }
          ((Hl7.Fhir.Model.Element)current.DateElement).DeserializeJson(ref reader, options);
          break;

        case "publisher":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.PublisherElement = new FhirString();
            reader.Skip();
          }
          else
          {
            current.PublisherElement = new FhirString(reader.GetString());
          }
          break;

        case "_publisher":
          if (current.PublisherElement == null) { current.PublisherElement = new FhirString(); }
          ((Hl7.Fhir.Model.Element)current.PublisherElement).DeserializeJson(ref reader, options);
          break;

        case "contact":
          if ((reader.TokenType != JsonTokenType.StartArray) || (!reader.Read()))
          {
            throw new JsonException($"ExampleScenario error reading 'contact' expected StartArray, found {reader.TokenType}! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
          }

          current.Contact = new List<ContactDetail>();

          while (reader.TokenType != JsonTokenType.EndArray)
          {
            Hl7.Fhir.Model.ContactDetail v_Contact = new Hl7.Fhir.Model.ContactDetail();
            v_Contact.DeserializeJson(ref reader, options);
            current.Contact.Add(v_Contact);

            if (!reader.Read())
            {
              throw new JsonException($"ExampleScenario error reading 'contact' array, read failed! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
            }
            if (reader.TokenType == JsonTokenType.EndObject) { reader.Read(); }
          }

          if (current.Contact.Count == 0)
          {
            current.Contact = null;
          }
          break;

        case "useContext":
          if ((reader.TokenType != JsonTokenType.StartArray) || (!reader.Read()))
          {
            throw new JsonException($"ExampleScenario error reading 'useContext' expected StartArray, found {reader.TokenType}! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
          }

          current.UseContext = new List<UsageContext>();

          while (reader.TokenType != JsonTokenType.EndArray)
          {
            Hl7.Fhir.Model.UsageContext v_UseContext = new Hl7.Fhir.Model.UsageContext();
            v_UseContext.DeserializeJson(ref reader, options);
            current.UseContext.Add(v_UseContext);

            if (!reader.Read())
            {
              throw new JsonException($"ExampleScenario error reading 'useContext' array, read failed! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
            }
            if (reader.TokenType == JsonTokenType.EndObject) { reader.Read(); }
          }

          if (current.UseContext.Count == 0)
          {
            current.UseContext = null;
          }
          break;

        case "jurisdiction":
          if ((reader.TokenType != JsonTokenType.StartArray) || (!reader.Read()))
          {
            throw new JsonException($"ExampleScenario error reading 'jurisdiction' expected StartArray, found {reader.TokenType}! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
          }

          current.Jurisdiction = new List<CodeableConcept>();

          while (reader.TokenType != JsonTokenType.EndArray)
          {
            Hl7.Fhir.Model.CodeableConcept v_Jurisdiction = new Hl7.Fhir.Model.CodeableConcept();
            v_Jurisdiction.DeserializeJson(ref reader, options);
            current.Jurisdiction.Add(v_Jurisdiction);

            if (!reader.Read())
            {
              throw new JsonException($"ExampleScenario error reading 'jurisdiction' array, read failed! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
            }
            if (reader.TokenType == JsonTokenType.EndObject) { reader.Read(); }
          }

          if (current.Jurisdiction.Count == 0)
          {
            current.Jurisdiction = null;
          }
          break;

        case "copyright":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.Copyright = new Markdown();
            reader.Skip();
          }
          else
          {
            current.Copyright = new Markdown(reader.GetString());
          }
          break;

        case "_copyright":
          if (current.Copyright == null) { current.Copyright = new Markdown(); }
          ((Hl7.Fhir.Model.Element)current.Copyright).DeserializeJson(ref reader, options);
          break;

        case "purpose":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.Purpose = new Markdown();
            reader.Skip();
          }
          else
          {
            current.Purpose = new Markdown(reader.GetString());
          }
          break;

        case "_purpose":
          if (current.Purpose == null) { current.Purpose = new Markdown(); }
          ((Hl7.Fhir.Model.Element)current.Purpose).DeserializeJson(ref reader, options);
          break;

        case "actor":
          if ((reader.TokenType != JsonTokenType.StartArray) || (!reader.Read()))
          {
            throw new JsonException($"ExampleScenario error reading 'actor' expected StartArray, found {reader.TokenType}! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
          }

          current.Actor = new List<ExampleScenario.ActorComponent>();

          while (reader.TokenType != JsonTokenType.EndArray)
          {
            Hl7.Fhir.Model.ExampleScenario.ActorComponent v_Actor = new Hl7.Fhir.Model.ExampleScenario.ActorComponent();
            v_Actor.DeserializeJson(ref reader, options);
            current.Actor.Add(v_Actor);

            if (!reader.Read())
            {
              throw new JsonException($"ExampleScenario error reading 'actor' array, read failed! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
            }
            if (reader.TokenType == JsonTokenType.EndObject) { reader.Read(); }
          }

          if (current.Actor.Count == 0)
          {
            current.Actor = null;
          }
          break;

        case "instance":
          if ((reader.TokenType != JsonTokenType.StartArray) || (!reader.Read()))
          {
            throw new JsonException($"ExampleScenario error reading 'instance' expected StartArray, found {reader.TokenType}! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
          }

          current.Instance = new List<ExampleScenario.InstanceComponent>();

          while (reader.TokenType != JsonTokenType.EndArray)
          {
            Hl7.Fhir.Model.ExampleScenario.InstanceComponent v_Instance = new Hl7.Fhir.Model.ExampleScenario.InstanceComponent();
            v_Instance.DeserializeJson(ref reader, options);
            current.Instance.Add(v_Instance);

            if (!reader.Read())
            {
              throw new JsonException($"ExampleScenario error reading 'instance' array, read failed! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
            }
            if (reader.TokenType == JsonTokenType.EndObject) { reader.Read(); }
          }

          if (current.Instance.Count == 0)
          {
            current.Instance = null;
          }
          break;

        case "process":
          if ((reader.TokenType != JsonTokenType.StartArray) || (!reader.Read()))
          {
            throw new JsonException($"ExampleScenario error reading 'process' expected StartArray, found {reader.TokenType}! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
          }

          current.Process = new List<ExampleScenario.ProcessComponent>();

          while (reader.TokenType != JsonTokenType.EndArray)
          {
            Hl7.Fhir.Model.ExampleScenario.ProcessComponent v_Process = new Hl7.Fhir.Model.ExampleScenario.ProcessComponent();
            v_Process.DeserializeJson(ref reader, options);
            current.Process.Add(v_Process);

            if (!reader.Read())
            {
              throw new JsonException($"ExampleScenario error reading 'process' array, read failed! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
            }
            if (reader.TokenType == JsonTokenType.EndObject) { reader.Read(); }
          }

          if (current.Process.Count == 0)
          {
            current.Process = null;
          }
          break;

        case "workflow":
          if ((reader.TokenType != JsonTokenType.StartArray) || (!reader.Read()))
          {
            throw new JsonException($"ExampleScenario error reading 'workflow' expected StartArray, found {reader.TokenType}! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
          }

          current.WorkflowElement = new List<Canonical>();

          while (reader.TokenType != JsonTokenType.EndArray)
          {
            if (reader.TokenType == JsonTokenType.Null)
            {
              current.WorkflowElement.Add(new Canonical());
              reader.Skip();
            }
            else
            {
              current.WorkflowElement.Add(new Canonical(reader.GetString()));
            }

            if (!reader.Read())
            {
              throw new JsonException($"ExampleScenario error reading 'workflow' array, read failed! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
            }
            if (reader.TokenType == JsonTokenType.EndObject) { reader.Read(); }
          }

          if (current.WorkflowElement.Count == 0)
          {
            current.WorkflowElement = null;
          }
          break;

        case "_workflow":
          if ((reader.TokenType != JsonTokenType.StartArray) || (!reader.Read()))
          {
            throw new JsonException($"ExampleScenario error reading 'workflow' expected StartArray, found {reader.TokenType}! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
          }

          int i_workflow = 0;

          while (reader.TokenType != JsonTokenType.EndArray)
          {
            if (i_workflow >= current.WorkflowElement.Count)
            {
              current.WorkflowElement.Add(new Canonical());
            }
            if (reader.TokenType == JsonTokenType.Null)
            {
              reader.Skip();
            }
            else
            {
              ((Hl7.Fhir.Model.Element)current.WorkflowElement[i_workflow++]).DeserializeJson(ref reader, options);
            }

            if (!reader.Read())
            {
              throw new JsonException($"ExampleScenario error reading 'workflow' array, read failed! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
            }
            if (reader.TokenType == JsonTokenType.EndObject) { reader.Read(); }
          }
          break;

        // Complex: ExampleScenario, Export: ExampleScenario, Base: DomainResource
        default:
          ((Hl7.Fhir.Model.DomainResource)current).DeserializeJsonProperty(ref reader, options, propertyName);
          break;
      }
    }

    /// <summary>
    /// Serialize a FHIR ExampleScenario#Actor into JSON
    /// </summary>
    public static void SerializeJson(this Hl7.Fhir.Model.ExampleScenario.ActorComponent current, Utf8JsonWriter writer, JsonSerializerOptions options, bool includeStartObject = true)
    {
      if (includeStartObject) { writer.WriteStartObject(); }
      // Component: ExampleScenario#Actor, Export: ActorComponent, Base: BackboneElement (BackboneElement)
      ((Hl7.Fhir.Model.BackboneElement)current).SerializeJson(writer, options, false);

      JsonStreamUtilities.SerializePrimitiveProperty("actorId",current.ActorIdElement,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("type",current.TypeElement,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("name",current.NameElement,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("description",current.Description,writer,options);

      if (includeStartObject) { writer.WriteEndObject(); }
    }

    /// <summary>
    /// Deserialize JSON into a FHIR ExampleScenario#Actor
    /// </summary>
    public static void DeserializeJson(this Hl7.Fhir.Model.ExampleScenario.ActorComponent current, ref Utf8JsonReader reader, JsonSerializerOptions options)
    {
      string propertyName;

      while (reader.Read())
      {
        if (reader.TokenType == JsonTokenType.EndObject)
        {
          return;
        }

        if (reader.TokenType == JsonTokenType.PropertyName)
        {
          propertyName = reader.GetString();
          if (Hl7.Fhir.Serialization.FhirSerializerOptions.Debug) { Console.WriteLine($"ExampleScenario.ActorComponent >>> ExampleScenario#Actor.{propertyName}, depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}"); }
          reader.Read();
          current.DeserializeJsonProperty(ref reader, options, propertyName);
        }
      }

      throw new JsonException($"ExampleScenario.ActorComponent: invalid state! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
    }

    /// <summary>
    /// Deserialize JSON into a FHIR ExampleScenario#Actor
    /// </summary>
    public static void DeserializeJsonProperty(this Hl7.Fhir.Model.ExampleScenario.ActorComponent current, ref Utf8JsonReader reader, JsonSerializerOptions options, string propertyName)
    {
      switch (propertyName)
      {
        case "actorId":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.ActorIdElement = new FhirString();
            reader.Skip();
          }
          else
          {
            current.ActorIdElement = new FhirString(reader.GetString());
          }
          break;

        case "_actorId":
          if (current.ActorIdElement == null) { current.ActorIdElement = new FhirString(); }
          ((Hl7.Fhir.Model.Element)current.ActorIdElement).DeserializeJson(ref reader, options);
          break;

        case "type":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.TypeElement = new Code<Hl7.Fhir.Model.ExampleScenario.ExampleScenarioActorType>();
            reader.Skip();
          }
          else
          {
            current.TypeElement = new Code<Hl7.Fhir.Model.ExampleScenario.ExampleScenarioActorType>(Hl7.Fhir.Utility.EnumUtility.ParseLiteral<Hl7.Fhir.Model.ExampleScenario.ExampleScenarioActorType>(reader.GetString()));
          }
          break;

        case "_type":
          if (current.TypeElement == null) { current.TypeElement = new Code<Hl7.Fhir.Model.ExampleScenario.ExampleScenarioActorType>(); }
          ((Hl7.Fhir.Model.Element)current.TypeElement).DeserializeJson(ref reader, options);
          break;

        case "name":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.NameElement = new FhirString();
            reader.Skip();
          }
          else
          {
            current.NameElement = new FhirString(reader.GetString());
          }
          break;

        case "_name":
          if (current.NameElement == null) { current.NameElement = new FhirString(); }
          ((Hl7.Fhir.Model.Element)current.NameElement).DeserializeJson(ref reader, options);
          break;

        case "description":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.Description = new Markdown();
            reader.Skip();
          }
          else
          {
            current.Description = new Markdown(reader.GetString());
          }
          break;

        case "_description":
          if (current.Description == null) { current.Description = new Markdown(); }
          ((Hl7.Fhir.Model.Element)current.Description).DeserializeJson(ref reader, options);
          break;

        // Complex: actor, Export: ActorComponent, Base: BackboneElement
        default:
          ((Hl7.Fhir.Model.BackboneElement)current).DeserializeJsonProperty(ref reader, options, propertyName);
          break;
      }
    }

    /// <summary>
    /// Serialize a FHIR ExampleScenario#Instance into JSON
    /// </summary>
    public static void SerializeJson(this Hl7.Fhir.Model.ExampleScenario.InstanceComponent current, Utf8JsonWriter writer, JsonSerializerOptions options, bool includeStartObject = true)
    {
      if (includeStartObject) { writer.WriteStartObject(); }
      // Component: ExampleScenario#Instance, Export: InstanceComponent, Base: BackboneElement (BackboneElement)
      ((Hl7.Fhir.Model.BackboneElement)current).SerializeJson(writer, options, false);

      JsonStreamUtilities.SerializePrimitiveProperty("resourceId",current.ResourceIdElement,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("resourceType",current.ResourceTypeElement,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("name",current.NameElement,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("description",current.Description,writer,options);

      JsonStreamUtilities.SerializeComplexProperty("version", current.Version, writer, options);

      JsonStreamUtilities.SerializeComplexProperty("containedInstance", current.ContainedInstance, writer, options);

      if (includeStartObject) { writer.WriteEndObject(); }
    }

    /// <summary>
    /// Deserialize JSON into a FHIR ExampleScenario#Instance
    /// </summary>
    public static void DeserializeJson(this Hl7.Fhir.Model.ExampleScenario.InstanceComponent current, ref Utf8JsonReader reader, JsonSerializerOptions options)
    {
      string propertyName;

      while (reader.Read())
      {
        if (reader.TokenType == JsonTokenType.EndObject)
        {
          return;
        }

        if (reader.TokenType == JsonTokenType.PropertyName)
        {
          propertyName = reader.GetString();
          if (Hl7.Fhir.Serialization.FhirSerializerOptions.Debug) { Console.WriteLine($"ExampleScenario.InstanceComponent >>> ExampleScenario#Instance.{propertyName}, depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}"); }
          reader.Read();
          current.DeserializeJsonProperty(ref reader, options, propertyName);
        }
      }

      throw new JsonException($"ExampleScenario.InstanceComponent: invalid state! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
    }

    /// <summary>
    /// Deserialize JSON into a FHIR ExampleScenario#Instance
    /// </summary>
    public static void DeserializeJsonProperty(this Hl7.Fhir.Model.ExampleScenario.InstanceComponent current, ref Utf8JsonReader reader, JsonSerializerOptions options, string propertyName)
    {
      switch (propertyName)
      {
        case "resourceId":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.ResourceIdElement = new FhirString();
            reader.Skip();
          }
          else
          {
            current.ResourceIdElement = new FhirString(reader.GetString());
          }
          break;

        case "_resourceId":
          if (current.ResourceIdElement == null) { current.ResourceIdElement = new FhirString(); }
          ((Hl7.Fhir.Model.Element)current.ResourceIdElement).DeserializeJson(ref reader, options);
          break;

        case "resourceType":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.ResourceTypeElement = new Code<Hl7.Fhir.Model.ResourceType>();
            reader.Skip();
          }
          else
          {
            current.ResourceTypeElement = new Code<Hl7.Fhir.Model.ResourceType>(Hl7.Fhir.Utility.EnumUtility.ParseLiteral<Hl7.Fhir.Model.ResourceType>(reader.GetString()));
          }
          break;

        case "_resourceType":
          if (current.ResourceTypeElement == null) { current.ResourceTypeElement = new Code<Hl7.Fhir.Model.ResourceType>(); }
          ((Hl7.Fhir.Model.Element)current.ResourceTypeElement).DeserializeJson(ref reader, options);
          break;

        case "name":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.NameElement = new FhirString();
            reader.Skip();
          }
          else
          {
            current.NameElement = new FhirString(reader.GetString());
          }
          break;

        case "_name":
          if (current.NameElement == null) { current.NameElement = new FhirString(); }
          ((Hl7.Fhir.Model.Element)current.NameElement).DeserializeJson(ref reader, options);
          break;

        case "description":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.Description = new Markdown();
            reader.Skip();
          }
          else
          {
            current.Description = new Markdown(reader.GetString());
          }
          break;

        case "_description":
          if (current.Description == null) { current.Description = new Markdown(); }
          ((Hl7.Fhir.Model.Element)current.Description).DeserializeJson(ref reader, options);
          break;

        case "version":
          if ((reader.TokenType != JsonTokenType.StartArray) || (!reader.Read()))
          {
            throw new JsonException($"InstanceComponent error reading 'version' expected StartArray, found {reader.TokenType}! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
          }

          current.Version = new List<ExampleScenario.VersionComponent>();

          while (reader.TokenType != JsonTokenType.EndArray)
          {
            Hl7.Fhir.Model.ExampleScenario.VersionComponent v_Version = new Hl7.Fhir.Model.ExampleScenario.VersionComponent();
            v_Version.DeserializeJson(ref reader, options);
            current.Version.Add(v_Version);

            if (!reader.Read())
            {
              throw new JsonException($"InstanceComponent error reading 'version' array, read failed! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
            }
            if (reader.TokenType == JsonTokenType.EndObject) { reader.Read(); }
          }

          if (current.Version.Count == 0)
          {
            current.Version = null;
          }
          break;

        case "containedInstance":
          if ((reader.TokenType != JsonTokenType.StartArray) || (!reader.Read()))
          {
            throw new JsonException($"InstanceComponent error reading 'containedInstance' expected StartArray, found {reader.TokenType}! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
          }

          current.ContainedInstance = new List<ExampleScenario.ContainedInstanceComponent>();

          while (reader.TokenType != JsonTokenType.EndArray)
          {
            Hl7.Fhir.Model.ExampleScenario.ContainedInstanceComponent v_ContainedInstance = new Hl7.Fhir.Model.ExampleScenario.ContainedInstanceComponent();
            v_ContainedInstance.DeserializeJson(ref reader, options);
            current.ContainedInstance.Add(v_ContainedInstance);

            if (!reader.Read())
            {
              throw new JsonException($"InstanceComponent error reading 'containedInstance' array, read failed! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
            }
            if (reader.TokenType == JsonTokenType.EndObject) { reader.Read(); }
          }

          if (current.ContainedInstance.Count == 0)
          {
            current.ContainedInstance = null;
          }
          break;

        // Complex: instance, Export: InstanceComponent, Base: BackboneElement
        default:
          ((Hl7.Fhir.Model.BackboneElement)current).DeserializeJsonProperty(ref reader, options, propertyName);
          break;
      }
    }

    /// <summary>
    /// Serialize a FHIR ExampleScenario#Version into JSON
    /// </summary>
    public static void SerializeJson(this Hl7.Fhir.Model.ExampleScenario.VersionComponent current, Utf8JsonWriter writer, JsonSerializerOptions options, bool includeStartObject = true)
    {
      if (includeStartObject) { writer.WriteStartObject(); }
      // Component: ExampleScenario#Version, Export: VersionComponent, Base: BackboneElement (BackboneElement)
      ((Hl7.Fhir.Model.BackboneElement)current).SerializeJson(writer, options, false);

      JsonStreamUtilities.SerializePrimitiveProperty("versionId",current.VersionIdElement,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("description",current.Description,writer,options);

      if (includeStartObject) { writer.WriteEndObject(); }
    }

    /// <summary>
    /// Deserialize JSON into a FHIR ExampleScenario#Version
    /// </summary>
    public static void DeserializeJson(this Hl7.Fhir.Model.ExampleScenario.VersionComponent current, ref Utf8JsonReader reader, JsonSerializerOptions options)
    {
      string propertyName;

      while (reader.Read())
      {
        if (reader.TokenType == JsonTokenType.EndObject)
        {
          return;
        }

        if (reader.TokenType == JsonTokenType.PropertyName)
        {
          propertyName = reader.GetString();
          if (Hl7.Fhir.Serialization.FhirSerializerOptions.Debug) { Console.WriteLine($"ExampleScenario.VersionComponent >>> ExampleScenario#Version.{propertyName}, depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}"); }
          reader.Read();
          current.DeserializeJsonProperty(ref reader, options, propertyName);
        }
      }

      throw new JsonException($"ExampleScenario.VersionComponent: invalid state! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
    }

    /// <summary>
    /// Deserialize JSON into a FHIR ExampleScenario#Version
    /// </summary>
    public static void DeserializeJsonProperty(this Hl7.Fhir.Model.ExampleScenario.VersionComponent current, ref Utf8JsonReader reader, JsonSerializerOptions options, string propertyName)
    {
      switch (propertyName)
      {
        case "versionId":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.VersionIdElement = new FhirString();
            reader.Skip();
          }
          else
          {
            current.VersionIdElement = new FhirString(reader.GetString());
          }
          break;

        case "_versionId":
          if (current.VersionIdElement == null) { current.VersionIdElement = new FhirString(); }
          ((Hl7.Fhir.Model.Element)current.VersionIdElement).DeserializeJson(ref reader, options);
          break;

        case "description":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.Description = new Markdown();
            reader.Skip();
          }
          else
          {
            current.Description = new Markdown(reader.GetString());
          }
          break;

        case "_description":
          if (current.Description == null) { current.Description = new Markdown(); }
          ((Hl7.Fhir.Model.Element)current.Description).DeserializeJson(ref reader, options);
          break;

        // Complex: version, Export: VersionComponent, Base: BackboneElement
        default:
          ((Hl7.Fhir.Model.BackboneElement)current).DeserializeJsonProperty(ref reader, options, propertyName);
          break;
      }
    }

    /// <summary>
    /// Serialize a FHIR ExampleScenario#ContainedInstance into JSON
    /// </summary>
    public static void SerializeJson(this Hl7.Fhir.Model.ExampleScenario.ContainedInstanceComponent current, Utf8JsonWriter writer, JsonSerializerOptions options, bool includeStartObject = true)
    {
      if (includeStartObject) { writer.WriteStartObject(); }
      // Component: ExampleScenario#ContainedInstance, Export: ContainedInstanceComponent, Base: BackboneElement (BackboneElement)
      ((Hl7.Fhir.Model.BackboneElement)current).SerializeJson(writer, options, false);

      JsonStreamUtilities.SerializePrimitiveProperty("resourceId",current.ResourceIdElement,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("versionId",current.VersionIdElement,writer,options);

      if (includeStartObject) { writer.WriteEndObject(); }
    }

    /// <summary>
    /// Deserialize JSON into a FHIR ExampleScenario#ContainedInstance
    /// </summary>
    public static void DeserializeJson(this Hl7.Fhir.Model.ExampleScenario.ContainedInstanceComponent current, ref Utf8JsonReader reader, JsonSerializerOptions options)
    {
      string propertyName;

      while (reader.Read())
      {
        if (reader.TokenType == JsonTokenType.EndObject)
        {
          return;
        }

        if (reader.TokenType == JsonTokenType.PropertyName)
        {
          propertyName = reader.GetString();
          if (Hl7.Fhir.Serialization.FhirSerializerOptions.Debug) { Console.WriteLine($"ExampleScenario.ContainedInstanceComponent >>> ExampleScenario#ContainedInstance.{propertyName}, depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}"); }
          reader.Read();
          current.DeserializeJsonProperty(ref reader, options, propertyName);
        }
      }

      throw new JsonException($"ExampleScenario.ContainedInstanceComponent: invalid state! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
    }

    /// <summary>
    /// Deserialize JSON into a FHIR ExampleScenario#ContainedInstance
    /// </summary>
    public static void DeserializeJsonProperty(this Hl7.Fhir.Model.ExampleScenario.ContainedInstanceComponent current, ref Utf8JsonReader reader, JsonSerializerOptions options, string propertyName)
    {
      switch (propertyName)
      {
        case "resourceId":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.ResourceIdElement = new FhirString();
            reader.Skip();
          }
          else
          {
            current.ResourceIdElement = new FhirString(reader.GetString());
          }
          break;

        case "_resourceId":
          if (current.ResourceIdElement == null) { current.ResourceIdElement = new FhirString(); }
          ((Hl7.Fhir.Model.Element)current.ResourceIdElement).DeserializeJson(ref reader, options);
          break;

        case "versionId":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.VersionIdElement = new FhirString();
            reader.Skip();
          }
          else
          {
            current.VersionIdElement = new FhirString(reader.GetString());
          }
          break;

        case "_versionId":
          if (current.VersionIdElement == null) { current.VersionIdElement = new FhirString(); }
          ((Hl7.Fhir.Model.Element)current.VersionIdElement).DeserializeJson(ref reader, options);
          break;

        // Complex: containedInstance, Export: ContainedInstanceComponent, Base: BackboneElement
        default:
          ((Hl7.Fhir.Model.BackboneElement)current).DeserializeJsonProperty(ref reader, options, propertyName);
          break;
      }
    }

    /// <summary>
    /// Serialize a FHIR ExampleScenario#Process into JSON
    /// </summary>
    public static void SerializeJson(this Hl7.Fhir.Model.ExampleScenario.ProcessComponent current, Utf8JsonWriter writer, JsonSerializerOptions options, bool includeStartObject = true)
    {
      if (includeStartObject) { writer.WriteStartObject(); }
      // Component: ExampleScenario#Process, Export: ProcessComponent, Base: BackboneElement (BackboneElement)
      ((Hl7.Fhir.Model.BackboneElement)current).SerializeJson(writer, options, false);

      JsonStreamUtilities.SerializePrimitiveProperty("title",current.TitleElement,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("description",current.Description,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("preConditions",current.PreConditions,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("postConditions",current.PostConditions,writer,options);

      JsonStreamUtilities.SerializeComplexProperty("step", current.Step, writer, options);

      if (includeStartObject) { writer.WriteEndObject(); }
    }

    /// <summary>
    /// Deserialize JSON into a FHIR ExampleScenario#Process
    /// </summary>
    public static void DeserializeJson(this Hl7.Fhir.Model.ExampleScenario.ProcessComponent current, ref Utf8JsonReader reader, JsonSerializerOptions options)
    {
      string propertyName;

      while (reader.Read())
      {
        if (reader.TokenType == JsonTokenType.EndObject)
        {
          return;
        }

        if (reader.TokenType == JsonTokenType.PropertyName)
        {
          propertyName = reader.GetString();
          if (Hl7.Fhir.Serialization.FhirSerializerOptions.Debug) { Console.WriteLine($"ExampleScenario.ProcessComponent >>> ExampleScenario#Process.{propertyName}, depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}"); }
          reader.Read();
          current.DeserializeJsonProperty(ref reader, options, propertyName);
        }
      }

      throw new JsonException($"ExampleScenario.ProcessComponent: invalid state! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
    }

    /// <summary>
    /// Deserialize JSON into a FHIR ExampleScenario#Process
    /// </summary>
    public static void DeserializeJsonProperty(this Hl7.Fhir.Model.ExampleScenario.ProcessComponent current, ref Utf8JsonReader reader, JsonSerializerOptions options, string propertyName)
    {
      switch (propertyName)
      {
        case "title":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.TitleElement = new FhirString();
            reader.Skip();
          }
          else
          {
            current.TitleElement = new FhirString(reader.GetString());
          }
          break;

        case "_title":
          if (current.TitleElement == null) { current.TitleElement = new FhirString(); }
          ((Hl7.Fhir.Model.Element)current.TitleElement).DeserializeJson(ref reader, options);
          break;

        case "description":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.Description = new Markdown();
            reader.Skip();
          }
          else
          {
            current.Description = new Markdown(reader.GetString());
          }
          break;

        case "_description":
          if (current.Description == null) { current.Description = new Markdown(); }
          ((Hl7.Fhir.Model.Element)current.Description).DeserializeJson(ref reader, options);
          break;

        case "preConditions":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.PreConditions = new Markdown();
            reader.Skip();
          }
          else
          {
            current.PreConditions = new Markdown(reader.GetString());
          }
          break;

        case "_preConditions":
          if (current.PreConditions == null) { current.PreConditions = new Markdown(); }
          ((Hl7.Fhir.Model.Element)current.PreConditions).DeserializeJson(ref reader, options);
          break;

        case "postConditions":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.PostConditions = new Markdown();
            reader.Skip();
          }
          else
          {
            current.PostConditions = new Markdown(reader.GetString());
          }
          break;

        case "_postConditions":
          if (current.PostConditions == null) { current.PostConditions = new Markdown(); }
          ((Hl7.Fhir.Model.Element)current.PostConditions).DeserializeJson(ref reader, options);
          break;

        case "step":
          if ((reader.TokenType != JsonTokenType.StartArray) || (!reader.Read()))
          {
            throw new JsonException($"ProcessComponent error reading 'step' expected StartArray, found {reader.TokenType}! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
          }

          current.Step = new List<ExampleScenario.StepComponent>();

          while (reader.TokenType != JsonTokenType.EndArray)
          {
            Hl7.Fhir.Model.ExampleScenario.StepComponent v_Step = new Hl7.Fhir.Model.ExampleScenario.StepComponent();
            v_Step.DeserializeJson(ref reader, options);
            current.Step.Add(v_Step);

            if (!reader.Read())
            {
              throw new JsonException($"ProcessComponent error reading 'step' array, read failed! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
            }
            if (reader.TokenType == JsonTokenType.EndObject) { reader.Read(); }
          }

          if (current.Step.Count == 0)
          {
            current.Step = null;
          }
          break;

        // Complex: process, Export: ProcessComponent, Base: BackboneElement
        default:
          ((Hl7.Fhir.Model.BackboneElement)current).DeserializeJsonProperty(ref reader, options, propertyName);
          break;
      }
    }

    /// <summary>
    /// Serialize a FHIR ExampleScenario#Step into JSON
    /// </summary>
    public static void SerializeJson(this Hl7.Fhir.Model.ExampleScenario.StepComponent current, Utf8JsonWriter writer, JsonSerializerOptions options, bool includeStartObject = true)
    {
      if (includeStartObject) { writer.WriteStartObject(); }
      // Component: ExampleScenario#Step, Export: StepComponent, Base: BackboneElement (BackboneElement)
      ((Hl7.Fhir.Model.BackboneElement)current).SerializeJson(writer, options, false);

      JsonStreamUtilities.SerializeComplexProperty("process", current.Process, writer, options);

      JsonStreamUtilities.SerializePrimitiveProperty("pause",current.PauseElement,writer,options);

      JsonStreamUtilities.SerializeComplexProperty("operation", current.Operation, writer, options);

      JsonStreamUtilities.SerializeComplexProperty("alternative", current.Alternative, writer, options);

      if (includeStartObject) { writer.WriteEndObject(); }
    }

    /// <summary>
    /// Deserialize JSON into a FHIR ExampleScenario#Step
    /// </summary>
    public static void DeserializeJson(this Hl7.Fhir.Model.ExampleScenario.StepComponent current, ref Utf8JsonReader reader, JsonSerializerOptions options)
    {
      string propertyName;

      while (reader.Read())
      {
        if (reader.TokenType == JsonTokenType.EndObject)
        {
          return;
        }

        if (reader.TokenType == JsonTokenType.PropertyName)
        {
          propertyName = reader.GetString();
          if (Hl7.Fhir.Serialization.FhirSerializerOptions.Debug) { Console.WriteLine($"ExampleScenario.StepComponent >>> ExampleScenario#Step.{propertyName}, depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}"); }
          reader.Read();
          current.DeserializeJsonProperty(ref reader, options, propertyName);
        }
      }

      throw new JsonException($"ExampleScenario.StepComponent: invalid state! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
    }

    /// <summary>
    /// Deserialize JSON into a FHIR ExampleScenario#Step
    /// </summary>
    public static void DeserializeJsonProperty(this Hl7.Fhir.Model.ExampleScenario.StepComponent current, ref Utf8JsonReader reader, JsonSerializerOptions options, string propertyName)
    {
      switch (propertyName)
      {
        case "process":
          if ((reader.TokenType != JsonTokenType.StartArray) || (!reader.Read()))
          {
            throw new JsonException($"StepComponent error reading 'process' expected StartArray, found {reader.TokenType}! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
          }

          current.Process = new List<ExampleScenario.ProcessComponent>();

          while (reader.TokenType != JsonTokenType.EndArray)
          {
            Hl7.Fhir.Model.ExampleScenario.ProcessComponent v_Process = new Hl7.Fhir.Model.ExampleScenario.ProcessComponent();
            v_Process.DeserializeJson(ref reader, options);
            current.Process.Add(v_Process);

            if (!reader.Read())
            {
              throw new JsonException($"StepComponent error reading 'process' array, read failed! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
            }
            if (reader.TokenType == JsonTokenType.EndObject) { reader.Read(); }
          }

          if (current.Process.Count == 0)
          {
            current.Process = null;
          }
          break;

        case "pause":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.PauseElement = new FhirBoolean();
            reader.Skip();
          }
          else
          {
            current.PauseElement = new FhirBoolean(reader.GetBoolean());
          }
          break;

        case "_pause":
          if (current.PauseElement == null) { current.PauseElement = new FhirBoolean(); }
          ((Hl7.Fhir.Model.Element)current.PauseElement).DeserializeJson(ref reader, options);
          break;

        case "operation":
          current.Operation = new Hl7.Fhir.Model.ExampleScenario.OperationComponent();
          ((Hl7.Fhir.Model.ExampleScenario.OperationComponent)current.Operation).DeserializeJson(ref reader, options);
          break;

        case "alternative":
          if ((reader.TokenType != JsonTokenType.StartArray) || (!reader.Read()))
          {
            throw new JsonException($"StepComponent error reading 'alternative' expected StartArray, found {reader.TokenType}! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
          }

          current.Alternative = new List<ExampleScenario.AlternativeComponent>();

          while (reader.TokenType != JsonTokenType.EndArray)
          {
            Hl7.Fhir.Model.ExampleScenario.AlternativeComponent v_Alternative = new Hl7.Fhir.Model.ExampleScenario.AlternativeComponent();
            v_Alternative.DeserializeJson(ref reader, options);
            current.Alternative.Add(v_Alternative);

            if (!reader.Read())
            {
              throw new JsonException($"StepComponent error reading 'alternative' array, read failed! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
            }
            if (reader.TokenType == JsonTokenType.EndObject) { reader.Read(); }
          }

          if (current.Alternative.Count == 0)
          {
            current.Alternative = null;
          }
          break;

        // Complex: step, Export: StepComponent, Base: BackboneElement
        default:
          ((Hl7.Fhir.Model.BackboneElement)current).DeserializeJsonProperty(ref reader, options, propertyName);
          break;
      }
    }

    /// <summary>
    /// Serialize a FHIR ExampleScenario#Operation into JSON
    /// </summary>
    public static void SerializeJson(this Hl7.Fhir.Model.ExampleScenario.OperationComponent current, Utf8JsonWriter writer, JsonSerializerOptions options, bool includeStartObject = true)
    {
      if (includeStartObject) { writer.WriteStartObject(); }
      // Component: ExampleScenario#Operation, Export: OperationComponent, Base: BackboneElement (BackboneElement)
      ((Hl7.Fhir.Model.BackboneElement)current).SerializeJson(writer, options, false);

      JsonStreamUtilities.SerializePrimitiveProperty("number",current.NumberElement,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("type",current.TypeElement,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("name",current.NameElement,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("initiator",current.InitiatorElement,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("receiver",current.ReceiverElement,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("description",current.Description,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("initiatorActive",current.InitiatorActiveElement,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("receiverActive",current.ReceiverActiveElement,writer,options);

      JsonStreamUtilities.SerializeComplexProperty("request", current.Request, writer, options);

      JsonStreamUtilities.SerializeComplexProperty("response", current.Response, writer, options);

      if (includeStartObject) { writer.WriteEndObject(); }
    }

    /// <summary>
    /// Deserialize JSON into a FHIR ExampleScenario#Operation
    /// </summary>
    public static void DeserializeJson(this Hl7.Fhir.Model.ExampleScenario.OperationComponent current, ref Utf8JsonReader reader, JsonSerializerOptions options)
    {
      string propertyName;

      while (reader.Read())
      {
        if (reader.TokenType == JsonTokenType.EndObject)
        {
          return;
        }

        if (reader.TokenType == JsonTokenType.PropertyName)
        {
          propertyName = reader.GetString();
          if (Hl7.Fhir.Serialization.FhirSerializerOptions.Debug) { Console.WriteLine($"ExampleScenario.OperationComponent >>> ExampleScenario#Operation.{propertyName}, depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}"); }
          reader.Read();
          current.DeserializeJsonProperty(ref reader, options, propertyName);
        }
      }

      throw new JsonException($"ExampleScenario.OperationComponent: invalid state! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
    }

    /// <summary>
    /// Deserialize JSON into a FHIR ExampleScenario#Operation
    /// </summary>
    public static void DeserializeJsonProperty(this Hl7.Fhir.Model.ExampleScenario.OperationComponent current, ref Utf8JsonReader reader, JsonSerializerOptions options, string propertyName)
    {
      switch (propertyName)
      {
        case "number":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.NumberElement = new FhirString();
            reader.Skip();
          }
          else
          {
            current.NumberElement = new FhirString(reader.GetString());
          }
          break;

        case "_number":
          if (current.NumberElement == null) { current.NumberElement = new FhirString(); }
          ((Hl7.Fhir.Model.Element)current.NumberElement).DeserializeJson(ref reader, options);
          break;

        case "type":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.TypeElement = new FhirString();
            reader.Skip();
          }
          else
          {
            current.TypeElement = new FhirString(reader.GetString());
          }
          break;

        case "_type":
          if (current.TypeElement == null) { current.TypeElement = new FhirString(); }
          ((Hl7.Fhir.Model.Element)current.TypeElement).DeserializeJson(ref reader, options);
          break;

        case "name":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.NameElement = new FhirString();
            reader.Skip();
          }
          else
          {
            current.NameElement = new FhirString(reader.GetString());
          }
          break;

        case "_name":
          if (current.NameElement == null) { current.NameElement = new FhirString(); }
          ((Hl7.Fhir.Model.Element)current.NameElement).DeserializeJson(ref reader, options);
          break;

        case "initiator":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.InitiatorElement = new FhirString();
            reader.Skip();
          }
          else
          {
            current.InitiatorElement = new FhirString(reader.GetString());
          }
          break;

        case "_initiator":
          if (current.InitiatorElement == null) { current.InitiatorElement = new FhirString(); }
          ((Hl7.Fhir.Model.Element)current.InitiatorElement).DeserializeJson(ref reader, options);
          break;

        case "receiver":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.ReceiverElement = new FhirString();
            reader.Skip();
          }
          else
          {
            current.ReceiverElement = new FhirString(reader.GetString());
          }
          break;

        case "_receiver":
          if (current.ReceiverElement == null) { current.ReceiverElement = new FhirString(); }
          ((Hl7.Fhir.Model.Element)current.ReceiverElement).DeserializeJson(ref reader, options);
          break;

        case "description":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.Description = new Markdown();
            reader.Skip();
          }
          else
          {
            current.Description = new Markdown(reader.GetString());
          }
          break;

        case "_description":
          if (current.Description == null) { current.Description = new Markdown(); }
          ((Hl7.Fhir.Model.Element)current.Description).DeserializeJson(ref reader, options);
          break;

        case "initiatorActive":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.InitiatorActiveElement = new FhirBoolean();
            reader.Skip();
          }
          else
          {
            current.InitiatorActiveElement = new FhirBoolean(reader.GetBoolean());
          }
          break;

        case "_initiatorActive":
          if (current.InitiatorActiveElement == null) { current.InitiatorActiveElement = new FhirBoolean(); }
          ((Hl7.Fhir.Model.Element)current.InitiatorActiveElement).DeserializeJson(ref reader, options);
          break;

        case "receiverActive":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.ReceiverActiveElement = new FhirBoolean();
            reader.Skip();
          }
          else
          {
            current.ReceiverActiveElement = new FhirBoolean(reader.GetBoolean());
          }
          break;

        case "_receiverActive":
          if (current.ReceiverActiveElement == null) { current.ReceiverActiveElement = new FhirBoolean(); }
          ((Hl7.Fhir.Model.Element)current.ReceiverActiveElement).DeserializeJson(ref reader, options);
          break;

        case "request":
          current.Request = new Hl7.Fhir.Model.ExampleScenario.ContainedInstanceComponent();
          ((Hl7.Fhir.Model.ExampleScenario.ContainedInstanceComponent)current.Request).DeserializeJson(ref reader, options);
          break;

        case "response":
          current.Response = new Hl7.Fhir.Model.ExampleScenario.ContainedInstanceComponent();
          ((Hl7.Fhir.Model.ExampleScenario.ContainedInstanceComponent)current.Response).DeserializeJson(ref reader, options);
          break;

        // Complex: operation, Export: OperationComponent, Base: BackboneElement
        default:
          ((Hl7.Fhir.Model.BackboneElement)current).DeserializeJsonProperty(ref reader, options, propertyName);
          break;
      }
    }

    /// <summary>
    /// Serialize a FHIR ExampleScenario#Alternative into JSON
    /// </summary>
    public static void SerializeJson(this Hl7.Fhir.Model.ExampleScenario.AlternativeComponent current, Utf8JsonWriter writer, JsonSerializerOptions options, bool includeStartObject = true)
    {
      if (includeStartObject) { writer.WriteStartObject(); }
      // Component: ExampleScenario#Alternative, Export: AlternativeComponent, Base: BackboneElement (BackboneElement)
      ((Hl7.Fhir.Model.BackboneElement)current).SerializeJson(writer, options, false);

      JsonStreamUtilities.SerializePrimitiveProperty("title",current.TitleElement,writer,options);

      JsonStreamUtilities.SerializePrimitiveProperty("description",current.Description,writer,options);

      JsonStreamUtilities.SerializeComplexProperty("step", current.Step, writer, options);

      if (includeStartObject) { writer.WriteEndObject(); }
    }

    /// <summary>
    /// Deserialize JSON into a FHIR ExampleScenario#Alternative
    /// </summary>
    public static void DeserializeJson(this Hl7.Fhir.Model.ExampleScenario.AlternativeComponent current, ref Utf8JsonReader reader, JsonSerializerOptions options)
    {
      string propertyName;

      while (reader.Read())
      {
        if (reader.TokenType == JsonTokenType.EndObject)
        {
          return;
        }

        if (reader.TokenType == JsonTokenType.PropertyName)
        {
          propertyName = reader.GetString();
          if (Hl7.Fhir.Serialization.FhirSerializerOptions.Debug) { Console.WriteLine($"ExampleScenario.AlternativeComponent >>> ExampleScenario#Alternative.{propertyName}, depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}"); }
          reader.Read();
          current.DeserializeJsonProperty(ref reader, options, propertyName);
        }
      }

      throw new JsonException($"ExampleScenario.AlternativeComponent: invalid state! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
    }

    /// <summary>
    /// Deserialize JSON into a FHIR ExampleScenario#Alternative
    /// </summary>
    public static void DeserializeJsonProperty(this Hl7.Fhir.Model.ExampleScenario.AlternativeComponent current, ref Utf8JsonReader reader, JsonSerializerOptions options, string propertyName)
    {
      switch (propertyName)
      {
        case "title":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.TitleElement = new FhirString();
            reader.Skip();
          }
          else
          {
            current.TitleElement = new FhirString(reader.GetString());
          }
          break;

        case "_title":
          if (current.TitleElement == null) { current.TitleElement = new FhirString(); }
          ((Hl7.Fhir.Model.Element)current.TitleElement).DeserializeJson(ref reader, options);
          break;

        case "description":
          if (reader.TokenType == JsonTokenType.Null)
          {
            current.Description = new Markdown();
            reader.Skip();
          }
          else
          {
            current.Description = new Markdown(reader.GetString());
          }
          break;

        case "_description":
          if (current.Description == null) { current.Description = new Markdown(); }
          ((Hl7.Fhir.Model.Element)current.Description).DeserializeJson(ref reader, options);
          break;

        case "step":
          if ((reader.TokenType != JsonTokenType.StartArray) || (!reader.Read()))
          {
            throw new JsonException($"AlternativeComponent error reading 'step' expected StartArray, found {reader.TokenType}! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
          }

          current.Step = new List<ExampleScenario.StepComponent>();

          while (reader.TokenType != JsonTokenType.EndArray)
          {
            Hl7.Fhir.Model.ExampleScenario.StepComponent v_Step = new Hl7.Fhir.Model.ExampleScenario.StepComponent();
            v_Step.DeserializeJson(ref reader, options);
            current.Step.Add(v_Step);

            if (!reader.Read())
            {
              throw new JsonException($"AlternativeComponent error reading 'step' array, read failed! depth: {reader.CurrentDepth}, pos: {reader.BytesConsumed}");
            }
            if (reader.TokenType == JsonTokenType.EndObject) { reader.Read(); }
          }

          if (current.Step.Count == 0)
          {
            current.Step = null;
          }
          break;

        // Complex: alternative, Export: AlternativeComponent, Base: BackboneElement
        default:
          ((Hl7.Fhir.Model.BackboneElement)current).DeserializeJsonProperty(ref reader, options, propertyName);
          break;
      }
    }

    /// <summary>
    /// Resource converter to support Sytem.Text.Json interop.
    /// </summary>
    public class ExampleScenarioJsonConverter : JsonConverter<Hl7.Fhir.Model.ExampleScenario>
    {
      /// <summary>
      /// Writes a specified value as JSON.
      /// </summary>
      public override void Write(Utf8JsonWriter writer, Hl7.Fhir.Model.ExampleScenario value, JsonSerializerOptions options)
      {
        value.SerializeJson(writer, options, true);
        writer.Flush();
      }
      /// <summary>
      /// Reads and converts the JSON to a typed object.
      /// </summary>
      public override Hl7.Fhir.Model.ExampleScenario Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
      {
        var target = new Hl7.Fhir.Model.ExampleScenario();
        target.DeserializeJson(ref reader, options);
        return target;
      }
    }
  }

}

// end of file
