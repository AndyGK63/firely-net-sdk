# Repo: FirelyTeam/firely-net-sdk
# File: build/templates/test-job-template.yml
parameters:
- name: testRunTitle
  default: 'Test'
- name: buildConfiguration
  default: 'Release'
- name: projects

jobs:
- job: fhirClientTestJob
  timeoutInMinutes: 120
  cancelTimeoutInMinutes: 1
  displayName: ${{ parameters.testRunTitle }}
  steps:
  - checkout: none
  - bash: |
      cat > docker-compose.yml << EOF 
      version: "3"
      services:
        firelyserver:
          image: "simplifier/vonk"
          ports:
          - "8080:4080"
          volumes:
            - ./firelyserver-license.json:/app/firelyserver-license.json
      EOF
    displayName: 'Create docker-compose file'
  - task: DownloadSecureFile@1
    displayName: Download license file for Firely Server
    inputs:
      secureFile: firelyserver-license.json
      retryCount: 5
  - task: CopyFiles@2
    displayName: Copy license file to working directory
    inputs:
      SourceFolder: $(Agent.TempDirectory)
      Contents: firelyserver-license.json
      TargetFolder: $(System.DefaultWorkingDirectory)
  - task: DockerCompose@0
    displayName: 'Start Firely Server'
    inputs:
      containerregistrytype: 'Container Registry'
      dockerComposeFile: 'docker-compose.yml'
      action: 'Run a Docker Compose command'
      dockerComposeCommand: 'up -d' 

  - powershell: |
      Write-Host "Waiting 20s"

      Start-Sleep -s 20
      
      Write-Host "Invoking Patient request"

      $Response = Invoke-WebRequest -Uri "http://localhost:8080/metadata?_elements=status"

      Write-Host "Done web request"

      Write-Host "$Response"
    displayName: 'Test request Firely Server'
  - task: DownloadPipelineArtifact@2
    inputs:
      displayName: Download Build artifacts
      artifact: 'TestBuild'
      path: $(System.DefaultWorkingDirectory)/TestBuild
      
  - task: DotNetCoreCLI@2
    displayName: Running unit tests
    inputs:
      command: test
      projects: ${{ parameters.projects }}
      arguments: '--configuration ${{ parameters.buildConfiguration }} --no-build -f netcoreapp2.1 --filter TestCategory=IntegrationTest|TestCategory=FhirClient --collect "Code coverage"'
      testRunTitle: ${{ parameters.testRunTitle }}
    env:
      FHIR_ENDPOINT: http://localhost:8080

  - task: DockerCompose@0
    displayName: 'Shutdown Firely Server'
    condition: always()
    inputs:
      containerregistrytype: 'Container Registry'
      dockerComposeFile: 'docker-compose.yml'
      action: 'Run a Docker Compose command'
      dockerComposeCommand: 'down'
  - task: DeleteFiles@1
    displayName: 'Remove License file from working directory'
    inputs:
      SourceFolder: (System.DefaultWorkingDirectory)
      Contents: 'firelyserver-license.json' 
