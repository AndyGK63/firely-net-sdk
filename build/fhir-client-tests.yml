# Repo: FirelyTeam/firely-net-sdk
# File: build/templates/test-job-template.yml
parameters:
- name: testRunTitle
  default: 'Test'
- name: buildConfiguration
  default: 'Debug'
- name: projects
- name: filter


jobs:
- job: fhirClientTestJob
  timeoutInMinutes: 120
  cancelTimeoutInMinutes: 1
  displayName: ${{ parameters.testRunTitle }}
  steps:
  - checkout: self
    fetchDepth: 1
  - task: DownloadSecureFile@1
    displayName: Download license key for Firely Server
    inputs:
      secureFile: firelyserver-license.json
      retryCount: 5
#  - task: CopyFiles@2
#    displayName: Copy license key to $(Pipeline.Workspace)
#    inputs:
#      SourceFolder: $(Agent.TempDirectory)
#      Contents: firelyserver-license.json
#      TargetFolder: $(Pipeline.Workspace)
  - task: DockerCompose@0
    displayName: 'Start Firely Server'
    inputs:
      containerregistrytype: 'Container Registry'
      dockerComposeFile: 'build/docker-compose.yml'
      action: 'Run a Docker Compose command'
      dockerComposeCommand: 'up -d' 

  - task: DownloadPipelineArtifact@2
    inputs:
      displayName: Download Build artifacts
      artifact: 'TestBuild'
      path: $(System.DefaultWorkingDirectory)/TestBuild
      
  - task: DotNetCoreCLI@2
    displayName: Running unit tests
    inputs:
      command: test
      projects: ${{ parameters.projects }}
      arguments: '--configuration ${{ parameters.buildConfiguration }} --no-build -f netcoreapp2.1 --filter ${{ parameters.filter }} --collect "Code coverage"'
      testRunTitle: ${{ parameters.testRunTitle }}

  - task: DockerCompose@0
    displayName: 'Shutdown Firely Server'
    condition: always()
    inputs:
      containerregistrytype: 'Container Registry'
      dockerComposeFile: 'docker-compose.yml'
      action: 'Run a Docker Compose command'
      dockerComposeCommand: 'down'